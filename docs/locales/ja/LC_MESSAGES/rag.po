# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2024, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-06 22:50+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1 f6d51a46c658482a9f8cd1bee55e06c4
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1 311a2aeed3694e1890439a59d677f830
msgid ""
"PyMuPDF is a high-performance Python library for data extraction, "
"analysis, conversion & manipulation of PDF (and other) documents."
msgstr "PyMuPDFは、PDF（およびその他）ドキュメントのデータ抽出、解析、変換、および操作のための高性能なPythonライブラリです。"

#: ../../header.rst:-1 377dd1ad210c47efb9dd30e622ed09ae
msgid ""
"PDF Text Extraction, PDF Image Extraction, PDF Conversion, PDF Tables, "
"PDF Splitting, PDF Creation, Pyodide, PyScript"
msgstr "PDFテキスト抽出、PDF画像抽出、PDF変換、PDFテーブル、PDF分割、PDF作成、Pyodide、PyScript"

#: ../../rag.rst:6 8a22c38f632d4c43bc933984d03ecaaa
msgid "PyMuPDF, LLM & RAG"
msgstr "PyMuPDF、LLM、およびRAG"

#: ../../rag.rst:9 fb6c1a61bbe74debb557a169e3ee2f7f
msgid ""
"Integrating |PyMuPDF| into your :title:`Large Language Model (LLM)` "
"framework and overall :title:`RAG (Retrieval-Augmented Generation`) "
"solution provides the fastest and most reliable way to deliver document "
"data."
msgstr ""
"|PyMuPDF| を :title:`大規模言語モデル（LLM）` フレームワークおよび全体的な :title:`RAG（Retrieval-"
"Augmented Generation）` ソリューションに統合することで、文書データを提供する最も高速かつ信頼性の高い方法が提供されます。"

#: ../../rag.rst:11 d0f3bc9f1f5b494a8276874a8a79dd1e
msgid ""
"There are a few well known :title:`LLM` solutions which have their own "
"interfaces with |PyMuPDF| - it is a fast growing area, so please let us "
"know if you discover any more!"
msgstr ""
"いくつかのよく知られた :title:`LLM` ソリューションは、|PyMuPDF| "
"と独自のインターフェースを持っています。この分野は急速に成長しているため、もっと見つけた場合はお知らせください。"

#: ../../rag.rst:15 ce3718b07fd1449f8e62222fef8a928e
msgid "Integration with :title:`LangChain`"
msgstr ":title:`LangChain` との統合"

#: ../../rag.rst:17 9f163c8f4302436a9b6742393313842b
msgid ""
"It is simple to integrate directly with :title:`LangChain` by using their"
" dedicated loader as follows:"
msgstr ":title:`LangChain` の専用ローダーを使用して直接統合するのは簡単です。以下のようにします："

#: ../../rag.rst:27 81ccc55536d54e2e8a87c86c86e00dcc
msgid ""
"See `LangChain Using PyMuPDF "
"<https://python.langchain.com/docs/modules/data_connection/document_loaders/pdf"
"/#using-pymupdf>`_ for full details."
msgstr ""
"`LangChainを完全に利用する詳細については、PyMuPDF "
"<https://python.langchain.com/docs/modules/data_connection/document_loaders/pdf"
"/#using-pymupdf>`_ を参照してください。"

#: ../../rag.rst:31 7e118bff3aea45fca2d504652634c7bd
msgid "Integration with :title:`LlamaIndex`"
msgstr ":title:`LlamaIndex` との統合"

#: ../../rag.rst:34 d3e4e161b1b94f2ead425465d6c030ce
msgid ""
"Use the dedicated `PyMuPDFReader` from :title:`LlamaIndex` 🦙 to manage "
"your document loading."
msgstr ":title:`LlamaIndex` 🦙 の専用 `PyMuPDFReader` を使用して、文書の読み込みを管理します。"

#: ../../rag.rst:42 123bb6c9084c44a9895c98f8640368ad
msgid ""
"See `Building RAG from Scratch "
"<https://docs.llamaindex.ai/en/stable/examples/low_level/oss_ingestion_retrieval>`_"
" for more."
msgstr ""
"詳細は、 `ゼロからRAGを構築する "
"<https://docs.llamaindex.ai/en/stable/examples/low_level/oss_ingestion_retrieval>`_"
"  をご覧ください。"

#: ../../rag.rst:46 4cc63d8f22314a0b91d28a7debd5c671
msgid "Preparing Data for Chunking"
msgstr "データのチャンキングの準備"

#: ../../rag.rst:48 80df6ff708d54dbea60b0f9520395a91
msgid ""
"Chunking (or splitting) data is essential to give context to your "
":title:`LLM` data and with :title:`Markdown` output now supported by "
"|PyMuPDF| this means that `Level 3 chunking "
"<https://medium.com/@anuragmishra_27746/five-levels-of-chunking-"
"strategies-in-rag-notes-from-gregs-video-7b735895694d#b123>`_ is "
"supported."
msgstr ""
"データのチャンキング（または分割）は、:title:`LLM` データに文脈を与えるために不可欠であり、|PyMuPDF| が "
":title:`Markdown` 出力をサポートするようになったことで、`レベル3のチャンキング "
"<https://medium.com/@anuragmishra_27746/five-levels-of-chunking-"
"strategies-in-rag-notes-from-gregs-video-7b735895694d#b123>`_ "
"がサポートされることを意味します。"

#: ../../rag.rst:55 e4324afad3434b169d753170ba649b6b
msgid "Outputting as :title:`Markdown`"
msgstr ":title:`Markdown` 形式で出力"

#: ../../rag.rst:57 8fd30bbf306b4b40812b8c1e37974bd8
msgid ""
"In order to export your document in :title:`Markdown` format you will "
"need a separate helper. Package `pymupdf4llm "
"<https://pypi.org/project/pymupdf4llm/>`_ is a high-level wrapper of "
"|PyMuPDF| functions which for each page outputs standard and table text "
"in an integrated Markdown-formatted string across all document pages:"
msgstr ""
":title:`Markdown` 形式で文書をエクスポートするには、別途のヘルパーが必要です。パッケージ `pymupdf4llm "
"<https://pypi.org/project/pymupdf4llm/>`_ "
"は、各ページに対して標準テキストとテーブルテキストを統合されたMarkdown形式の文字列で出力する、|PyMuPDF| "
"関数の高レベルなラッパーです。"

#: ../../rag.rst:71 ed5f2d4e2582496ca93604bd756feb2d
msgid ""
"For further information please refer to: `pymupdf4llm documentation "
"<https://pymupdf4llm.readthedocs.io>`_"
msgstr "詳細については、次を参照してください： `pymupdf4llmのドキュメント <https://pymupdf4llm.readthedocs.io>`_。"

#: ../../rag.rst:75 f764829a4640494491ba9d9f1b8cbf68
msgid "How to use :title:`Markdown` output"
msgstr ":title:`Markdown` 出力の使用方法"

#: ../../rag.rst:77 ca36b0e251d4402bb706996bb8d46bcf
msgid ""
"Once you have your data in :title:`Markdown` format you are ready to "
"chunk/split it and supply it to your :title:`LLM`, for example, if this "
"is :title:`LangChain` then do the following:"
msgstr ""
":title:`Markdown` 形式のデータが準備できたら、データをチャンク化/分割して :title:`LLM` "
"に供給する準備が整います。例えば、:title:`LangChain` の場合は、次の手順を行います。"

#: ../../rag.rst:93 421ccd4498584c7899eea6f29702fbeb
msgid ""
"For more see `5 Levels of Text Splitting <https://github.com"
"/FullStackRetrieval-"
"com/RetrievalTutorials/blob/main/tutorials/LevelsOfTextSplitting/5_Levels_Of_Text_Splitting.ipynb>`_"
msgstr ""
"詳細は `「テキスト分割の5レベル」 <https://github.com/FullStackRetrieval-"
"com/RetrievalTutorials/blob/main/tutorials/LevelsOfTextSplitting/5_Levels_Of_Text_Splitting.ipynb>`_"
"  を参照してください。"

#: ../../rag.rst:97 6af7ba7938154d6bad81580b2f86dcb5
msgid "Related Blogs"
msgstr "関連ブログ"

#: ../../rag.rst:99 9984a4f91e004f33995d3a5bad8e6c9a
msgid ""
"To find out more about |PyMuPDF|, :title:`LLM` & :title:`RAG` check out "
"our blogs for implementations & tutorials."
msgstr ""
"|PyMuPDF| 、 :title:`LLM` 、および :title:`RAG` "
"について詳しく知りたい場合は、実装やチュートリアルに関するブログをチェックしてください。"

#: ../../rag.rst:103 1e829ae3afe14e2bb479b933c64924d1
msgid "Methodologies to Extract Text"
msgstr "テキストを抽出するための方法論"

#: ../../rag.rst:105 2f3c93685096465cb9f09aef2debf7ff
msgid ""
"`Enhanced Text Extraction <https://artifex.com/blog/rag-llm-and-pdf-"
"enhanced-text-extraction>`_"
msgstr "`テキスト抽出の強化 <https://qiita.com/jamie-lemon/items/455e14f83b4f5c81034b>`_ "

#: ../../rag.rst:106 9bfb7957c61c4785b68abb7fe2ae069a
msgid ""
"`Conversion to Markdown Text with PyMuPDF <https://artifex.com/blog/rag-"
"llm-and-pdf-conversion-to-markdown-text-with-pymupdf>`_"
msgstr ""
"`PyMuPDFを使用したMarkdownテキストへの変換 <https://qiita.com/jamie-"
"lemon/items/1f2eb43f439fd28202a0>`_"

#: ../../rag.rst:111 76ae2ede61174cac88ea9b689d4a7f19
msgid "Create a Chatbot to discuss your documents"
msgstr "文書を議論するためのチャットボットを作成する"

#: ../../rag.rst:113 feae8451ffee4a0fba68ea4fa60855b5
msgid ""
"`Make a simple command line Chatbot <https://artifex.com/blog/creating-a"
"-rag-chatbot-with-chatgpt-and-pymupdf>`_"
msgstr ""
"`シンプルなコマンドラインのチャットボットを作成するシンプルなコマンドラインのチャットボットを作成する <https://qiita.com"
"/jamie-lemon/items/df6703906392ae8295f3>`_"

#: ../../rag.rst:114 2a89aeb3b6dd48a290b4b7bc219e7c9d
msgid ""
"`Make a Chatbot GUI <https://artifex.com/blog/building-a-rag-chatbot-gui-"
"with-the-chatgpt-api-and-pymupdf>`_"
msgstr ""
"`チャットボットGUIを作成する <https://qiita.com/jamie-"
"lemon/items/f075ae56cf56723c9409>`_"

#: ../../footer.rst:60 e4c1f5b563bf4584a305d6c22f23ad26
msgid "This documentation covers all versions up to |version|."
msgstr "このドキュメントは、|version| までのすべてのバージョンをカバーしています。"

#: ../../footer.rst:-1 8438e78af48e4ee9998ad98b94b3e141
msgid "Discord logo"
msgstr ""

