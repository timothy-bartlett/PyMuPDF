# PyMuPDF Japanese documentation
# Copyright (C) 2015-2023, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# Jamie Lemon <jamie.lemon@artifex.com>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.23.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-28 14:54+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Suzan Sanver <suzan.sanver@dijipiji.com>\n"
"Language: ja\n"
"Language-Team: ja <suzan.sanver@dijipiji.com>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1
msgid "PyMuPDF is a high-performance Python library for data extraction, analysis, conversion & manipulation of PDF (and other) documents."
msgstr "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"

#: ../../header.rst:-1
msgid "PDF Text Extraction, PDF Image Extraction, PDF Conversion, PDF Tables, PDF Splitting, PDF Creation, Pyodide, PyScript"
msgstr "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"

#: ../../recipes-text.rst:7 f4e9a19fe8d043edbf08d213d4e5ead0
msgid "Text"
msgstr "テキスト"

#: ../../recipes-text.rst:13 8b79d3d443954d5db968ce5fc973dd58
msgid "How to Extract all Document Text"
msgstr "すべてのドキュメントテキストを抽出する方法"

#: ../../recipes-text.rst:15 d0c50cbff3484664a2169dd391d9b5d9
msgid ""
"This script will take a document filename and generate a text file from "
"all of its text."
msgstr "このスクリプトは、ドキュメントのファイル名を受け取り、そのテキストからテキストファイルを生成します。"

#: ../../recipes-text.rst:17 faa18d6e06f94c1d830dcbcbbc2ec1eb
msgid "The document can be any :ref:`supported type<Supported_File_Types>`."
msgstr "ドキュメントは、:ref:`サポートされている <Supported_File_Types>` 任意のタイプのものが使用できます。"

#: ../../recipes-text.rst:19 92a0671a516b44649c8edac363b4b914
msgid ""
"The script works as a command line tool which expects the document "
"filename supplied as a parameter. It generates one text file named "
"\"filename.txt\" in the script directory. Text of pages is separated by a"
" form feed character::"
msgstr "このスクリプトはコマンドラインツールとして機能し、ドキュメントのファイル名をパラメータとして受け取ります。スクリプトのディレクトリに「filename.txt」という名前のテキストファイルが生成されます。ページのテキストはフォームフィード文字で区切られます。"

#: ../../recipes-text.rst:28 b39442cf4ad84bee842e1fb1ff4c05d8
msgid ""
"The output will be plain text as it is coded in the document. No effort "
"is made to prettify in any way. Specifically for PDF, this may mean "
"output not in usual reading order, unexpected line breaks and so forth."
msgstr "出力はドキュメント内でコード化された通りのプレーンテキストになるため、見栄えの調整は行いません。特にPDFの場合、通常の読み順にならない出力や予期せぬ改行などが発生するかもしれません。"

#: ../../recipes-text.rst:30 9536ef7384754d45ac972fa891c0357c
msgid ""
"You have many options to rectify this -- see chapter :ref:`Appendix2`. "
"Among them are:"
msgstr ""
"これを修正するための多くのオプションがあります。詳細は :ref:`Appendix2` "
"章「埋め込みファイルに関する考慮事項」を参照してください。以下の方法があります："

#: ../../recipes-text.rst:32 549d5d8c5bf947f8a2a235f58ac3ddca
msgid ""
"Extract text in HTML format and store it as a HTML document, so it can be"
" viewed in any browser."
msgstr "テキストをHTML形式で抽出し、HTMLドキュメントとして保存することで、任意のブラウザで表示できるようにします。"

#: ../../recipes-text.rst:33 d9acd9b50d6148e784ad57d46ef18909
msgid ""
"Extract text as a list of text blocks via *Page.get_text(\"blocks\")*. "
"Each item of this list contains position information for its text, which "
"can be used to establish a convenient reading order."
msgstr "Page.get_text(\"blocks\")を使ってテキストブロックのリストとして抽出します。リストの各アイテムにはテキストの位置情報が含まれており、便利な読み順を確立するのに使用できます。"

#: ../../recipes-text.rst:34 93ca4eae0ac443be92088e7585eba22e
msgid ""
"Extract a list of single words via *Page.get_text(\"words\")*. Its items "
"are words with position information. Use it to determine text contained "
"in a given rectangle -- see next section."
msgstr "Page.get_text(\"words\")を使って単語のリストを抽出します。各アイテムには位置情報が含まれています。これを使用して特定の四角形に含まれるテキストを決定します。"

#: ../../recipes-text.rst:36 ee898de82bb545f7b4371496df6e46c4
msgid "See the following two sections for examples and further explanations."
msgstr "以下の2つのセクションを見て、例と詳細な説明をご覧ください。"

#: ../../recipes-text.rst:46 a13a5a789a464093a1e9ee9a6a03571f
msgid "How to Extract Key-Value Pairs from a Page"
msgstr "ページからキーと値のペアを抽出する方法"

#: ../../recipes-text.rst:47 b6b6cc9dc8a14edf95e61a00c463ca49
msgid ""
"If the layout of a page is *\"predictable\"* in some sense, then there is"
" a simple way to find the values for a given set of keywords fast and "
"easily -- without using regular expressions. Please see `this "
"<https://github.com/pymupdf/PyMuPDF-Utilities/tree/master/text-extraction"
"/lookup-keywords.py>`_ example script."
msgstr ""
"もしページのレイアウトがある程度予測可能であれば、正規表現を使用せずに、特定のキーワードに対する値を迅速かつ簡単に見つける方法があります。 "
"`以下の例のスクリプト <https://github.com/pymupdf/PyMuPDF-Utilities/tree/master"
"/text-extraction/lookup-keywords.py>`_ を参照してください。"

#: ../../recipes-text.rst:49 c4edd19e871a4c82b0cbcadaff134f2b
msgid "\"Predictable\" in this context means:"
msgstr "ここでの「予測可能」とは、次のような意味です："

#: ../../recipes-text.rst:51 5e318f5524e44cde9591ebad3d87bb46
msgid ""
"Every keyword is followed by its value -- no other text is present in "
"between them."
msgstr "各キーワードの後にはその値が続きます。それらの間に他のテキストはありません。"

#: ../../recipes-text.rst:52 b30a0c26594546e9bd1ea28d60963f96
msgid ""
"The bottom of the value's boundary box is **not above** the one of the "
"keyword."
msgstr "値の境界ボックスの下端は、キーワードの境界ボックスよりも上にありません。"

#: ../../recipes-text.rst:53 ba22510613ad4d2784fb9e316860a571
msgid ""
"There are **no other restrictions**: the page layout may or may not be "
"fixed, and the text may also have been stored as one string. Key and "
"value may have any distance from each other."
msgstr "他の制約はありません：ページのレイアウトが固定されているかどうかは問いませんし、テキストは1つの文字列として保存されている可能性もあります。キーと値はお互いに任意の距離を持つかもしれません。"

#: ../../recipes-text.rst:55 325ef9f7a3ab4e3aba0349fb09f7aad4
msgid ""
"For example, the following five key-value pairs will be correctly "
"identified::"
msgstr "例として、以下の5つのキーと値のペアが正しく識別されます::"

#: ../../recipes-text.rst:71 1e245621186e496da12babdc4a8ae4f9
msgid "How to Extract Text from within a Rectangle"
msgstr "四角形内のテキストを抽出する方法"

#: ../../recipes-text.rst:72 9def56bd977f4e2e9426b8719c9782c2
msgid ""
"There is now (v1.18.0) more than one way to achieve this. We therefore "
"have created a `folder <https://github.com/pymupdf/PyMuPDF-"
"Utilities/tree/master/textbox-extraction>`_ in the PyMuPDF-Utilities "
"repository specifically dealing with this topic."
msgstr ""
"現在（v1.18.0）では、これを実現するための複数の方法があります。そのため、私たちは `PyMuPDF-Utilities "
"<https://github.com/pymupdf/PyMuPDF-Utilities/tree/master/textbox-"
"extraction>`_ リポジトリに、この特定のトピックに対応するフォルダを作成しました。"

#: ../../recipes-text.rst:82 d7dda6ebc60a4424ab428b8c30331471
msgid "How to Extract Text in Natural Reading Order"
msgstr "自然な読み順でテキストを抽出する方法"

#: ../../recipes-text.rst:84 3f64bcce395042f3933f90d4f025f308
msgid ""
"One of the common issues with PDF text extraction is, that text may not "
"appear in any particular reading order."
msgstr "PDFのテキスト抽出によくある問題の1つは、テキストが特定の読み順に表示されないことです。"

#: ../../recipes-text.rst:86 81a2dd2f34fd433980b34886e7ea63ce
msgid ""
"This is the responsibility of the PDF creator (software or a human). For "
"example, page headers may have been inserted in a separate step -- after "
"the document had been produced. In such a case, the header text will "
"appear at the end of a page text extraction (although it will be "
"correctly shown by PDF viewer software). For example, the following "
"snippet will add some header and footer lines to an existing PDF::"
msgstr "これはPDFの作成者（ソフトウェアまたは人間）の責任です。たとえば、ページヘッダーはドキュメントが作成された後の別のステップで挿入された可能性があります。そのような場合、ヘッダーテキストはページテキストの抽出の最後に表示されることがあります（ただし、PDFビューアソフトウェアでは正しく表示されます）。以下のスニペットは、既存のPDFにいくつかのヘッダーとフッターの行を追加します::"

#: ../../recipes-text.rst:98 ffad5c544c3f41cfb20c3eb3198118c4
msgid ""
"The text sequence extracted from a page modified in this way will look "
"like this:"
msgstr "このように変更されたページから抽出されたテキストのシーケンスは次のようになります："

#: ../../recipes-text.rst:100 5cf762e3abb5484087c762db1cb3986c
msgid "original text"
msgstr "元のテキスト"

#: ../../recipes-text.rst:101 0a23b2bf0dde44e0ba0292822d9ae05a
msgid "header line"
msgstr "ヘッダーライン"

#: ../../recipes-text.rst:102 9776233a9f2e477c9a9b512f301be9db
msgid "footer line"
msgstr "フッターライン"

#: ../../recipes-text.rst:104 cad5d1fb5bab48c1b6a70dc614ba82b0
msgid ""
"PyMuPDF has several means to re-establish some reading sequence or even "
"to re-generate a layout close to the original:"
msgstr "PyMuPDFには、いくつかの方法で読み順を再確立したり、元のレイアウトに近い形で再生成する手段があります："

#: ../../recipes-text.rst:106 306acb0e0309408a9a7c6ef0a9cdf704
msgid ""
"Use `sort` parameter of :meth:`Page.get_text`. It will sort the output "
"from top-left to bottom-right (ignored for XHTML, HTML and XML output)."
msgstr ""
":meth:`Page.get_text` の `sort` "
"パラメーターを使用します。これにより、出力が左上から右下に向かってソートされます（XHTML、HTML、XML出力には無効です）。"

#: ../../recipes-text.rst:107 1f2fc76413b6490eb0150bf436e63427
msgid ""
"Use the `fitz` module in CLI: `python -m fitz gettext ...`, which "
"produces a text file where text has been re-arranged in layout-preserving"
" mode. Many options are available to control the output."
msgstr ""
"CLIでfitzモジュールを使用します： `python -m fitz gettext ...` "
"。これにより、テキストがレイアウトを保持するモードで再配置されたテキストファイルが生成されます。出力を制御するための多くのオプションが利用可能です。"

#: ../../recipes-text.rst:109 056a65ef6bb94dc285b5a9972d640892
msgid ""
"You can also use the above mentioned `script "
"<https://github.com/pymupdf/PyMuPDF/wiki/How-to-extract-text-"
"from-a-rectangle>`_ with your modifications."
msgstr ""
"また、上記の `スクリプト <https://github.com/pymupdf/PyMuPDF/wiki/How-to-extract-"
"text-from-a-rectangle>`_ を自分の変更とともに使用することもできます。"

#: ../../recipes-text.rst:116 e444359264cc4541b3396f71651f14ea
msgid ""
"How to :index:`Extract Table Content <pair: extract; table>` from "
"Documents"
msgstr "ドキュメントから表の内容を抽出する方法"

#: ../../recipes-text.rst:117 0c80a0ebdb9045dab2fcae714865d66d
msgid ""
"If you see a table in a document, you are normally not looking at "
"something like an embedded Excel or other identifiable object. It usually"
" is just normal, standard text, formatted to appear as tabular data."
msgstr "文書で表を見る場合、通常は埋め込まれたExcelなどの識別可能なオブジェクトのようなものではありません。通常、単なる通常の標準テキストで、表のデータとして表示されるようにフォーマットされています。"

#: ../../recipes-text.rst:119 91926992ea514f55b18cb13c83561533
msgid ""
"Extracting tabular data from such a page area therefore means that you "
"must find a way to **identify** the table area (i.e. its boundary box), "
"then **(1)** graphically indicate table and column borders, and **(2)** "
"then extract text based on this information."
msgstr "したがって、そのようなページ領域から表のデータを抽出するには、まず表の領域（つまり、その境界ボックス）を特定する方法を見つける必要があり、その後（1）グラフィカルに表と列の境界を示し、（2）この情報に基づいてテキストを抽出する必要があります。"

#: ../../recipes-text.rst:121 f8dd5f65f034492eb6ac40d171fb4a5b
msgid ""
"This can be a very complex task, depending on details like the presence "
"or absence of lines, rectangles or other supporting vector graphics."
msgstr "これは、線、四角形、またはその他のサポートベクトルグラフィックの存在または不在などの詳細に依存するため、非常に複雑なタスクになる可能性があります。"

#: ../../recipes-text.rst:123 338455f53f984f9392fa780df256eb94
msgid ""
"Method :meth:`Page.find_tables` does all that for you, with a high table "
"detection precision. Its great advantage is that there are no external "
"library dependencies, nor the need to employ artificial intelligence or "
"machine learning technologies. It also provides an integrated interface "
"to the well-known Python package for data analysis `pandas "
"<https://pypi.org/project/pandas/>`_."
msgstr ""
"Method :meth:`Page.find_tables` "
"は、高い表検出精度を備えて、すべてをあなたのために行います。その大きな利点は、外部ライブラリの依存関係がないこと、人工知能や機械学習技術を使用する必要がないことです。また、データ分析のためのPythonパッケージである"
" `pandas <https://pypi.org/project/pandas/>`_ のための統合されたインターフェースも提供します。"

#: ../../recipes-text.rst:125 2182d562aaf34d1492f99cbcfe142648
msgid ""
"Please have a look at example `Jupyter notebooks "
"<https://github.com/pymupdf/PyMuPDF-Utilities/tree/master/table-"
"analysis>`_, which cover standard situations like multiple tables on one "
"page or joining table fragments across multiple pages."
msgstr ""
"標準的な状況をカバーする例の `Jupyter <https://github.com/pymupdf/PyMuPDF-"
"Utilities/tree/master/table-analysis>`_ "
"ノートブックをご覧いただければ幸いです。これには、1つのページに複数の表や複数のページにまたがる表の断片を結合するなどの状況が含まれています。"

#: ../../recipes-text.rst:132 2564058e24594ce897d03a83c3e60601
msgid "How to Mark Extracted Text"
msgstr "抽出したテキストをマークする方法"

#: ../../recipes-text.rst:133 94ff376796e64352899df602a51f127e
msgid ""
"There is a standard search function to search for arbitrary text on a "
"page: :meth:`Page.search_for`. It returns a list of :ref:`Rect` objects "
"which surround a found occurrence. These rectangles can for example be "
"used to automatically insert annotations which visibly mark the found "
"text."
msgstr ""
"ページ上で任意のテキストを検索するための標準的な検索機能があります:  :meth:`Page.search_for` "
"です。これは、見つかったテキストを囲む :ref:`Rect` "
"オブジェクトのリストを返します。これらの四角形は、見つかったテキストを目に見えるようにマークするために自動的に注釈を挿入するのに使用できます。"

#: ../../recipes-text.rst:135 80908412b5db4fccbe111896ea061616
msgid "This method has advantages and drawbacks. Pros are:"
msgstr "この方法には利点と欠点があります。利点は次のとおりです："

#: ../../recipes-text.rst:137 1ac19cc1bdce4cb1b0fd585865ce88fd
msgid "The search string can contain blanks and wrap across lines"
msgstr "検索文字列には空白を含めることができ、行をまたぐことができます。"

#: ../../recipes-text.rst:138 62440d59c24f4412b39681b8670ec5b5
msgid "Upper or lower case characters are treated equal"
msgstr "大文字と小文字は同じように扱われます。"

#: ../../recipes-text.rst:139 59d29cd109114a7c8fcb876eab85334c
msgid "Word hyphenation at line ends is detected and resolved"
msgstr "行末での単語のハイフネーションが検出され、解決されます。"

#: ../../recipes-text.rst:140 19752690dbf94d57b40eaa6fe40cfe2e
msgid ""
"Return may also be a list of :ref:`Quad` objects to precisely locate text"
" that is **not parallel** to either axis -- using :ref:`Quad` output is "
"also recommended, when page rotation is not zero."
msgstr ""
"返り値は :ref:`Quad` "
"オブジェクトのリストになる場合もあり、これにより軸に対して平行でないテキストを正確に位置付けることができます。ページの回転がゼロでない場合には、 "
":ref:`Quad` の出力を使用することも推奨されます。"

#: ../../recipes-text.rst:142 2a16dd223a2549f3a9fdad75dde75cae
msgid "But you also have other options::"
msgstr "ただし、他にも選択肢があります::"

#: ../../recipes-text.rst:176 9c120aab999d4373a2a7f9e5a253011b
msgid ""
"This script uses `Page.get_text(\"words\")` to look for a string, handed "
"in via cli parameter. This method separates a page's text into \"words\" "
"using spaces and line breaks as delimiters. Further remarks:"
msgstr "このスクリプトは、cliパラメーターを介して渡された文字列を検索するためにPage.get_text(\"words\")を使用します。この方法では、ページのテキストがスペースと改行を区切りとして「単語」に分割されます。さらなる注釈："

#: ../../recipes-text.rst:178 94d77452d51c40e4903e69153156017b
msgid ""
"If found, the **complete word containing the string** is marked "
"(underlined) -- not only the search string."
msgstr "文字列が見つかった場合、検索文字列だけでなく、その文字列を含む完全な単語がマークされます（アンダーラインが引かれます）。"

#: ../../recipes-text.rst:179 ac9a98990387413e95395c676cc2f8ed
msgid "The search string may **not contain spaces** or other white space."
msgstr "検索文字列にはスペースや他の空白文字を含めることはできません。"

#: ../../recipes-text.rst:180 028f0c36c7854fb089925045ddf41d49
msgid ""
"As shown here, upper / lower cases are **respected**. But this can be "
"changed by using the string method *lower()* (or even regular "
"expressions) in function *mark_word*."
msgstr ""
"ここで示したように、大文字と小文字は区別されますが、`mark_word` 関数で `lower()` "
"メソッド（または正規表現）を使用することで変更できます。"

#: ../../recipes-text.rst:181 d4741e940eca478f96cfa831914d23a1
msgid "There is **no upper limit**: all occurrences will be detected."
msgstr "上限はありません。すべての出現を検出します。"

#: ../../recipes-text.rst:182 36c0f4c5fdc546a1a812347871648e51
msgid ""
"You can use **anything** to mark the word: 'Underline', 'Highlight', "
"'StrikeThrough' or 'Square' annotations, etc."
msgstr "単語をマークするために何を使用しても構いません：「アンダーライン」、「ハイライト」、「取り消し線」、「四角」の注釈などがあります。"

#: ../../recipes-text.rst:183 56318fed611c43c9b6e1f66d5209e303
msgid ""
"Here is an example snippet of a page of this manual, where \"MuPDF\" has "
"been used as the search string. Note that all strings **containing "
"\"MuPDF\"** have been completely underlined (not just the search string)."
msgstr "以下は、このマニュアルのページの一部の例スニペットで、「MuPDF」が検索文字列として使用されています。注意：「MuPDF」を含むすべての文字列が完全にアンダーラインで引かれていることに注意してください（検索文字列だけでなく）。"

#: ../../recipes-text.rst:194 aabecfa8180640d59a29bb4818cad583
msgid "How to Mark Searched Text"
msgstr "検索したテキストをマークする方法"

#: ../../recipes-text.rst:195 ba98b5b4beb94613957e01c5ba163527
msgid "This script searches for text and marks it::"
msgstr "このスクリプトはテキストを検索してマークします::"

#: ../../recipes-text.rst:219 98d3c323af3245698385b78814d17cd4
msgid "The result looks like this:"
msgstr "結果は以下のようになります："

#: ../../recipes-text.rst:230 8ebd345891b04f648ce88bff76bef8b6
msgid "How to Mark Non-horizontal Text"
msgstr "非水平テキストをマークする方法"

#: ../../recipes-text.rst:231 ccae03f239964fefbb2e27beaff7f53c
msgid ""
"The previous section already shows an example for marking non-horizontal "
"text, that was detected by text **searching**."
msgstr "前のセクションでは、テキスト検索によって検出された非水平テキストのマークの例が既に示されています。"

#: ../../recipes-text.rst:233 1eb2edf9e5294106b3735b58cc7af931
msgid ""
"But text **extraction** with the \"dict\" / \"rawdict\" options of "
":meth:`Page.get_text` may also return text with a non-zero angle to the "
"x-axis. This is indicated by the value of the line dictionary's `\"dir\"`"
" key: it is the tuple `(cosine, sine)` for that angle. If `line[\"dir\"] "
"!= (1, 0)`, then the text of all its spans is rotated by (the same) angle"
" != 0."
msgstr ""
"しかし、 :meth:`Page.get_text` "
"の「dict」/「rawdict」オプションを使用したテキスト抽出では、x軸に対してゼロでない角度のテキストも返される場合があります。これは、行の辞書の"
" \"dir\" キーの値によって示されます：それはその角度に対する  `(cosine, sine)`  のタプルです。 "
"`line[\"dir\"] != (1, 0)`  であれば、すべてのスパンのテキストは (同じ) 角度 != 0 によって回転しています。"

#: ../../recipes-text.rst:235 6a9d2592ddc9479d8f6c0cfd5d43d3f6
msgid ""
"The \"bboxes\" returned by the method however are rectangles only -- not "
"quads. So, to mark span text correctly, its quad must be recovered from "
"the data contained in the line and span dictionary. Do this with the "
"following utility function (new in v1.18.9)::"
msgstr "ただし、このメソッドによって返される「bboxes」は四角形のみであり、クワッドではありません。したがって、スパンテキストを正しくマークするには、行とスパンの辞書に含まれるデータからクワッドを回復する必要があります。以下のユーティリティ関数を使用してください（v1.18.9で新しく追加されました）::"

#: ../../recipes-text.rst:240 58c1f9489211452082ddfc8fefbea43d
msgid ""
"If you want to **mark the complete line** or a subset of its spans in one"
" go, use the following snippet (works for v1.18.10 or later)::"
msgstr "一度に完全な行またはその一部のスパンをマークしたい場合は、以下のスニペットを使用してください（v1.18.10以降で動作します）"

#: ../../recipes-text.rst:247 473d7079c2f440c9ac74faaeae352e21
msgid ""
"The `spans` argument above may specify any sub-list of `line[\"spans\"]`."
" In the example above, the second to second-to-last span are marked. If "
"omitted, the complete line is taken."
msgstr ""
"上記の `spans` 引数は、`line[\"spans\"]` "
"の任意の部分リストを指定できます。上記の例では、2番目から最後から2番目のスパンがマークされます。省略すると、完全な行が取得されます"

#: ../../recipes-text.rst:254 258fc0ce47fa4385b49a68c3c18bd704
msgid "How to Analyze Font Characteristics"
msgstr "フォントの特性を分析する方法"

#: ../../recipes-text.rst:255 fbac53a871db42baa8ad7f1878341400
msgid ""
"To analyze the characteristics of text in a PDF use this elementary "
"script as a starting point:"
msgstr "PDF内のテキストの特性を分析するには、以下の初歩的なスクリプトを出発点として使用します::"

#: ../../recipes-text.rst:260 bb21963b9be842e989151c88c4c9d9fd
msgid "Here is the PDF page and the script output:"
msgstr "以下はPDFページとスクリプトの出力です。"

#: ../../recipes-text.rst:271 ed1926041ee64c99bbc1c2aef53af815
msgid "How to Insert Text"
msgstr "テキストの挿入方法"

#: ../../recipes-text.rst:272 2514f012f0284000b507d7bd6d0b6e5b
msgid ""
"PyMuPDF provides ways to insert text on new or existing PDF pages with "
"the following features:"
msgstr "PyMuPDFは、以下の機能を備えて新しいまたは既存のPDFページにテキストを挿入する方法を提供しています："

#: ../../recipes-text.rst:274 67654bd856e243d1bdb6715c0173011e
msgid ""
"choose the font, including built-in fonts and fonts that are available as"
" files"
msgstr "フォントの選択：組み込みのフォントやファイルとして利用可能なフォントを選択できます。"

#: ../../recipes-text.rst:275 5718ea4a08d143caa974ccc065cfeb1f
msgid "choose text characteristics like bold, italic, font size, font color, etc."
msgstr "テキストの特性の選択：太字、斜体、フォントサイズ、フォントカラーなど、テキストの特性を選択できます。"

#: ../../recipes-text.rst:276 c42d526b20e842dc9e470fde931072b9
msgid "position the text in multiple ways:"
msgstr "テキストの配置方法："

#: ../../recipes-text.rst:278 83d84fb2c2a146f0898cb75d4b777093
msgid "either as simple line-oriented output starting at a certain point,"
msgstr "特定のポイントを起点として単純な行指向の出力として配置することができます。 "

#: ../../recipes-text.rst:279 a25fcc56da6a46f5a496ffb43c54445f
msgid ""
"or fitting text in a box provided as a rectangle, in which case text "
"alignment choices are also available,"
msgstr "ボックスにテキストをフィットさせる場合は、テキストの配置を選択することもできます。この場合、テキストの整列オプションも利用できます。"

#: ../../recipes-text.rst:280 e519f711e61f468d80e12379642e9c8d
msgid ""
"choose whether text should be put in foreground (overlay existing "
"content),"
msgstr "テキストを前面に配置するか選択できます（既存のコンテンツをオーバーレイします）。"

#: ../../recipes-text.rst:281 02725087e9e94e71af6082b65f4f1caf
msgid ""
"all text can be arbitrarily \"morphed\", i.e. its appearance can be "
"changed via a :ref:`Matrix`, to achieve effects like scaling, shearing or"
" mirroring,"
msgstr "テキストは任意に「変形」されることができます。つまり、行列を使用して拡大、せん断、反転などの効果を得ることができます。"

#: ../../recipes-text.rst:282 4c78c91e90514b4f9f9ec9f56f071c35
msgid ""
"independently from morphing and in addition to that, text can be rotated "
"by integer multiples of 90 degrees."
msgstr "変形とは別に、テキストを90度の整数倍で回転させることもできます。"

#: ../../recipes-text.rst:284 2c1cf5185062458cb9cc8bd0f00d7a77
msgid ""
"All of the above is provided by three basic :ref:`Page`, resp. "
":ref:`Shape` methods:"
msgstr "以上のすべては、それぞれの基本的な :ref:`Page` 、:ref:`Shape` メソッドによって提供されています。"

#: ../../recipes-text.rst:286 a85c3e82a397441bb5355a8d34d06943
msgid ""
":meth:`Page.insert_font` -- install a font for the page for later "
"reference. The result is reflected in the output of "
":meth:`Document.get_page_fonts`. The font can be:"
msgstr ""
":meth:`Page.insert_font` - ページにフォントをインストールして後で参照できるようにします。その結果は、 "
":meth:`Document.get_page_fonts` の出力に反映されます。フォントは以下の方法で提供できます："

#: ../../recipes-text.rst:288 12e4141ac7ad4001a971a311f4b71fbc
msgid "provided as a file,"
msgstr "ファイルとして提供する。"

#: ../../recipes-text.rst:289 b497af42e13a46cb8609ad24865fdad4
msgid "via :ref:`Font` (then use :attr:`Font.buffer`)"
msgstr ":ref:`Font` を使用して提供する（その場合、 :attr:`Font.buffer` を使用します）。"

#: ../../recipes-text.rst:290 efb189f03fa748b3a4f3fb0856a8c07d
msgid "already present somewhere in **this or another** PDF, or"
msgstr "既にこのPDFまたは別のPDFのどこかに存在する。"

#: ../../recipes-text.rst:291 2860d586990d49268dfcbe552e705d4c
msgid "be a **built-in** font."
msgstr "組み込みフォントである。"

#: ../../recipes-text.rst:293 7a2b092f11e448f3a26c7260b65bc2f7
msgid ""
":meth:`Page.insert_text` -- write some lines of text. Internally, this "
"uses :meth:`Shape.insert_text`."
msgstr ""
":meth:`Page.insert_text`  - テキストの行を書き込みます。内部的には :meth:`Shape.insert_text`"
" を使用します。"

#: ../../recipes-text.rst:295 99be18f31364444eb05c6ae2d2fb8b4a
msgid ""
":meth:`Page.insert_textbox` -- fit text in a given rectangle. Here you "
"can choose text alignment features (left, right, centered, justified) and"
" you keep control as to whether text actually fits. Internally, this uses"
" :meth:`Shape.insert_textbox`."
msgstr ""
":meth:`Page.insert_textbox`  - "
"指定された矩形にテキストをフィットさせます。ここでは、テキストの整列機能（左揃え、右揃え、中央揃え、両端揃え）を選択できます。また、テキストが実際にフィットするかどうかの制御もできます。内部的には"
" :meth:`Shape.insert_textbox` を使用します。"

#: ../../recipes-text.rst:297 dfb6c2a469c441f9a074dfa3fda90e5f
msgid "Both text insertion methods automatically install the font as necessary."
msgstr "テキスト挿入の両方の方法は、必要に応じてフォントを自動的にインストールします。"

#: ../../recipes-text.rst:303 ce289d26f64843238c0821239a4459b6
msgid "How to Write Text Lines"
msgstr "テキスト行を書く方法"

#: ../../recipes-text.rst:304 68c5144e65614c41b2ccd438f95952d2
msgid "Output some text lines on a page::"
msgstr "ページにいくつかのテキスト行を出力する方法::"

#: ../../recipes-text.rst:325 02fd0e0a349246b0848287527a442a48
#, fuzzy
msgid ""
"With this method, only the **number of lines** will be controlled to not "
"go beyond page height. Surplus lines will not be written and the number "
"of actual lines will be returned. The calculation uses a line height "
"calculated from the :data:`fontsize` and 36 points (0.5 inches) as bottom"
" margin."
msgstr ""
"この方法では、ページの高さを超えないように行の数だけを制御します。余剰の行は書き込まれず、実際の行数が返されます。計算には、:data:`fontsize`"
" と36ポイント（0.5インチ）のボトムマージンから計算された行の高さが使用されます。"

#: ../../recipes-text.rst:327 eaa1863fcf334f7e89493b6a3be08852
msgid ""
"Line **width is ignored**. The surplus part of a line will simply be "
"invisible."
msgstr "行の幅は無視されます。行の余剰部分は単に見えなくなります。"

#: ../../recipes-text.rst:329 739353d4293642e6aeb027b05d7756f6
msgid ""
"However, for built-in fonts there are ways to calculate the line width "
"beforehand - see :meth:`get_text_length`."
msgstr "ただし、組み込みのフォントには、行の幅を事前に計算する方法があります。 :meth:`get_text_length` を参照してください。"

#: ../../recipes-text.rst:331 55b6e401431e428eab88bca7ef685371
msgid ""
"Here is another example. It inserts 4 text strings using the four "
"different rotation options, and thereby explains, how the text insertion "
"point must be chosen to achieve the desired result::"
msgstr "以下は別の例です。4つの異なる回転オプションを使用してテキスト文字列を挿入し、それにより、望む結果を得るためにどのようにテキスト挿入ポイントを選択すべきかを説明しています::"

#: ../../recipes-text.rst:367 dedd61fc8ff0408f9a3f448abc88e1c6
msgid "This is the result:"
msgstr "これが結果です。"

#: ../../recipes-text.rst:379 5c85f96e22d04b18a0558a9c0679c416
msgid "How to Fill a Text Box"
msgstr "テキストボックスの塗りつぶし方"

#: ../../recipes-text.rst:380 214c65fd168c44ec9a914a089f5305c4
msgid ""
"This script fills 4 different rectangles with text, each time choosing a "
"different rotation value::"
msgstr "このスクリプトは、異なる回転値を選択して、4つの異なる長方形にテキストを塗りつぶします。"

#: ../../recipes-text.rst:415 40340afa21b14c70b3a08af1c085182e
msgid ""
"Several default values were used above: font \"Helvetica\", font size 11 "
"and text alignment \"left\". The result will look like this:"
msgstr "上記ではいくつかのデフォルト値が使用されました：フォント「Helvetica」、フォントサイズ11、テキストの配置は「左寄せ」です。結果は以下のようになります。"

#: ../../recipes-text.rst:425 d4916e59d7e54cc586abbbfef2ba8eae
msgid "How to Use Non-Standard Encoding"
msgstr "非標準エンコーディングの使用方法"

#: ../../recipes-text.rst:426 0a587c6ff22c4c95831a99586e09dcb0
msgid ""
"Since v1.14, MuPDF allows Greek and Russian encoding variants for the "
":data:`Base14_Fonts`. In PyMuPDF this is supported via an additional "
"*encoding* argument. Effectively, this is relevant for Helvetica, Times-"
"Roman and Courier (and their bold / italic forms) and characters outside "
"the ASCII code range only. Elsewhere, the argument is ignored. Here is "
"how to request Russian encoding with the standard font Helvetica::"
msgstr ""
"v1.14以降、MuPDFでは :data:`Base14_Fonts` "
"のギリシャ語およびロシア語のエンコーディングバリアントが許可されています。PyMuPDFでは、これは追加のエンコーディング引数を介してサポートされています。これは実際にはHelvetica"
"、Times-"
"Roman、Courier（およびそれらの太字/斜体形式）およびASCIIコード範囲外の文字にのみ影響します。他の場所では、この引数は無視されます。以下は、標準フォントHelveticaでロシア語のエンコーディングを要求する方法です::"

#: ../../recipes-text.rst:430 074d19db44df4a44b1d81d7f9242ffca
msgid ""
"The valid encoding values are TEXT_ENCODING_LATIN (0), "
"TEXT_ENCODING_GREEK (1), and TEXT_ENCODING_CYRILLIC (2, Russian) with "
"Latin being the default. Encoding can be specified by all relevant font "
"and text insertion methods."
msgstr "有効なエンコーディング値は、TEXT_ENCODING_LATIN（0）、TEXT_ENCODING_GREEK（1）、TEXT_ENCODING_CYRILLIC（2、ロシア語）であり、デフォルトはLatinです。エンコーディングは、すべての関連するフォントおよびテキスト挿入メソッドで指定できます。"

#: ../../recipes-text.rst:432 4f8bf567ab89459993b7b35f85417ddc
msgid ""
"By the above statement, the fontname *helv* is automatically connected to"
" the Russian font variant of Helvetica. Any subsequent text insertion "
"with **this fontname** will use the Russian Helvetica encoding."
msgstr "上記の記述により、フォント名「helv」は自動的にHelveticaのロシア語バリアントに接続されます。このフォント名を使用して以降のテキスト挿入では、ロシア語のHelveticaエンコーディングが使用されます。"

#: ../../recipes-text.rst:434 23525f56981743f688ba21d61fa91325
msgid ""
"If you change the fontname just slightly, you can also achieve an "
"**encoding \"mixture\"** for the **same base font** on the same page::"
msgstr "フォント名をわずかに変更することで、同じベースフォントの同じページ上でエンコーディングの「混合」を実現することもできます。"

#: ../../recipes-text.rst:447 94ccdb02b9914e9c9096bc5a77d8f484
msgid "The result:"
msgstr "結果は以下の通りです。"

#: ../../recipes-text.rst:452 8d22b829ffb34401aa50789742f5a400
msgid ""
"The snippet above indeed leads to three different copies of the Helvetica"
" font in the PDF. Each copy is uniquely identified (and referenceable) by"
" using the correct upper-lower case spelling of the reserved word "
"\"helv\"::"
msgstr "上記のスニペットは実際にPDF内にHelveticaフォントの3つの異なるコピーを生成します。各コピーは正しい大文字小文字のスペル（\"helv\"）を使用して一意に識別され、参照が可能です。"

#: ../../footer.rst:-1 c98384ffee00455689321067f064cf77
msgid "Discord logo"
msgstr ""

#~ msgid "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"
#~ msgstr ""

#~ msgid "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"
#~ msgstr ""

