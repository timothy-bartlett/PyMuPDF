# PyMuPDF Japanese documentation
# Copyright (C) 2015-2023, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# Jamie Lemon <jamie.lemon@artifex.com>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.23.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-05 14:46+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Suzan Sanver <suzan.sanver@dijipiji.com>\n"
"Language: ja\n"
"Language-Team: ja <suzan.sanver@dijipiji.com>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1 66c2f8c495394f59a3600a1a820340be
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1 c4297dfa6bd4482bb2c0e314c9a5aeb3
msgid ""
"PyMuPDF is a high-performance Python library for data extraction, "
"analysis, conversion & manipulation of PDF (and other) documents."
msgstr "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"

#: ../../header.rst:-1 9c3560c174e94709902af4c63f2475ca
msgid ""
"PDF Text Extraction, PDF Image Extraction, PDF Conversion, PDF Tables, "
"PDF Splitting, PDF Creation, Pyodide, PyScript"
msgstr "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"

#: ../../story-class.rst:7 28aebcbd46c24e38ad50c1d06e300b27
msgid "Story"
msgstr "Story (ストーリー)"

#: ../../story-class.rst:11 869b9606bbcb4bc2afa316e53ab9e4a3
msgid "New in v1.21.0"
msgstr "バージョン1.21.0で新規追加"

#: ../../story-class.rst:14 895e8f0e8206458e98bbaa46574b0749
msgid "**Method / Attribute**"
msgstr "**メソッド / 属性**"

#: ../../story-class.rst:14 40590c5978dc4caeb53c267c9b4b3dd7
msgid "**Short Description**"
msgstr "**簡単な説明**"

#: ../../story-class.rst:16 4173dfda3de94b22952256ad9dc0fa03
msgid ":meth:`Story.reset`"
msgstr ""

#: ../../story-class.rst:16 2bc6de59f4684893934e1945de7a2e0d
msgid "\"rewind\" story output to its beginning"
msgstr "ストーリーの出力を先頭に巻き戻す"

#: ../../story-class.rst:17 617027770a344342a05773f14c758a35
msgid ":meth:`Story.place`"
msgstr ""

#: ../../story-class.rst:17 d4c97908f087498592f28a9ba9dfe573
msgid "compute story content to fit in provided rectangle"
msgstr "指定された長方形に収まるストーリーのコンテンツを計算"

#: ../../story-class.rst:18 c462dbcac34e4f8fb9734c98d6215df0
msgid ":meth:`Story.draw`"
msgstr ""

#: ../../story-class.rst:18 077d8dc7087d4737aea43c245bb64f1d
msgid "write the computed content to current page"
msgstr "計算されたコンテンツを現在のページに書き込む"

#: ../../story-class.rst:19 137be8df0fa547628c3cebe41a1e90d2
msgid ":meth:`Story.element_positions`"
msgstr ""

#: ../../story-class.rst:19 7a68bc8335984c65b957b909717ad3d7
msgid "callback function logging currently processed story content"
msgstr "現在処理中のストーリーコンテンツを記録するコールバック関数"

#: ../../story-class.rst:20 2191897a3a8a465fa40f7a0ac69c6854
msgid ":attr:`Story.body`"
msgstr ""

#: ../../story-class.rst:20 76948ef90d3d482a88d44bd7b64321e5
msgid "the story's underlying :htmlTag:`body`"
msgstr "ストーリーの基本となる :htmlTag:`body`"

#: ../../story-class.rst:21 08f83a8265cd43bc8e2fc8cd529c4ab9
msgid ":meth:`Story.write`"
msgstr ""

#: ../../story-class.rst:21 983f2df7bca049d6b13229869fe7dc22
msgid "places and draws Story to a DocumentWriter"
msgstr "ストーリーを :ref:`DocumentWriter` に配置して描画します"

#: ../../story-class.rst:22 a4b941a5b09a4d358a8dfea90f9b2109
msgid ":meth:`Story.write_stabilized`"
msgstr ""

#: ../../story-class.rst:22 29a8b0e1060f4ab0b2e7eb9c51b7f889
msgid "iterative layout of html content to a DocumentWriter"
msgstr "HTMLコンテンツを :ref:`DocumentWriter` に反復的にレイアウトします"

#: ../../story-class.rst:23 7a4d5aff0e9f4a03ad761254532769be
msgid ":meth:`Story.write_with_links`"
msgstr ""

#: ../../story-class.rst:23 516d33bd142a4a4fa2a6235b13448f5b
msgid "like `write()` but also creates PDF links"
msgstr "`write()` と同様ですが、PDFリンクも作成します"

#: ../../story-class.rst:24 69311c30ec2f407e9d7c7d2ff5d95327
msgid ":meth:`Story.write_stabilized_with_links`"
msgstr ""

#: ../../story-class.rst:24 663bea74956e47ce85699345d403bff9
msgid "like `write_stabilized()` but also creates PDF links"
msgstr "`write_stabilized()` と同様ですが、PDFリンクも作成します"

#: ../../story-class.rst:25 d735f71e870b40f18fbd9983c6ce8d37
msgid ":meth:`Story.fit`"
msgstr ""

#: ../../story-class.rst:25 ../../story-class.rst:252
#: 1651f0e0efed4521b0cbcef3c4474f0b b2be44f87056472dab21da8559f847c3
msgid "Finds optimal rect that contains the story `self`."
msgstr ""

#: ../../story-class.rst:26 b730b989974745ffac690ecb3c66b316
msgid ":meth:`Story.fit_scale`"
msgstr ""

#: ../../story-class.rst:27 f66c42f09a644954baeab97c7501be3c
msgid ":meth:`Story.fit_height`"
msgstr ""

#: ../../story-class.rst:28 3e15b73de6b54ebd89e4bf29118e88f2
msgid ":meth:`Story.fit_width`"
msgstr ""

#: ../../story-class.rst:31 d602cdc83b834754a8c2b9a3157365d3
msgid "**Class API**"
msgstr "**クラスAPI**"

#: ../../story-class.rst:37 ac5974bb00374478821280b00ca6996a
msgid ""
"Create a **story**, optionally providing HTML and CSS source. The HTML is"
" parsed, and held within the Story as a DOM (Document Object Model)."
msgstr ""
"**ストーリー** "
"を作成します。オプションでHTMLとCSSのソースを提供できます。HTMLは解析され、ストーリー内でDOM（ドキュメントオブジェクトモデル）として保持されます。"

#: ../../story-class.rst:40 3d4fb86bfab847078d894df4df919002
msgid ""
"This structure may be modified: content (text, images) may be added, "
"copied, modified or removed by using methods of the :ref:`Xml` class."
msgstr "この構造は変更できます。テキスト、画像などのコンテンツは、:ref:`Xml` クラスのメソッドを使用して追加、コピー、変更、または削除できます。"

#: ../../story-class.rst:43 2eec62caf7e14d6ebe394f30cbb58a2a
msgid ""
"When finished, the **story** can be written to any device; in typical "
"usage the device may be provided by a :ref:`DocumentWriter` to make new "
"pages."
msgstr ""
"完了したら、**ストーリー** を任意のデバイスに書き込むことができます。通常の使用法では、デバイスは新しいページを生成するために "
":ref:`DocumentWriter` によって提供されます。"

#: ../../story-class.rst:46 cfd21d2209144ed38cf6e09cfe9f18cd
msgid "Here are some general remarks:"
msgstr "以下は一般的な注意事項です："

#: ../../story-class.rst:48 a8fe8d7b0e954d968fe751b82d18f87f
msgid ""
"The :ref:`Story` constructor parses and validates the provided HTML to "
"create the DOM."
msgstr ":ref:`Story` コンストラクタは提供されたHTMLを解析し、検証してDOMを作成します。"

#: ../../story-class.rst:49 66050dbc33c142c8a92709b4d60f8dab
msgid ""
"PyMuPDF provides a number of ways to manipulate the HTML source by "
"providing access to the *nodes* of the underlying DOM. Documents can be "
"completely built from ground up programmatically, or the existing DOM can"
" be modified pretty arbitrarily. For details of this interface, please "
"see the :ref:`Xml` class."
msgstr ""
"PyMuPDFは、基本的なDOMのノードへのアクセスを提供することでHTMLソースを操作する方法をいくつか提供しています。文書は完全にプログラム的に構築することも、既存のDOMをかなり任意に変更することもできます。このインターフェースの詳細については、:ref:`Xml`"
" クラスをご覧ください。"

#: ../../story-class.rst:54 d838ea3eb7a24338a07ead8dd00c18c8
msgid ""
"If no (or no more) changes to the DOM are required, the story is ready to"
" be laid out and to be fed to a series of devices (typically devices "
"provided by a :ref:`DocumentWriter` to produce new pages)."
msgstr ""
"DOMへの変更が必要ない（またはもう必要ない）場合、ストーリーはレイアウトが可能であり、新しいページを生成するために通常は "
":ref:`DocumentWriter` によって提供されるデバイスに供給する準備ができています。"

#: ../../story-class.rst:57 c3166e89bac4477295caa74f93d5b977
msgid ""
"The next step is to place the story and write it out. This can either be "
"done directly, by looping around calling `place()` and `draw()`, or "
"alternatively, the looping can handled for you using the `write()` or "
"`write_stabilised()` methods. Which method you choose is largely a matter"
" of taste."
msgstr ""
"次のステップは、ストーリーを配置して書き出すことです。これは、直接行うこともできます（`place()` と `draw()` "
"を呼び出すことでループ処理することで）、または代替として `write()` または `write_stabilised()` "
"メソッドを使用しても、ループ処理を自動化できます。どの方法を選択するかは主に好みの問題です。"

#: ../../story-class.rst:63 81f38b40ebba4e69a2d3c0fde62e1bc9
msgid "To work in the first of these styles, the following loop should be used:"
msgstr "最初のスタイルで作業するには、次のループを使用する必要があります："

#: ../../story-class.rst:65 94316661209c44baa59e8188c2a6bf9f
msgid ""
"Obtain a suitable device to write to; typically by requesting a new, "
"empty page from a :ref:`DocumentWriter`."
msgstr "適切なデバイスを取得します。通常、:ref:`DocumentWriter` から新しい空のページを要求することで取得します。"

#: ../../story-class.rst:68 cfd06365d6e046b383ffdb4710c666ca
msgid ""
"Determine one or more rectangles on the page, that should receive "
"**story** data. Note that not every page needs to have the same set of "
"rectangles."
msgstr ""
"ページ上に **ストーリー** "
"データを受け取る必要がある1つまたは複数の長方形を決定します。すべてのページが同じ長方形セットを持つ必要はないことに注意してください。"

#: ../../story-class.rst:71 f93ee210a25a433aae8a8bcbb11af15d
msgid ""
"Pass each rectangle to the **story** to place it, learning what part of "
"that rectangle has been filled, and whether there is more story data that"
" did not fit. This step can be repeated several times with adjusted "
"rectangles until the caller is happy with the results."
msgstr ""
"各長方形を **ストーリー** "
"に渡して配置し、その長方形のどの部分が埋まったか、また収まらなかったストーリーデータがあるかを学びます。このステップは、調整された長方形で何度も繰り返すことができ、呼び出し元が結果に満足するまで続けることができます。"

#: ../../story-class.rst:76 4a92b888d668416ab811d8096fb70334
msgid ""
"Optionally, at this point, we can request details of where interesting "
"items have been placed, by calling the `element_positions()` method. "
"Items are deemed to be interesting if their integer `heading` attribute "
"is a non-zero (corresponding to HTML tags :htmlTag:`h1` - :htmlTag:`h6`),"
" if their `id` attribute is not `None` (corresponding to HTML tag "
":htmlTag:`id`), or if their `href` attribute is not `None` (responding to"
" HTML tag :htmlTag:`href`). This can conveniently be used for automatic "
"generation of a Table of Contents, an index of images or the like."
msgstr ""
"任意で、この段階で `element_positions()` "
"メソッドを呼び出して、興味深いアイテムが配置された場所の詳細をリクエストすることができます。アイテムは、整数の `heading` "
"属性がゼロでない場合（:htmlTag:`h1` - :htmlTag:`h6`）、id属性がNoneでない場合（:htmlTag:`id` "
"に対応）、またはhref属性がNoneでない場合（:htmlTag:`href` "
"に対応）に興味深いと見なされます。これは、目次、画像の索引などの自動生成に便利に使用できます。"

#: ../../story-class.rst:85 4fe1f3e36fae44fa99bc2a70a8393125
msgid "Next, draw that rectangle out to the device with the `draw()` method."
msgstr "次に、`draw()` メソッドを使用してその長方形をデバイスに描画します。"

#: ../../story-class.rst:86 440bcfb31dd040ff8347186dc0948857
msgid ""
"If the most recent call to `place()` indicated that all the story data "
"had fitted, stop now."
msgstr "最も最近の `place()` の呼び出しが、すべてのストーリーデータが収まったことを示した場合、ここで停止します。"

#: ../../story-class.rst:88 c1c2d8128f094ba3bec79cd7accebd99
msgid ""
"Otherwise, we can loop back. If there are more rectangles to be placed on"
" the current device (page), we jump back to step 3 - if not, we jump back"
" to step 1 to get a new device."
msgstr "それ以外の場合、ループを戻すことができます。現在のデバイス（ページ）に配置するためにさらに長方形がある場合は、ステップ3に戻ります。長方形がない場合は、新しいデバイスを取得するためにステップ1に戻ります。"

#: ../../story-class.rst:91 09b191efad794eea9284986c8633cbf9
msgid ""
"Alternatively, in the case where you are using a :ref:`DocumentWriter`, "
"the `write()` or `write_stabilized()` methods can be used. These handle "
"all the looping for you, in exchange for being provided with callbacks "
"that control the behaviour (notably a callback that enumerates the "
"rectangles/pages to use)."
msgstr ""
"代わりに、:ref:`DocumentWriter` を使用している場合、`write()` または `write_stabilized()` "
"メソッドを使用できます。これらは、動作を制御するコールバックが提供される代わりに、すべてのループ処理を処理します（特に使用する長方形/ページを列挙するコールバックが含まれます）。"

#: ../../story-class.rst:96 95a72af76e6c4524a6183fcec93fd415
msgid ""
"Which part of the **story** will land on which rectangle / which page, is"
" fully under control of the :ref:`Story` object and cannot be predicted."
msgstr ""
"**ストーリー** オブジェクトがどの部分がどの長方形/ページに配置されるかは、完全に :ref:`Story` "
"オブジェクトの制御下にあり、予測することはできません。"

#: ../../story-class.rst:98 687bab0a2f184bc5a0ed3cfdc13e9f3f
msgid ""
"Images may be part of a **story**. They will be placed together with any "
"surrounding text."
msgstr "画像は **ストーリー** の一部となる可能性があります。画像は周囲のテキストと一緒に配置されます。"

#: ../../story-class.rst:99 6ec76204364f4d47ac2059a3da937331
msgid ""
"Multiple stories may - independently from each other - write to the same "
"page. For example, one may have separate stories for page header, page "
"footer, regular text, comment boxes, etc."
msgstr "複数のストーリーは、互いに独立して同じページに書き込むことができます。たとえば、ページヘッダー、ページフッター、通常のテキスト、コメントボックスなどの異なるストーリーを持つことができます。"

#: ../../story-class.rst 1131369e0483484180969743b18b3ba8
#: 139b888c57a94c3a9474e0f7d1bad5dc 27a5531334ac43d2aebdc52100349648
#: 33a510d8f5a14ba7b52f6b639aab0c4a 3490350c43c04cba8359c20130feff5e
#: 448e464ef515491ea760bd77b9ae1e0b 9e5ed4284c944b359fc26d75e34f9b54
#: bfb9e936dc5d4c918eceb6f84fdc8702 d5df66f741ef468b90832159dcd77ddd
#: e1e303e2712d4b38b28607b244476718
msgid "Parameters"
msgstr "パラメーター:"

#: ../../story-class.rst:103 cb51ec6d2a8747db80adc0bc7aab0a84
msgid ""
"HTML source code. If omitted, a basic minimum is generated (see below). "
"If provided, not a complete HTML document is needed. The in-built source "
"parser will forgive (many / most) HTML syntax errors and also accepts "
"HTML fragments like `\"<b>Hello, <i>World!</i></b>\"`."
msgstr ""
"HTMLソースコード。省略した場合、基本的な最小限のHTMLが生成されます（以下参照）。指定した場合、完全なHTML文書は必要ありません。組み込みのソースパーサは（多くの）HTML構文エラーを許容し、また"
" `\"<b>Hello, <i>World!</i></b>\"` のようなHTMLフラグメントも受け入れます。"

#: ../../story-class.rst:108 7b50185c21d641be95efe9fa87c2eabc
msgid "CSS source code. If provided, must contain valid CSS specifications."
msgstr "CSSソースコード。指定する場合、有効なCSS仕様を含む必要があります。"

#: ../../story-class.rst:109 715af96af1114f9eaaad922cc779b61f
msgid "the default text font size."
msgstr "デフォルトのテキストフォントサイズ。"

#: ../../story-class.rst:110 0668b4d9bcb74c129e77bfd43126c5ac
msgid ""
"an :ref:`Archive` from which to load resources for rendering. Currently "
"supported resource types are images and text fonts. If omitted, the story"
" will not try to look up any such data and may thus produce incomplete "
"output.  .. note:: Instead of an actual archive, valid arguments for "
"**creating** an :ref:`Archive` can also be provided -- in which case an "
"archive will temporarily be constructed. So, instead of `story = "
"pymupdf.Story(archive=pymupdf.Archive(\"myfolder\"))`, one can also shorter "
"write `story = pymupdf.Story(archive=\"myfolder\")`."
msgstr ""

#: ../../story-class.rst:110 6cd51bea678e402bbb503dbe0f6ccf07
msgid ""
"an :ref:`Archive` from which to load resources for rendering. Currently "
"supported resource types are images and text fonts. If omitted, the story"
" will not try to look up any such data and may thus produce incomplete "
"output."
msgstr ""
"レンダリングのためのリソースをロードするための :ref:`Archive` "
"。現在サポートされているリソースタイプは画像とテキストフォントです。省略した場合、ストーリーはそのようなデータを検索しようとはせず、不完全な出力を生成する可能性があります。"

#: ../../story-class.rst:112 5d8cb4c474f943cb9b38251e58e3cb5f
msgid ""
"Instead of an actual archive, valid arguments for **creating** an "
":ref:`Archive` can also be provided -- in which case an archive will "
"temporarily be constructed. So, instead of `story = "
"pymupdf.Story(archive=pymupdf.Archive(\"myfolder\"))`, one can also shorter "
"write `story = pymupdf.Story(archive=\"myfolder\")`."
msgstr ""
"アーカイブの代わりに、:ref:`Archive` を一時的に **構築する** ための有効な引数も提供できます。したがって、`story = "
"pymupdf.Story(archive=pymupdf.Archive(\"myfolder\"))` の代わりに、`story = "
"pymupdf.Story(archive=\"myfolder\")` と短縮して記述することもできます。 "

#: ../../story-class.rst:116 e4efde983eac454cb029e6a332f8c944
msgid ""
"Calculate that part of the story's content, that will fit in the provided"
" rectangle. The method maintains a pointer which part of the story's "
"content has already been written and upon the next invocation resumes "
"from that pointer's position."
msgstr "ストーリーのコンテンツのうち、指定された長方形に収まる部分を計算します。このメソッドは、ストーリーのコンテンツのどの部分が既に書き込まれたかを示すポインタを維持し、次回の呼び出し時にそのポインタの位置から再開します。"

#: ../../story-class.rst:118 bcce09314afb4720b43bf6c5751d86f1
msgid ""
"layout the current part of the content to fit into this rectangle. This "
"must be a sub-rectangle of the page's :ref:`MediaBox<Glossary_MediaBox>`."
msgstr ""
"現在のコンテンツをこの長方形に収めるためのレイアウト。これはページの :ref:`MediaBox<Glossary_MediaBox>` "
"のサブ長方形でなければなりません。"

#: ../../story-class.rst ee5fb926560245f98b9448e0eb532768
msgid "Return type"
msgstr "戻り値の型:"

#: ../../story-class.rst f6ea9ccd20f84a7fa33e46853129fbeb
msgid "Returns"
msgstr "戻り値:"

#: ../../story-class.rst:121 186d5ac7b919456a810f4a68939db88a
msgid ""
"a bool (int) `more` and a rectangle `filled`. If `more == 0`, all content"
" of the story has been written, otherwise more is waiting to be written "
"to subsequent rectangles / pages. Rectangle `filled` is the part of "
"`where` that has actually been filled."
msgstr ""
"bool (int) `more` と、実際に `filled` 長方形を返します。`more == 0` "
"の場合、ストーリーのすべてのコンテンツが書き込まれたことを意味し、それ以外の場合、`more` "
"は次の長方形/ページに書き込むために待機しています。埋められた長方形は実際に埋められた `where` の一部です。"

#: ../../story-class.rst:125 76579824d7ac41bfbd080e26ac82dfa6
msgid "Write the content part prepared by :meth:`Story.place` to the page."
msgstr ":meth:`Story.place` によって準備されたコンテンツの一部をページに書き込みます。"

#: ../../story-class.rst:127 8c27c1d34d3643f3a9696bcf809014e0
msgid ""
"the :ref:`Device` created by `dev = writer.begin_page(mediabox)`. The "
"device knows how to call all MuPDF functions needed to write the content."
msgstr ""
"`dev = writer.begin_page(mediabox)` で作成された "
":ref:`Device`。このデバイスは、コンテンツを書き込むために必要なすべてのMuPDF関数を呼び出す方法を知っています。"

#: ../../story-class.rst:128 8edf3e4b502d4256ba1cd8dd9b1d5156
msgid ""
"a matrix for transforming content when writing to the page. An example "
"may be writing rotated text. The default means no transformation (i.e. "
"the :ref:`Identity` matrix)."
msgstr ""
"ページに書き込む際にコンテンツを変形させるための行列。テキストを回転させるなどの例が考えられます。デフォルトでは変換は行われず（つまり "
":ref:`Identity` 行列）、コンテンツはそのまま書き込まれます。"

#: ../../story-class.rst:132 77ec964e1fc643dfbfc21b3e212e8877
msgid ""
"Let the Story provide positioning information about certain HTML elements"
" once their place on the current page has been computed - i.e. invoke "
"this method **directly after** :meth:`Story.place`."
msgstr ""
"ストーリーが現在のページ上で特定のHTML要素の配置情報を提供するようにします。つまり、:meth:`Story.place` の **直後に**"
" このメソッドを呼び出します。"

#: ../../story-class.rst:134 ee9304576d324cc5bc5d185094574afb
msgid ""
"*Story* will pass position information to *function*. This information "
"can for example be used to generate a Table of Contents."
msgstr "*Story* は位置情報を *関数* に渡します。この情報は、目次の生成などに便利に使用できます。"

#: ../../story-class.rst:136 292555b146e94623a93c107a52c66477
msgid ""
"a Python function accepting an :class:`ElementPosition` object. It will "
"be invoked by the Story object to process positioning information. The "
"function **must** be a callable accepting exactly one argument."
msgstr ""
":class:`ElementPosition` "
"オブジェクトを受け入れるPython関数。この関数は、位置情報を処理するためにStoryオブジェクトによって呼び出されます。**関数** "
"は正確に1つの引数を受け入れるcallableである必要があります。"

#: ../../story-class.rst:137 74db75d330a6452b9fce6cf32da2c6e0
msgid ""
"an optional dictionary with any **additional** information that should be"
" added to the :class:`ElementPosition` instance passed to `function`. "
"Like for example the current output page number. Every key in this "
"dictionary must be a string that conforms to the rules for a valid Python"
" identifier. The complete set of information is explained below."
msgstr ""
"`function` に渡される :class:`ElementPosition` インスタンスに **追加** "
"情報を追加するためのオプションの辞書。たとえば、現在の出力ページ番号などが含まれることがあります。この辞書のすべてのキーは、有効なPython識別子の規則に従う文字列である必要があります。情報の完全なセットは以下で説明されています。"

#: ../../story-class.rst:146 f2f678d6aae7464084ab71b33bb10aed
msgid "Rewind the story's document to the beginning for starting over its output."
msgstr "ストーリーのドキュメントを最初に戻して、出力を再開します。"

#: ../../story-class.rst:150 d869baa1cbef49f9b0c9827bd8b1a177
msgid ""
"The :htmlTag:`body` part of the story's DOM. This attribute contains the "
":ref:`Xml` node of :htmlTag:`body`. All relevant content for PDF "
"production is contained between \"<body>\" and \"</body>\"."
msgstr ""
"ストーリーのDOMの :htmlTag:`body` 部分。この属性には :htmlTag:`body` の :ref:`Xml` "
"ノードが含まれています。PDFの制作に関連するすべてのコンテンツは、「<body>」と「</body>」の間に含まれています。"

#: ../../story-class.rst:154 d1d9696a8b7b43f2b078c91d3f929d2c
msgid ""
"Places and draws Story to a `DocumentWriter`. Avoids the need for calling"
" code to implement a loop that calls `Story.place()` and `Story.draw()` "
"etc, at the expense of having to provide at least the `rectfn()` "
"callback."
msgstr ""
"Storyを :ref:`DocumentWriter` に配置し、描画します。これにより、`Story.place()` および "
"`Story.draw()` などを呼び出すループの実装が不要になりますが、`rectfn()` コールバックを少なくとも提供する必要があります。"

#: ../../story-class.rst:159 0ef6b1fab7234bdbb478173bad2d07e1
msgid "a `DocumentWriter` or None."
msgstr ":ref:`DocumentWriter` または `None`。"

#: ../../story-class.rst:160 f5db3f21b0e249af9622143c82f619b4
#, fuzzy
msgid ""
"a callable taking `(rect_num: int, filled: Rect)` and returning "
"`(mediabox, rect, ctm)`:  * mediabox: None or rect for new page. * rect: "
"The next rect into which content should be placed. * ctm: None or a "
"`Matrix`."
msgstr ""
"`(rect_num: int, filled: Rect)` を取り、`(mediabox, rect, ctm)` "
"を返すcallable：mediabox"

#: ../../story-class.rst:160 2074cac9884d473cbe03f600382803a8
msgid ""
"a callable taking `(rect_num: int, filled: Rect)` and returning "
"`(mediabox, rect, ctm)`:"
msgstr "`(rect_num: int, filled: Rect)` を取り、`(mediabox, rect, ctm)` を返すcallable："

#: ../../story-class.rst:163 ../../story-class.rst:204
#: 1bc811c15fef43e3937399af876a0ae9 985bb1b2611447e2a6591938edde94e8
#, fuzzy
msgid "mediabox: None or rect for new page."
msgstr "新しいページ用の `None` またはrect。"

#: ../../story-class.rst:164 ../../story-class.rst:205
#: b287c03da748483ba53d519c6da0fddc f21f2b321e5341aba1b1499328683bcb
#, fuzzy
msgid "rect: The next rect into which content should be placed."
msgstr "コンテンツを配置する次の矩形。"

#: ../../story-class.rst:165 2e543cb363be42a68fdfd59a302f393b
#, fuzzy
msgid "ctm: None or a `Matrix`."
msgstr "`None` または `Matrix`。"

#: ../../story-class.rst:166 8c32171eb1ec4c15b2f8577aefc330a3
msgid ""
"None, or a callable taking `(position: ElementPosition)`:  * position:"
"     An `ElementPosition` with an extra `.page_num` member. Typically "
"called multiple times as we generate elements that are headings or have "
"an id."
msgstr ""

#: ../../story-class.rst:166 39dd2962c0be42ba83bcda85bbaecd81
#, fuzzy
msgid "None, or a callable taking `(position: ElementPosition)`:"
msgstr ""
"`None` または(ElementPosition)を取り、`(position: ElementPosition)`: "
"positionを返すcallable："

#: ../../story-class.rst:168 e4181b9318074475b9c1434fbc1eac5a
msgid "position:"
msgstr ""

#: ../../story-class.rst:169 1bf0973767b345e4bc83bdbd9a652739
msgid "An `ElementPosition` with an extra `.page_num` member."
msgstr "`.page_num` メンバーを持つ `ElementPosition`。"

#: ../../story-class.rst:170 c7175bb5c515493892db81377c99c85a
msgid ""
"Typically called multiple times as we generate elements that are headings"
" or have an id."
msgstr "通常、見出しやIDを持つ要素を生成する際に複数回呼び出されます。"

#: ../../story-class.rst:172 6ecdbde06e904ba3b174f9a790d4495f
msgid ""
"None, or a callable taking `(page_num, mediabox, dev, after)`; called at "
"start (`after=0`) and end (`after=1`) of each page."
msgstr ""
"`None` または `(page_num, mediabox, dev, after)` "
"を取り、各ページの開始(`after=0`)および終了（`after=1`）時に呼び出されます。"

#: ../../story-class.rst:178 4d76e400fbef445fa2a7b9fcc3f2acfb
msgid ""
"Static method that does iterative layout of html content to a "
"`DocumentWriter`."
msgstr "htmlコンテンツを :ref:`DocumentWriter` に対して反復的にレイアウトするための静的メソッド。"

#: ../../story-class.rst:181 21794b44e64d44d0818080c2d30d3f8b
msgid ""
"For example this allows one to add a table of contents section while "
"ensuring that page numbers are patched up until stable."
msgstr "これにより、ページ番号が安定するまで目次セクションを追加したりすることができます。"

#: ../../story-class.rst:184 861799493c7145dd9c01df6de4599edc
msgid ""
"Repeatedly creates a new `Story` from `(contentfn(), user_css, em, "
"archive)` and lays it out with internal call to `Story.write()`; uses a "
"None writer and extracts the list of `ElementPosition`'s which is passed "
"to the next call of `contentfn()`."
msgstr ""
"`(contentfn()、user_css、em、archive)` から新しい `Story` "
"を繰り返し作成し、`Story.write()` への内部呼び出しでそれをレイアウトします。 `None` "
"のライターを使用し、`ElementPosition` のリストを次回の `contentfn()` 呼び出しに渡します。"

#: ../../story-class.rst:190 f5549d65468f4d3fa6f0f8ca1163fd35
msgid ""
"When the html from `contentfn()` becomes unchanged, we do a final "
"iteration using `writer`."
msgstr "`contentfn()` からのhtmlが変更されなくなると、`writer` を使用して最終的な反復処理を行います。"

#: ../../story-class.rst:193 e597155bf3a040c3afa98dcdd793589b
msgid "A `DocumentWriter`."
msgstr ":ref:`DocumentWriter`。"

#: ../../story-class.rst:195 0b2c3a7b96664c668e36e5330eed06c2
msgid ""
"A function taking a list of `ElementPositions` and returning a string "
"containing html. The returned html can depend on the list of positions, "
"for example with a table of contents near the start."
msgstr ""
"`ElementPositions` "
"のリストを取り、htmlを含む文字列を返す関数。返されるhtmlは、位置のリストに依存する場合があります。たとえば、最初の近くに目次がある場合です。"

#: ../../story-class.rst:200 797412a80ba84a91b81e09bc49dfb417
#, fuzzy
msgid ""
"A callable taking `(rect_num: int, filled: Rect)` and returning "
"`(mediabox, rect, ctm)`:  * mediabox: None or rect for new page. * rect: "
"The next rect into which content should be placed. * ctm: A `Matrix`."
msgstr ""
"`(rect_num: int, filled: Rect)` を取り、`(mediabox, rect, ctm)` "
"を返すcallable：mediabox"

#: ../../story-class.rst:201 3d5092eff22a408caf07623f4449649e
msgid ""
"A callable taking `(rect_num: int, filled: Rect)` and returning "
"`(mediabox, rect, ctm)`:"
msgstr ""

#: ../../story-class.rst:206 e277c2bb59394351b52ba8474b1e382f
#, fuzzy
msgid "ctm: A `Matrix`."
msgstr ":ref:`Matrix`。"

#: ../../story-class.rst:207 8b8159b4dcf14ae8b4ae4bfb2f4a83ed
msgid ""
"None, or a callable taking `(page_num, medibox, dev, after)`; called at "
"start (`after=0`) and end (`after=1`) of each page."
msgstr ""
"`None` または `(page_num、medibox、dev、after)` "
"を取り、各ページの開始（`after=0`）および終了（`after=1`）時に呼び出されます。"

#: ../../story-class.rst:212 453019bbd4054d4aa72d0a01b93e2ce8
msgid ""
"If true, we add unique ids to all header tags that don't already have an "
"id. This can help automatic generation of tables of contents."
msgstr "Trueの場合、idを持たないすべての見出しタグに一意のidを追加します。これは目次の自動生成に役立ちます"

#: ../../story-class.rst:216 17df6d2573da4bc29c41b8ad83b65ed8
msgid "Returns:"
msgstr ""

#: ../../story-class.rst:217 480f98c7e2774117ba7a1da80ed163c3
msgid "None."
msgstr ""

#: ../../story-class.rst:221 ea69e280a1914d428a615cd4a4fda1b5
msgid ""
"Similar to `write()` except that we don't have a `writer` arg and we "
"return a PDF `Document` in which links have been created for each "
"internal html link."
msgstr ""
"`write()` に類似していますが、`writer` 引数がなく、内部のHTMLリンクごとにリンクが作成されたPDF `Document` "
"が返されます。"

#: ../../story-class.rst:227 f8ce4c53e2d8482b99c3beaf86d1d3d1
msgid ""
"Similar to `write_stabilized()` except that we don't have a `writer` arg "
"and instead return a PDF `Document` in which links have been created for "
"each internal html link."
msgstr ""
"`write_stabilized()` に類似していますが、`writer` "
"引数がなく、代わりに各内部のHTMLリンクにリンクが作成されたPDF `Document` が返されます。"

#: ../../story-class.rst:233 576b396fa22f4ded8c7e416719a39a39
msgid "The result from a `Story.fit*()` method."
msgstr ""

#: ../../story-class.rst:235 fcacac2297e946b6851d725ad7401688
msgid "Members:"
msgstr ""

#: ../../story-class.rst:237 d847ff11a1a14b8483d75b41ab16f92e
msgid "`big_enough`:"
msgstr ""

#: ../../story-class.rst:238 0c294643a959412486aaca799998cfa5
msgid "`True` if the fit succeeded."
msgstr ""

#: ../../story-class.rst:239 4d33bc5a447447cc866b4513c0d8656a
msgid "`filled`:"
msgstr ""

#: ../../story-class.rst:240 b6aae9318346487fbc3a779c32362db1
msgid "From the last call to `Story.place()`."
msgstr ""

#: ../../story-class.rst:241 1b1b43130ac34313853a4839e168b296
msgid "`more`:"
msgstr ""

#: ../../story-class.rst:242 5032e31594b34650ac6267939087491f
msgid "`False` if the fit succeeded."
msgstr ""

#: ../../story-class.rst:243 996faae4685641d99c403e169fdf574c
msgid "`numcalls`:"
msgstr ""

#: ../../story-class.rst:244 621d6a0ddd944071a357ed12925f7ec8
msgid "Number of calls made to `self.place()`."
msgstr ""

#: ../../story-class.rst:245 0cedd25f1c794f1e9c9114146571d525
#, fuzzy
msgid "`parameter`:"
msgstr "パラメーター:"

#: ../../story-class.rst:246 5d83086d6bd14ab0950d6065e59a0e4e
msgid "The successful parameter value, or the largest failing value."
msgstr ""

#: ../../story-class.rst:247 73fd651965844881a900986d5abee23f
msgid "`rect`:"
msgstr ""

#: ../../story-class.rst:248 78e3ee0ddeda472eb71d6958cfc89467
msgid "The rect created from `parameter`."
msgstr ""

#: ../../story-class.rst:254 ../../story-class.rst:282
#: ../../story-class.rst:304 ../../story-class.rst:325
#: 4b2354db815847569feb18f3b023c510 9b33a9d43fcb4498823bdf60300c04da
#: a8ece2bfae4b48e6b6a9ed14e12f5338 aca865a8dabb4df998b3466b202bb426
msgid "Returns a `Story.FitResult` instance."
msgstr ""

#: ../../story-class.rst:256 d62955d42b4a4e1caf03da9fc5a99bdc
msgid ""
"On success, the last call to `self.place()` will have been with the "
"returned rectangle, so `self.draw()` can be used directly."
msgstr ""

#: ../../story-class.rst:259 63aa857801ef4edca7d89591b7714f43
msgid ""
"A callable taking a floating point `parameter` and returning a "
"`pymupdf.Rect()`. If the rect is empty, we assume the story will not fit and"
" do not call `self.place()`.  Must guarantee that `self.place()` behaves "
"monotonically when given rect `fn(parameter`) as `parameter` increases. "
"This usually means that both width and height increase or stay unchanged "
"as `parameter` increases."
msgstr ""

#: ../../story-class.rst:260 6ac30a70c5914d768f23cdb859888f93
msgid ""
"A callable taking a floating point `parameter` and returning a "
"`pymupdf.Rect()`. If the rect is empty, we assume the story will not fit and"
" do not call `self.place()`."
msgstr ""

#: ../../story-class.rst:264 616058b4ea6f4783a52f2b0cfa2b8806
msgid ""
"Must guarantee that `self.place()` behaves monotonically when given rect "
"`fn(parameter`) as `parameter` increases. This usually means that both "
"width and height increase or stay unchanged as `parameter` increases."
msgstr ""

#: ../../story-class.rst:268 2210aed421db46668330b557fda9a212
msgid "Minimum parameter to consider; `None` for -infinity."
msgstr ""

#: ../../story-class.rst:270 b885db69bb8848eb93ab086a76f7d621
msgid "Maximum parameter to consider; `None` for +infinity."
msgstr ""

#: ../../story-class.rst:272 897e9e78d2a84930be2568d9219e1588
msgid "Maximum error in returned `parameter`."
msgstr ""

#: ../../story-class.rst:274 ../../story-class.rst:295
#: ../../story-class.rst:317 ../../story-class.rst:338
#: 032b466db20c4ccd8997f73437eb7df3 9f35b645467b4837b5112ceff4690b35
#: c5ecd7ef12f44fe8ab1bb4bdb7ae1146 e695c5dddc6f406194e893b557815b85
msgid "If true we output diagnostics."
msgstr ""

#: ../../story-class.rst:279 84f72360ee6043b8aeb4904cdbb6a6d7
msgid ""
"Finds smallest value `scale` in range `scale_min..scale_max` where `scale"
" * rect` is large enough to contain the story `self`."
msgstr ""

#: ../../story-class.rst:284 ../../story-class.rst:306
#: 1ebdf7404ae948fdb63d16d4d663fa2c 4a8be6551d2e41f68010b753fc2dd4c3
msgid "width of rect."
msgstr ""

#: ../../story-class.rst:286 ../../story-class.rst:327
#: 96364cb3b5254067822c8b63dd97a7ec ab58553657544c509aa7deac667483fa
msgid "height of rect."
msgstr ""

#: ../../story-class.rst:288 12e83d861ad84bb2ac951ca3c2f2c022
msgid "Minimum scale to consider; must be >= 0."
msgstr ""

#: ../../story-class.rst:290 d22783ce69954a91b408bf8dd7c2b3f6
msgid "Maximum scale to consider, must be >= scale_min or `None` for infinite."
msgstr ""

#: ../../story-class.rst:293 dcea33a437b745eb8ef003a604645518
msgid "Maximum error in returned scale."
msgstr ""

#: ../../story-class.rst:300 58c77b9b2d764ac7829408d9df250b48
msgid ""
"Finds smallest height in range `height_min..height_max` where a rect with"
" size `(width, height)` is large enough to contain the story `self`."
msgstr ""

#: ../../story-class.rst:308 6e2f976290684945a186d360b2115dc3
msgid "Minimum height to consider; must be >= 0."
msgstr ""

#: ../../story-class.rst:310 23e875e015c0472a8c60def2b9c48f34
msgid "Maximum height to consider, must be >= height_min or `None` for infinite."
msgstr ""

#: ../../story-class.rst:313 ../../story-class.rst:334
#: 57d7318d2db44c0082b199ad3a6e241e 7ee6a60169d14e618cf255b73e4c6f35
msgid "`(x0, y0)` of rect."
msgstr ""

#: ../../story-class.rst:315 b8dc463a94af42f4ad16f2e476f83cc9
msgid "Maximum error in returned height."
msgstr ""

#: ../../story-class.rst:322 25288df4750647a2a9168794696d3c65
msgid ""
"Finds smallest width in range `width_min..width_max` where a rect with "
"size `(width, height)` is large enough to contain the story `self`."
msgstr ""

#: ../../story-class.rst:329 8ca75fb31a3043749e348ccea190a1b4
msgid "Minimum width to consider; must be >= 0."
msgstr ""

#: ../../story-class.rst:331 49e2d822545d4518b2e7acd250ae9d31
msgid "Maximum width to consider, must be >= width_min or `None` for infinite."
msgstr ""

#: ../../story-class.rst:336 66d195dc177d4bfa847e04dde48a9824
msgid "Maximum error in returned width."
msgstr ""

#: ../../story-class.rst:343 26bc39cf24fb4789b4ee78155a346e4f
msgid "Element Positioning CallBack function"
msgstr "要素位置コールバック関数"

#: ../../story-class.rst:345 7156a0fc901f455f8b0ce29b9161ae0a
msgid ""
"The callback function can be used to log information about story output. "
"The function's access to the information is read-only: it has no way to "
"influence the story's output."
msgstr "コールバック関数は、ストーリーの出力に関する情報を記録するために使用できます。この関数は情報への読み取り専用アクセスを持ち、ストーリーの出力に影響を与える方法はありません。"

#: ../../story-class.rst:347 e62159201b95489babcabf28e6987ec2
msgid ""
"A typical loop for executing a story with using this method would look "
"like this::"
msgstr "このメソッドを使用してストーリーを実行する典型的なループは次のようになります:"

#: ../../story-class.rst:379 d7db949092ab4d41871738017de7d492
msgid "Attributes of the ElementPosition class"
msgstr "ElementPosition クラスの属性"

#: ../../story-class.rst:380 29a47a0aaaf848f980e32c086ea5b737
msgid ""
"Exactly one parameter must be passed to the function provided by "
":meth:`Story.element_positions`. It is an object with the following "
"attributes:"
msgstr ":meth:`Story.element_positions` で提供される関数に渡すパラメータは、次の属性を持つオブジェクトである必要があります。"

#: ../../story-class.rst:382 944aaac7db8c48a28f3605d5540769a3
msgid ""
"The parameter passed to the `recorder` function is an object with the "
"following attributes:"
msgstr "`recorder` 関数に渡されるパラメータは、次の属性を持つオブジェクトです。"

#: ../../story-class.rst:384 498b5c41055440ff93b7bc3bf40594c2
msgid "`elpos.depth` (int) -- depth of this element in the box structure."
msgstr "`elpos.depth` （int）– ボックス構造内でのこの要素の深さ。"

#: ../../story-class.rst:386 b05a4b94d4e74e7182b9b64f66fa2d30
msgid ""
"`elpos.heading` (int) -- the header level, 0 if no header, 1-6 for "
":htmlTag:`h1` - :htmlTag:`h6`."
msgstr ""
"`elpos.heading` （int）– ヘッダーレベル、ヘッダーがない場合は0、 :htmlTag:`h1` - :htmlTag:`h6`"
" に対して1-6。"

#: ../../story-class.rst:388 55774cf620154ef6819d7c2897c36ecb
#, fuzzy
msgid ""
"`elpos.href` (str) -- value of the `href` attribute, or None if not "
"defined."
msgstr "`elpos.href` （str）– `href` 属性の値、または未定義の場合は `None`。"

#: ../../story-class.rst:390 30286be8813a401e8b5aca7caab81343
msgid "`elpos.id` (str) -- value of the `id` attribute, or None if not defined."
msgstr "`elpos.id` （str）– `id` 属性の値、または未定義の場合は `None`。"

#: ../../story-class.rst:392 3f37db63a8a842929212d7d6fd5188de
msgid "`elpos.rect` (tuple) -- element position on page."
msgstr "`elpos.rect` （tuple）– ページ上の要素の位置。"

#: ../../story-class.rst:394 17b7b0ddc04645ec99964f81c4f5aaa3
msgid "`elpos.text` (str) -- immediate text of the element."
msgstr "`elpos.text` （str）– 要素の直接のテキスト。"

#: ../../story-class.rst:396 c25e0f2ab1324f79b20d9debe15e11c9
msgid ""
"`elpos.open_close` (int bit field) -- bit 0 set: opens element, bit 1 "
"set: closes element. Relevant for elements that may contain other "
"elements and thus may not immediately be closed after being created / "
"opened."
msgstr ""
"`elpos.open_close` （int ビットフィールド）– "
"ビット0がセットされている場合、要素を開く。ビット1がセットされている場合、要素を閉じる。他の要素を含む可能性がある要素に対して、即座に作成/開始された後にすぐに閉じられない要素に関連します。"

#: ../../story-class.rst:398 4e340fbebe344669b11505f6ac78f0c4
msgid "`elpos.rect_num` (int) -- count of rectangles filled by the story so far."
msgstr "`elpos.rect_num` （int）– これまでにストーリーで埋められた長方形の数。"

#: ../../story-class.rst:400 4d623cd7efcd42d09f5d8f7c59edae0a
msgid ""
"`elpos.page_num` (int) -- page number; only present when using "
"`pymupdf.Story.write*()` functions."
msgstr "`elpos.page_num` （int）– ページ番号。`pymupdf.Story.write*()` 関数を使用する場合にのみ存在します。"

#: ../../footer.rst:71 cf6b29a38132416c91ce0ab7a2a2b769
msgid "This documentation covers all versions up to |version|."
msgstr "このドキュメントは |version| までのすべてのバージョンを対象としています。"

#: ../../footer.rst:-1 692774635ea4448f934e5a0c6a5453ad
msgid "Discord logo"
msgstr ""

#~ msgid ""
#~ "a callable taking `(rect_num: int, "
#~ "filled: Rect)` and returning `(mediabox, "
#~ "rect, ctm)`:     mediabox:         None or "
#~ "rect for new page.     rect:         The"
#~ " next rect into which content should"
#~ " be placed.     ctm:         None or "
#~ "a `Matrix`."
#~ msgstr ""

#~ msgid "mediabox:"
#~ msgstr ""

#~ msgid "rect:"
#~ msgstr ""

#~ msgid "ctm:"
#~ msgstr ""

#~ msgid ""
#~ "None, or a callable taking `(position:"
#~ " ElementPosition)`: position:     An "
#~ "`ElementPosition` with an extra `.page_num`"
#~ " member. Typically called multiple times"
#~ " as we generate elements that are "
#~ "headings or have an id."
#~ msgstr ""

#~ msgid "."
#~ msgstr ""

