# PyMuPDF Japanese documentation
# Copyright (C) 2015-2023, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# Jamie Lemon <jamie.lemon@artifex.com>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.23.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-09-28 14:54+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Suzan Sanver <suzan.sanver@dijipiji.com>\n"
"Language: ja\n"
"Language-Team: ja <suzan.sanver@dijipiji.com>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1
msgid "PyMuPDF is a high-performance Python library for data extraction, analysis, conversion & manipulation of PDF (and other) documents."
msgstr "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"

#: ../../header.rst:-1
msgid "PDF Text Extraction, PDF Image Extraction, PDF Conversion, PDF Tables, PDF Splitting, PDF Creation, Pyodide, PyScript"
msgstr "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"

#: ../../font.rst:7 0c0bcef3d611426988ec502fb4fcc235
msgid "Font"
msgstr "Font (フォント)"

#: ../../font.rst:9 f6ff03c7562d4e9f922409d0e71fa83f
msgid "New in v1.16.18"
msgstr "新機能：v1.16.18"

#: ../../font.rst:11 cfc0381cb43948edb00924dff9e28dad
msgid ""
"This class represents a font as defined in MuPDF (*fz_font_s* structure)."
" It is required for the new class :ref:`TextWriter` and the new "
":meth:`Page.write_text`. Currently, it has no connection to how fonts are"
" used in methods :meth:`Page.insert_text` or :meth:`Page.insert_textbox`,"
" respectively."
msgstr ""
"このクラスは、MuPDFで定義されたフォント（fz_font_s構造体）を表します。これは、新しいクラス :ref:`TextWriter` "
"と新しい :meth:`Page.write_text` に必要であり、現在、:meth:`Page.insert_text` または "
":meth:`Page.insert_textbox` メソッドでフォントがどのように使用されているかとは関係ありません。"

#: ../../font.rst:13 b5587dad24e34ab899e7b3b18a46cb8e
msgid ""
"A Font object also contains useful general information, like the font "
"bbox, the number of defined glyphs, glyph names or the bbox of a single "
"glyph."
msgstr "Fontオブジェクトには、フォントbbox、定義済みグリフの数、グリフ名、単一グリフのbboxなど、有用な一般情報も含まれています。"

#: ../../font.rst:17 4f74ee19caed4c2b85783836ea1b745d
msgid "**Method / Attribute**"
msgstr "**メソッド/属性** "

#: ../../font.rst:17 3806d67223c54248abe8a8e36fc25dfb
msgid "**Short Description**"
msgstr "**短い説明** "

#: ../../font.rst:19 ba5e6be1152143d998426674483255ed
msgid ":meth:`~Font.glyph_advance`"
msgstr ""

#: ../../font.rst:19 44c7544cff974cc2b85c0bb4de2b6a2c
msgid "Width of a character"
msgstr "文字の幅"

#: ../../font.rst:20 37d4d1020f5240ea9cc78ffb059031c8
msgid ":meth:`~Font.glyph_bbox`"
msgstr ""

#: ../../font.rst:20 b050a566c5464550b6b9be94fb9155a3
msgid "Glyph rectangle"
msgstr "グリフの矩形"

#: ../../font.rst:21 3e19ddc0522344cf986ae7fa17f6a044
msgid ":meth:`~Font.glyph_name_to_unicode`"
msgstr ""

#: ../../font.rst:21 1efd00bbe81c41e5821052d2822725b8
msgid "Get unicode from glyph name"
msgstr "グリフ名からUnicodeを取得"

#: ../../font.rst:22 2b7cca345272407886b0a7f26103a822
msgid ":meth:`~Font.has_glyph`"
msgstr ""

#: ../../font.rst:22 468f7cad184e4c09b4310a96749ab65d
msgid "Return glyph id of unicode"
msgstr "UnicodeのグリフIDを返す"

#: ../../font.rst:23 a4cd27e2d0634962a9f0fe88eace4664
msgid ":meth:`~Font.text_length`"
msgstr ""

#: ../../font.rst:23 1113cab4e5374d52948a329c12e05185
msgid "Compute string length"
msgstr "文字列の長さを計算"

#: ../../font.rst:24 476c794015114765aaea2fbe2b02176e
msgid ":meth:`~Font.char_lengths`"
msgstr ""

#: ../../font.rst:24 2f8899ebc23040cb9cd408b6105c62e1
msgid "Tuple of char widths of a string"
msgstr "文字列の文字幅のタプル"

#: ../../font.rst:25 94cde7b5c5124c7e8017393b8eb70320
msgid ":meth:`~Font.unicode_to_glyph_name`"
msgstr ""

#: ../../font.rst:25 7dc200ae6709499eb01d0be16316dfdf
msgid "Get glyph name of a unicode"
msgstr "Unicodeのグリフ名を取得"

#: ../../font.rst:26 c9346d9b6e864f5eac62239a809fe8db
msgid ":meth:`~Font.valid_codepoints`"
msgstr ""

#: ../../font.rst:26 c1c6309bb88643019c1df57f68227dbb
msgid "Array of supported unicodes"
msgstr "サポートされているUnicodeの配列"

#: ../../font.rst:27 05d6b9aeb0274b0d8dcce2bc367b3c4a
msgid ":attr:`~Font.ascender`"
msgstr ""

#: ../../font.rst:27 9f3c9582f86d4673b6dcbb670a0ac61b
msgid "Font ascender"
msgstr "フォントのアセンダ"

#: ../../font.rst:28 63a7cead5c9946df91304ba4fd97ea76
msgid ":attr:`~Font.descender`"
msgstr ""

#: ../../font.rst:28 aaafb29462584c25a6809f7915ff113d
msgid "Font descender"
msgstr "フォントのディセンダ"

#: ../../font.rst:29 877181fda6f946a8b85ce9662510e2be
msgid ":attr:`~Font.bbox`"
msgstr ""

#: ../../font.rst:29 0245dab4c6ec49a9bae1c9d201d1a53c
msgid "Font rectangle"
msgstr "フォントの矩形"

#: ../../font.rst:30 3effa7b3ee664b578dbe8025b456d3d5
msgid ":attr:`~Font.buffer`"
msgstr ""

#: ../../font.rst:30 736bb0b6f6c8400c889c4cc16c202337
msgid "Copy of the font's binary image"
msgstr "フォントのバイナリイメージのコピー"

#: ../../font.rst:31 f57b578360284116ab805a9fcdd9fb0f
msgid ":attr:`~Font.flags`"
msgstr ""

#: ../../font.rst:31 c83b8df2d85c4bc090f056cc171d62d9
msgid "Collection of font properties"
msgstr "フォントのプロパティのコレクション"

#: ../../font.rst:32 a1044b43476843dcb9f1363925d12f08
msgid ":attr:`~Font.glyph_count`"
msgstr ""

#: ../../font.rst:32 d4ad7642b8df4855aa7fe016a1abb953
msgid "Number of supported glyphs"
msgstr "サポートされているグリフの数"

#: ../../font.rst:33 3172f12380384f9ca9e7ce88f1a70501
msgid ":attr:`~Font.name`"
msgstr ""

#: ../../font.rst:33 a369faf5a3ab47e791332cf0ac1a3549
msgid "Name of font"
msgstr "フォントの名前"

#: ../../font.rst:34 7a2838ffb1214343abc026dfc68d3f93
msgid ":attr:`~Font.is_writable`"
msgstr ""

#: ../../font.rst:34 3e92858137604ccfa96b9980e48026f5
msgid "Font usable with :ref:`TextWriter`"
msgstr ":ref:`TextWriter` で使用可能なフォント"

#: ../../font.rst:38 3deb11394a154e67abcd2ee53dfd1492
msgid "**Class API**"
msgstr "**クラスAPI**"

#: ../../font.rst:57 60fcb8bf4bd647f983347dd1a6f07361
msgid ""
"Font constructor. The large number of parameters are used to locate font,"
" which most closely resembles the requirements. Not all parameters are "
"ever required -- see the below pseudo code explaining the logic how the "
"parameters are evaluated."
msgstr ""
"フォントコンストラクタ。多くのパラメータは、要件に最も近いフォントを特定するために使用されます。必ずしもすべてのパラメータが必要とされるわけではありません"
" - パラメータが評価されるロジックを説明する以下の疑似コードを参照してください。"

#: ../../font.rst 18347f2ef76b48d194497e3cd897d1f9
#: 287c1f7faa524b868a59ddaabf525f7a 3a23c78765a84f048298af8ad5e2090f
#: 6cf295842a474821aa2f12f338d0b678 89756dbf56604211897d0fa928323938
#: 9296ca078959419aac86fa5196e8c284 e79f9f325cda4dd5986928160f4f3fc2
#: ee5afbb9d1e044c48ffd967a6ad7e0a9
msgid "Parameters"
msgstr "パラメータ"

#: ../../font.rst:59 c06d92b0096f4813987d9cbfc8b96c01
msgid ""
"one of the :ref:`Base-14-Fonts` or CJK fontnames. Also possible are a "
"select few other names like (watch the correct spelling): \"Arial\", "
"\"Times\", \"Times Roman\".  *(Changed in v1.17.5)*  If you have "
"installed `pymupdf-fonts <https://pypi.org/project/pymupdf-fonts/>`_, "
"there are also new \"reserved\" fontnames available, which are listed in "
":attr:`fitz_fonts` and in the table further down."
msgstr ""

#: ../../font.rst:59 482949af1ab14e888023e531edbc9866
msgid ""
"one of the :ref:`Base-14-Fonts` or CJK fontnames. Also possible are a "
"select few other names like (watch the correct spelling): \"Arial\", "
"\"Times\", \"Times Roman\"."
msgstr ""
":ref:`Base-14-Fonts` またはCJKフォントの名前のいずれか。また、\"Arial\"、\"Times\"、\"Times "
"Roman\"などの選択的な名前も可能です。"

#: ../../font.rst:61 529f47be9bbc415cb65597f98550d121
msgid "*(Changed in v1.17.5)*"
msgstr "(v1.17.5で変更)"

#: ../../font.rst:63 0e558d3b0a184028ac28e92747818f68
msgid ""
"If you have installed `pymupdf-fonts <https://pypi.org/project/pymupdf-"
"fonts/>`_, there are also new \"reserved\" fontnames available, which are"
" listed in :attr:`fitz_fonts` and in the table further down."
msgstr ""
"`pymupdf-fonts <https://pypi.org/project/pymupdf-fonts/>`_ "
"をインストールしている場合、:attr:`fitz_fonts` と下の表でリストされている新しい「予約済み」フォント名も利用可能です。"

#: ../../font.rst:65 9e891d2de6c3462f91fe7076deb75973
msgid "the filename of a fontfile somewhere on your system [#f1]_."
msgstr "システムのどこかにあるフォントファイルのファイル名 [#f1]_。"

#: ../../font.rst:66 ff947913ce004b80a98f803740c7ed93
msgid "a fontfile loaded in memory [#f1]_."
msgstr "メモリ内にロードされたフォントファイル [#f1]_。"

#: ../../font.rst:67 18cb432f8d77405fa1368cd95712a3cc
msgid ""
"the number of a UCDN script. Currently supported in PyMuPDF are numbers "
"24, and 32 through 35."
msgstr ""
"UCDN（Unicode Character Database "
"Number）のスクリプト番号です。現在、PyMuPDFでサポートされている番号は、24、および32から35です。"

#: ../../font.rst:68 d941a9e3f77943a48e60d605de0b9ae6
msgid ""
"one of the values \"zh-Hant\" (traditional Chinese), \"zh-Hans\" "
"(simplified Chinese), \"ja\" (Japanese) and \"ko\" (Korean). Otherwise, "
"all ISO 639 codes from the subsets 1, 2, 3 and 5 are also possible, but "
"are currently documentary only."
msgstr "UCDNスクリプトの番号。現在、PyMuPDFでサポートされているのは24、および32から35の数値です"

#: ../../font.rst:69 1e0624dde4814c47a4c61790d3a5ad8c
msgid "an alternative selector for one of the CJK fonts."
msgstr "CJKフォントの選択のための代替セレクタ。"

#: ../../font.rst:70 ef3ac3cd595a4b2397afccd4390a2182
msgid "look for a bold font."
msgstr "太字のフォントを探します。"

#: ../../font.rst:71 7e495c83ca2d4ec4b3f324175d8c7cdd
msgid "look for an italic font."
msgstr "イタリック体のフォントを探します。"

#: ../../font.rst:72 48abea8ef7a5460f9dc93d5201aab037
msgid "look for a serifed font."
msgstr "セリフ付きのフォントを探します。"

#: ../../font.rst 277c779518444c09a0be75c7895580dd
#: 3667c13b07824d1ba2fdb036edecdcdf 381877ea1fe04c55817712a61f6d3883
#: 4d13344e673646c5aaef2ef157c99b9e 58695f8cbfe746839d69d3db8d8509dc
#: 78143c870b21481b910dd2335d33f51f ccc702c7cb4645feb07393e68c165a0f
#: d515c22a941a40dfb924280236d5e914 df00eeba680642dea049b16fa1d490a9
msgid "Returns"
msgstr "戻り値"

#: ../../font.rst:74 e1c7fbdf7dc844789449ec666a61ac98
msgid ""
"a MuPDF font if successful. This is the overall sequence of checks to "
"determine an appropriate font:  =========== "
"============================================================ Argument    "
"Action =========== "
"============================================================ fontfile?   "
"Create font from file, exception if failure. fontbuffer? Create font from"
" buffer, exception if failure. ordering>=0 Create universal font, always "
"succeeds. fontname?   Create a Base-14 font, universal font, or font"
"             provided by `pymupdf-fonts <https://pypi.org/project"
"/pymupdf-fonts/>`_. See table below. =========== "
"============================================================"
msgstr ""

#: ../../font.rst:74 477bf6b7209840e3b4943d4fec3dbaf4
msgid ""
"a MuPDF font if successful. This is the overall sequence of checks to "
"determine an appropriate font:"
msgstr "成功した場合はMuPDFフォント。適切なフォントを特定するための全体のチェックのシーケンスは次のとおりです。"

#: ../../font.rst:77 9cb7de66941a4fac8973496805cb93c1
msgid "Argument"
msgstr "引数"

#: ../../font.rst:77 fd1fa8003b3e4140bf99ba8f51cabc5b
msgid "Action"
msgstr "アクション"

#: ../../font.rst:79 307cc25ab37042df9d4a5972fff71b6d
msgid "fontfile?"
msgstr ""

#: ../../font.rst:79 865491f3e0864fbc9c245f9fda7bea2e
msgid "Create font from file, exception if failure."
msgstr "ファイルからフォントを作成し、失敗した場合は例外をスローします。"

#: ../../font.rst:80 f2df8a1f57ef4cea89c0804fd1d9335d
msgid "fontbuffer?"
msgstr ""

#: ../../font.rst:80 956fe3670fa6475b9f51cb215e767778
msgid "Create font from buffer, exception if failure."
msgstr "バッファからフォントを作成し、失敗した場合は例外をスローします。"

#: ../../font.rst:81 439f6a35ebb14c76b22c662af8038e69
msgid "ordering>=0"
msgstr ""

#: ../../font.rst:81 98c77c4920904b0a815dd1ab351133ca
msgid "Create universal font, always succeeds."
msgstr "ユニバーサルフォントを作成し、常に成功します。"

#: ../../font.rst:82 67fa5d401b644d74b2fe197a1b1d76f8
msgid "fontname?"
msgstr ""

#: ../../font.rst:82 9915c9b070ba4a2daa387420a52164fe
msgid ""
"Create a Base-14 font, universal font, or font provided by `pymupdf-fonts"
" <https://pypi.org/project/pymupdf-fonts/>`_. See table below."
msgstr ""
"ベース14フォント、ユニバーサルフォント、または `pymupdf-fonts <https://pypi.org/project"
"/pymupdf-fonts/>`_ で提供されるフォントを作成します。下の表を参照してください。"

#: ../../font.rst:89 3c62810aa2e8432690de54fafd06e2aa
msgid ""
"With the usual reserved names \"helv\", \"tiro\", etc., you will create "
"fonts with the expected names \"Helvetica\", \"Times-Roman\" and so on. "
"**However**, and in contrast to :meth:`Page.insert_font` and friends,"
msgstr ""
"通常の予約済みの名前「helv」、「tiro」などを使用すると、期待どおりの名前「Helvetica」、「Times-"
"Roman」などのフォントが作成されます。**ただし** 、:meth:`Page.insert_font` などとは異なり、"

#: ../../font.rst:91 2603b3992bf4445c99ac5b98efca7333
msgid "a font file will **always** be embedded in your PDF,"
msgstr "フォントファイルはPDFに **常に** 埋め込まれます。"

#: ../../font.rst:92 1677869525164903b0f5967d3529ed87
msgid ""
"Greek and Cyrillic characters are supported without needing the "
"*encoding* parameter."
msgstr "ギリシャ文字およびキリル文字は *エンコーディング* パラメータを必要とせずにサポートされます。"

#: ../../font.rst:94 6041635d0add4f30b19610fdfb86ea55
msgid ""
"Using *ordering >= 0*, or fontnames \"cjk\", \"china-t\", \"china-s\", "
"\"japan\" or \"korea\" will **always create the same \"universal\"** font"
" **\"Droid Sans Fallback Regular\"**. This font supports **all Chinese, "
"Japanese, Korean and Latin characters**, including Greek and Cyrillic. "
"This is a sans-serif font."
msgstr ""
"ordering >= "
"0を使用するか、フォント名「cjk」、「china-t」、「china-s」、「japan」、「korea」を使用すると、**常に同じ「汎用」**"
" フォント **「Droid Sans Fallback "
"Regular」が作成されます**。このフォントは、**中国語、日本語、韓国語、ラテン文字、ギリシャ文字、キリル文字を含むすべての文字をサポートしています**。これはサンセリフのフォントです。"

#: ../../font.rst:96 0a3296ac22974419b4f0d6da8c9b0e40
msgid ""
"Actually, you would rarely ever need another sans-serif font than "
"**\"Droid Sans Fallback Regular\"**. **Except** that this font file is "
"relatively large and adds about 1.65 MB (compressed) to your PDF file "
"size. If you do not need CJK support, stick with specifying \"helv\", "
"\"tiro\" etc., and you will get away with about 35 KB compressed."
msgstr ""
"実際、通常、「Droid Sans Fallback "
"Regular」以外のサンセリフのフォントはほとんど必要ありません。ただし、このフォントファイルは比較的大きく、PDFファイルサイズを約1.65 "
"MB（圧縮）増加させます。CJKのサポートが必要でない場合は、「helv」、「tiro」などを指定し、約35 KB（圧縮）で済むでしょう。"

#: ../../font.rst:98 584c15850a854832918cf111477562da
msgid ""
"If you **know** you have a mixture of CJK and Latin text, consider just "
"using `Font(\"cjk\")` because this supports everything and also "
"significantly (by a factor of up to three) speeds up execution: MuPDF "
"will always find any character in this single font and never needs to "
"check fallbacks."
msgstr ""
"CJKとラテン文字の混合テキストがあることを **知っている** 場合は、単に `Font(\"cjk\")` "
"を使用して、すべてをサポートし、実行を大幅に高速化します（最大3倍）。MuPDFは常にこの単一のフォントで任意の文字を見つけることができ、フォールバックをチェックする必要はありません。"

#: ../../font.rst:100 b3d17f05488143ca89633135423321fc
msgid ""
"But if you do use some other font, you will still automatically be able "
"to also write CJK characters: MuPDF detects this situation and silently "
"falls back to the universal font (which will then of course also be "
"embedded in your PDF)."
msgstr "ただし、他のフォントを使用する場合、CJK文字を書き込むことも自動的にできるようになります。MuPDFはこの状況を検出し、静かにユニバーサルフォントにフォールバックします（その場合、当然、PDFにも埋め込まれます）。"

#: ../../font.rst:102 e27c401808b645d5b7a0692077d21d62
msgid ""
"*(New in v1.17.5)* Optionally, some new \"reserved\" fontname codes "
"become available if you install `pymupdf-fonts <https://pypi.org/project"
"/pymupdf-fonts/>`_, `pip install pymupdf-fonts`. **\"Fira Mono\"** is a "
"mono-spaced sans font set and **FiraGO** is another non-serifed "
"\"universal\" font set which supports all Latin (including Cyrillic and "
"Greek) plus Thai, Arabian, Hewbrew and Devanagari -- but none of the CJK "
"languages. The size of a FiraGO font is only a quarter of the \"Droid "
"Sans Fallback\" size (compressed 400 KB vs. 1.65 MB) -- **and** it "
"provides the weights bold, italic, bold-italic -- which the universal "
"font doesn't."
msgstr ""
"*（v1.17.5で新登場）* オプションで、`pymupdf-fonts <https://pypi.org/project/pymupdf-"
"fonts/>`_ をインストールすると、いくつかの新しい「予約済み」フォント名コードが利用可能になります。 **\"Fira Mono\"** "
"は等幅のサンセリフフォントセットで、**FiraGO** "
"はラテン文字（キリル文字とギリシャ文字を含む）およびタイ語、アラビア語、ヘブライ語、デーバナガリ語をサポートする別のサンセリフの「ユニバーサル」フォントセットですが、CJK言語はサポートしていません。"
" FiraGOフォントのサイズは「Droid Sans Fallback」のサイズの1/4だけです（圧縮400 KB対1.65 MB） "
"**そして** 、ユニバーサルフォントにはない太字、イタリック、太字イタリックのウェイトを提供しています。"

#: ../../font.rst:104 0d7b045fe2ed4541a0262181e62f3dfd
msgid ""
"**\"Space Mono\"** is another nice and small mono-spaced font from Google"
" Fonts, which supports Latin Extended characters and comes with all 4 "
"important weights."
msgstr ""
"**\"Space Mono\"** "
"はGoogleフォントからのもう1つの素敵で小さな等幅フォントで、ラテン拡張文字をサポートし、すべての4つの重要なウェイトが含まれています。"

#: ../../font.rst:106 e3586336a30a4ee2b1a6d48397025aae
msgid ""
"The following table maps a fontname code to the corresponding font. For "
"the current content of the package please see its documentation:"
msgstr "次の表は、フォント名コードを対応するフォントにマッピングしています。パッケージの現在の内容については、そのドキュメンテーションを参照してください："

#: ../../font.rst:109 36751d5b79594f8791b5bb844f44e0f3
msgid "Code"
msgstr "コード"

#: ../../font.rst:109 47fa061c9e9c4a599ca6897367956e5c
msgid "Fontname"
msgstr "フォント名"

#: ../../font.rst:109 0b4dc4839dd643eeb8b1bb1234e2f8ba
msgid "New in"
msgstr "バージョン"

#: ../../font.rst:109 340a6e328f7e460d8fac33aaa0bd2823
msgid "Comment"
msgstr "コメント"

#: ../../font.rst:111 1a8d64ad5a424f5c8d07a36c6ee2766f
msgid "figo"
msgstr ""

#: ../../font.rst:111 fbca884b640744f1a12aafa6f29c059e
msgid "FiraGO Regular"
msgstr "FiraGO レギュラー"

#: ../../font.rst:111 ../../font.rst:112 ../../font.rst:113 ../../font.rst:114
#: ../../font.rst:115 ../../font.rst:116 60bfe62ef46947c8aac90b80a4b74105
#: 844db8e8e6ff4cb0bc949a6013ed6fe6 b5b0bd8b997c4e0ea1bfff9e1c089458
#: dcd988996cf74b04b2ba80409a5d5f09 f040de2c07fe407ca4278cad565d0743
#: f9c9dcfc74754325be3751719272111e
msgid "v1.0.0"
msgstr ""

#: ../../font.rst:111 5e26e151de0e4121ba2e4b581bd123e9
msgid "narrower than Helvetica"
msgstr "Helveticaよりも狭い"

#: ../../font.rst:112 f100630c18304da98b3dad065b593af0
msgid "figbo"
msgstr ""

#: ../../font.rst:112 738df3e9a542419e94fb8e1f8a5fea4f
msgid "FiraGO Bold"
msgstr "FiraGO ボールド"

#: ../../font.rst:113 a9abf01e7f404ec0bba24fc802164e17
msgid "figit"
msgstr ""

#: ../../font.rst:113 9c073f6dc2a44355b96a55d388d3c12c
msgid "FiraGO Italic"
msgstr "FiraGO イタリック"

#: ../../font.rst:114 715b7b7fedd34262969c0fce878743eb
msgid "figbi"
msgstr ""

#: ../../font.rst:114 6510cf064feb469abc0c7f9a15f6e317
msgid "FiraGO Bold Italic"
msgstr "FiraGO ボールドイタリック"

#: ../../font.rst:115 1996af8c6787458e978d4707cbab2c0a
msgid "fimo"
msgstr ""

#: ../../font.rst:115 ecd2fa2e92c54c1382f38c76eb5b9aa0
msgid "Fira Mono Regular"
msgstr "Fira Mono レギュラー"

#: ../../font.rst:116 b8fab5563be646cb8e106d3264bf60c5
msgid "fimbo"
msgstr ""

#: ../../font.rst:116 1e21cfad41f34353ba21f410be739602
msgid "Fira Mono Bold"
msgstr "Fira Mono ボールド"

#: ../../font.rst:117 186644f514d84052801bcc15cb6a2473
msgid "spacemo"
msgstr ""

#: ../../font.rst:117 6ed03d4f5deb46aaa93acae729b265b0
msgid "Space Mono Regular"
msgstr "Space Mono レギュラー"

#: ../../font.rst:117 ../../font.rst:118 ../../font.rst:119 ../../font.rst:120
#: 1d1285228b6f45509090cba92a66cc6b 29044c8b0331454e93d2372e6f35f9c8
#: 7d0660a9218d4ae2a148f35374b4abb3 a8239c415c4049cf9eff231887b005de
msgid "v1.0.1"
msgstr ""

#: ../../font.rst:118 dd3e5bbd5d734eac96933aee970c005b
msgid "spacembo"
msgstr ""

#: ../../font.rst:118 4ce42a5217cd4d7f9409de2a2dee05e0
msgid "Space Mono Bold"
msgstr "Space Mono ボールド"

#: ../../font.rst:119 96fffd3c5083441e825066cbd0900c30
msgid "spacemit"
msgstr ""

#: ../../font.rst:119 66eb965488364894b2c8e421f0a3dc52
msgid "Space Mono Italic"
msgstr "Space Mono イタリック"

#: ../../font.rst:120 6766a7debdf14977b75cf1e3164c667e
msgid "spacembi"
msgstr ""

#: ../../font.rst:120 5b67e6ffb58b47f68e7fbe6d69d35ad4
msgid "Space Mono Bold-Italic"
msgstr "Space Mono ボールドイタリック"

#: ../../font.rst:121 aff46779199447caa6f9473e1d0e01fa
msgid "math"
msgstr ""

#: ../../font.rst:121 afb996868f2045bfa7c5bf908153b362
msgid "Noto Sans Math Regular"
msgstr "Noto Sans Math レギュラー"

#: ../../font.rst:121 ../../font.rst:122 ../../font.rst:123 ../../font.rst:124
#: 19b9123d9b764b769786309b1525d4b0 2dedce81302e4a3c97b8940ab49752df
#: 6b89fe10c25c458d88f5acb792cbb49a f7e0f4aee5234ade8cc6ab76041d8212
msgid "v1.0.2"
msgstr ""

#: ../../font.rst:121 7e822db56b904cb4aca998d096cf2955
msgid "math symbols"
msgstr "数学記号"

#: ../../font.rst:122 835b07ae6b014693b00cf188a17868eb
msgid "music"
msgstr ""

#: ../../font.rst:122 719e630e36904a3b9bddfcb19b5e34d3
msgid "Noto Music Regular"
msgstr "Noto Music レギュラー"

#: ../../font.rst:122 b79c5c5f69f04d8080302b023cc40a1b
msgid "musical symbols"
msgstr "音楽記号"

#: ../../font.rst:123 37ef404fb7b34a1fa87a42dfc3781762
msgid "symbol1"
msgstr ""

#: ../../font.rst:123 f333289e2db44487bec0335b34b11a17
msgid "Noto Sans Symbols Regular"
msgstr "Noto Sans Symbols レギュラー"

#: ../../font.rst:123 9306aab54c824e269af29eb0a2ab5beb
msgid "replacement for \"symb\""
msgstr "\"symb\"の代替"

#: ../../font.rst:124 0ad6d528e15c475e92db97ca0fdaea98
msgid "symbol2"
msgstr ""

#: ../../font.rst:124 f28c6a026ae34c05aad4f393c0fdcb6d
msgid "Noto Sans Symbols2 Regular"
msgstr "Noto Sans Symbols2 レギュラー"

#: ../../font.rst:124 ce8470900f694693b7ca8bbcc958fc3a
msgid "extended symbol set"
msgstr "拡張記号セット"

#: ../../font.rst:125 e49880f44c424ff7b074b1cb5659d11c
msgid "notos"
msgstr ""

#: ../../font.rst:125 c5d6ba00c2444c22ab4451d6df15ad35
msgid "Noto Sans Regular"
msgstr "Noto Sans レギュラー"

#: ../../font.rst:125 ../../font.rst:126 ../../font.rst:127 ../../font.rst:128
#: 00ce68864aba48d0b2cb8e571e010c6e 36bf0046571640c2b8034e530e83ebae
#: 3b4d52d90ece4546b28938b480dadc97 5d54eaa9a5854f91a8c6a5a5ebd8ed30
msgid "v1.0.3"
msgstr ""

#: ../../font.rst:125 2944d324d24d402798294f47a16b27d5
msgid "alternative to Helvetica"
msgstr "Helveticaの代替"

#: ../../font.rst:126 99fd6794ea164e2283488f17759c0b9a
msgid "notosit"
msgstr ""

#: ../../font.rst:126 a956855371c547c8a4a87baa40baf980
msgid "Noto Sans Italic"
msgstr "Noto Sans イタリック"

#: ../../font.rst:127 9ba3416844e64818a86d4aecd39b48f1
msgid "notosbo"
msgstr ""

#: ../../font.rst:127 582bc7862cc34b888fcac21c0bc14de4
msgid "Noto Sans Bold"
msgstr "Noto Sans ボールド"

#: ../../font.rst:128 59866c2df1074b9f9e69c9faa51eaebd
msgid "notosbi"
msgstr ""

#: ../../font.rst:128 db3cea63c4754784a8be7ab6c2b0d3de
msgid "Noto Sans BoldItalic"
msgstr "Noto Sans ボールドイタリック"

#: ../../font.rst:138 cf35e8c4ccfe46eebef6f4c0b02bbe11
msgid ""
"Check whether the unicode *chr* exists in the font or (option) some "
"fallback font. May be used to check whether any \"TOFU\" symbols will "
"appear on output."
msgstr ""
"指定した Unicode 文字 *chr* "
"がフォント内または（オプションで）フォールバックフォント内に存在するかどうかを確認します。これは、「TOFU（豆腐）」と呼ばれる記号が出力に表示されるかどうかを確認するために使用できます。"

#: ../../font.rst:140 d7022fa5f4f9436babdcd59a6e9e8137
msgid "the unicode of the character (i.e. *ord()*)."
msgstr "文字の Unicode 値（すなわち、*ord()* 関数の結果）。"

#: ../../font.rst:141 360af698450845a3ba034f888da021f3
msgid "the language -- currently unused."
msgstr "言語（現在は未使用）。"

#: ../../font.rst:142 fbad924ffe214cc09a950b84dcb93903
msgid "the UCDN script number."
msgstr "UCDN（Unicode Common Locale Data Repository）スクリプト番号。"

#: ../../font.rst:143 093071a62e344d139aa941664b2fe4a9
msgid ""
"*(new in v1.17.5)* perform an extended search in fallback fonts or "
"restrict to current font (default)."
msgstr "*（v1.17.5 で新たに追加）* フォールバックフォントでの拡張検索を実行するか、現在のフォントに制限するかを指定します（デフォルト）。"

#: ../../font.rst:144 3eed80200b6f4def8e8015386623c42f
msgid "*(changed in 1.17.7)* the glyph number. Zero indicates no glyph found."
msgstr "*（v1.17.7 で変更）* グリフ番号。ゼロはグリフが見つからないことを示します。"

#: ../../font.rst:148 609042e3ad4240bd9ae04d0320ba2cb3
msgid "New in v1.17.5"
msgstr "v1.17.5 で新たに追加"

#: ../../font.rst:150 89a7d13375b647c9b86f73c49dd8cd55
msgid "Return an array of unicodes supported by this font."
msgstr "このフォントがサポートする Unicode の配列を返します。"

#: ../../font.rst:152 97e3283b0d324d0d9bbe598f01c19777
#, python-format
msgid ""
"an *array.array* [#f2]_ of length at most :attr:`Font.glyph_count`. I.e. "
"*chr()* of every item in this array has a glyph in the font without using"
" fallbacks. This is an example display of the supported glyphs:  >>> "
"import fitz >>> font = fitz.Font(\"math\") >>> vuc = "
"font.valid_codepoints() >>> for i in vuc:       print(\"%04X %s (%s)\" % "
"(i, chr(i), font.unicode_to_glyph_name(i))) 0000 000D   (CR) 0020   "
"(space) 0021 ! (exclam) 0022 \" (quotedbl) 0023 # (numbersign) 0024 $ "
"(dollar) 0025 % (percent) ... 00AC ¬ (logicalnot) 00B1 ± (plusminus) ... "
"21D0 ⇐ (arrowdblleft) 21D1 ⇑ (arrowdblup) 21D2 ⇒ (arrowdblright) 21D3 ⇓ "
"(arrowdbldown) 21D4 ⇔ (arrowdblboth) ... 221E ∞ (infinity) ..."
msgstr ""

#: ../../font.rst:152 58d28cd99eaa4709bb3bf638f6efce2c
msgid ""
"an *array.array* [#f2]_ of length at most :attr:`Font.glyph_count`. I.e. "
"*chr()* of every item in this array has a glyph in the font without using"
" fallbacks. This is an example display of the supported glyphs:"
msgstr ""
":attr:`Font.glyph_count` 以上の長さを持つ array.array [#f2]_。つまり、この配列内の各アイテムの "
"*chr()* は、フォールバックを使用せずにフォント内にグリフを持っていることを示します。以下はサポートされるグリフの例示です："

#: ../../font.rst:180 d0a1bd34df0c42fd8b4603a61004d2aa
msgid ""
"This method only returns meaningful data for fonts having a CMAP "
"(character map, charmap, the `/ToUnicode` PDF key). Otherwise, this array"
" will have length 1 and contain zero only."
msgstr ""
"このメソッドは、CMAP（文字マップ、charmap、`/ToUnicode` PDF "
"キー）を持つフォントに対してのみ意味のあるデータを返します。それ以外の場合、この配列は長さ1で、ゼロのみを含みます。"

#: ../../font.rst:189 6c8539379c64487da89149d3788c3a43
msgid "Calculate the \"width\" of the character's glyph (visual representation)."
msgstr "文字のグリフ（視覚的な表現）の「幅」を計算します。"

#: ../../font.rst:191 6ec24ee8c69442b9978fd4026fe355df
msgid ""
"the unicode number of the character. Use *ord()*, not the character "
"itself. Again, this should normally work even if a character is not "
"supported by that font, because fallback fonts will be checked where "
"necessary."
msgstr ""
"文字のUnicode番号。文字自体ではなく、*ord（）* "
"を使用します。文字がそのフォントでサポートされていない場合でも、必要に応じてフォールバックフォントがチェックされるため、通常は機能するはずです。"

#: ../../font.rst:192 cb86e394e2744079981f8804d9988e17
msgid "write mode, 0 = horizontal, 1 = vertical."
msgstr "書き込みモード、0 = 横方向、1 = 縦方向。"

#: ../../font.rst:194 1b68333d5ceb4f0398f78a2f7a48d883
msgid "The other parameters are not in use currently."
msgstr "その他のパラメータは現在使用されていません。"

#: ../../font.rst:196 cd342a7155c74da2887c18d397f8eeec
msgid "a float representing the glyph's width relative to **fontsize 1**."
msgstr "**フォントサイズ** 1に対するグリフの幅を表す浮動小数点数。"

#: ../../font.rst:200 c1a73a68407c44e7aa018eb971737adc
msgid ""
"Return the unicode value for a given glyph name. Use it in conjunction "
"with `chr()` if you want to output e.g. a certain symbol."
msgstr "指定されたグリフ名のUnicode値を返します。特定のシンボルを出力したい場合は、`chr()` と組み合わせて使用します。"

#: ../../font.rst:202 23d9d03ff8bf4d9282622b2628b4dffe
msgid "The name of the glyph."
msgstr "グリフの名前。"

#: ../../font.rst:204 7d3112260d7f4830ad8655cf6b167004
msgid ""
"The unicode integer, or 65533 = 0xFFFD if the name is unknown. Examples: "
"`font.glyph_name_to_unicode(\"Sigma\") = 931`, "
"`font.glyph_name_to_unicode(\"sigma\") = 963`. Refer to the `Adobe Glyph "
"List <https://github.com/adobe-type-tools/agl-"
"aglfn/blob/master/glyphlist.txt>`_ publication for a list of glyph names "
"and their unicode numbers. Example:  >>> font = fitz.Font(\"helv\") >>> "
"font.has_glyph(font.glyph_name_to_unicode(\"infinity\")) True"
msgstr ""

#: ../../font.rst:204 82b29823f4cd4a11a91bfe865c99a5ab
msgid ""
"The unicode integer, or 65533 = 0xFFFD if the name is unknown. Examples: "
"`font.glyph_name_to_unicode(\"Sigma\") = 931`, "
"`font.glyph_name_to_unicode(\"sigma\") = 963`. Refer to the `Adobe Glyph "
"List <https://github.com/adobe-type-tools/agl-"
"aglfn/blob/master/glyphlist.txt>`_ publication for a list of glyph names "
"and their unicode numbers. Example:"
msgstr ""
"Unicode整数、または名前が不明な場合は65533 = "
"0xFFFDです。例：`font.glyph_name_to_unicode(\"Sigma\") = "
"931`、`font.glyph_name_to_unicode(\"sigma\") = 963` 。Adobe Glyph "
"Listの出版物を参照して、グリフ名とUnicode番号のリストを確認してください。例："

#: ../../font.rst:216 8cedd965f1c84cd0beffbc78d72c755d
msgid "The glyph rectangle relative to :data:`fontsize` 1."
msgstr ":data:`fontsize` 1に対するグリフの矩形領域。"

#: ../../font.rst:218 6eee46cbc3d94f5794ce89d0fe3abd3c
msgid "*ord()* of the character."
msgstr "文字の *ord()* 。"

#: ../../font.rst:220 418b93be787745ecbb7fc452572adec2
msgid "a :ref:`Rect`."
msgstr ":ref:`Rect`。"

#: ../../font.rst:225 5f835799e2934d1a81660e955b55b30e
msgid "Show the name of the character's glyph."
msgstr "文字のグリフの名前を表示します。"

#: ../../font.rst:227 0fb000563c714fcd87b57d3edac56a83
msgid ""
"the unicode number of the character. Use *ord()*, not the character "
"itself."
msgstr "文字のunicode番号。文字自体ではなく *ord()* を使用します。"

#: ../../font.rst:229 9264a13227b14daeb982472b0bb5e572
msgid ""
"a string representing the glyph's name. E.g. `font.glyph_name(ord(\"#\"))"
" = \"numbersign\"`. For an invalid code \".notfound\" is returned.  .. "
"note:: *(Changed in v1.18.0)* This method and "
":meth:`Font.glyph_name_to_unicode` no longer depend on a font and instead"
" retrieve information from the **Adobe Glyph List**. Also available as "
"`fitz.unicode_to_glyph_name()` and resp. `fitz.glyph_name_to_unicode()`."
msgstr ""

#: ../../font.rst:229 e709c7a9cca04a24bd039797d897fae5
msgid ""
"a string representing the glyph's name. E.g. `font.glyph_name(ord(\"#\"))"
" = \"numbersign\"`. For an invalid code \".notfound\" is returned."
msgstr ""
"グリフの名前を表す文字列。例：`font.glyph_name(ord(\"#\")) = \"numbersign\"` "
"。無効なコードの場合、\".notfound\" が返されます。"

#: ../../font.rst:231 12cf4be24cca41beaf6848ba304d3b67
msgid ""
"*(Changed in v1.18.0)* This method and :meth:`Font.glyph_name_to_unicode`"
" no longer depend on a font and instead retrieve information from the "
"**Adobe Glyph List**. Also available as `fitz.unicode_to_glyph_name()` "
"and resp. `fitz.glyph_name_to_unicode()`."
msgstr ""
"*(1.18.0で変更)* このメソッドと:meth:`Font.glyph_name_to_unicode` "
"はもはやフォントに依存せず、**Adobe Glyph List** "
"から情報を取得します。`fitz.unicode_to_glyph_name()` とresp. "
"`fitz.glyph_name_to_unicode()` としても利用可能です。"

#: ../../font.rst:238 504143a62229460a929c089a848cd562
msgid "Calculate the length in points of a unicode string."
msgstr "Unicode文字列の長さをポイント単位で計算します。"

#: ../../font.rst:240 772278bf8164429f8037e2e160e12684
msgid ""
"There is a functional overlap with :meth:`get_text_length` for Base-14 "
"fonts only."
msgstr "Base-14フォントに対しては、:meth:`get_text_length` と機能が重複しています。"

#: ../../font.rst:242 ../../font.rst:266 b3ea4f2438424a9fabcb33261b44bf92
#: be94c36e5e1243fab33ae2b539454dbf
msgid "a text string, UTF-8 encoded."
msgstr "テキスト文字列、UTF-8エンコード。"

#: ../../font.rst:244 ../../font.rst:268 a870fc96052f44a2989c174f252b711f
#: cb5cde34578d42f98e5eb43e31938994
msgid "the :data:`fontsize`."
msgstr ":data:`fontsize`。"

#: ../../font.rst 0854dc22ba7c4178b58e8e5580434b42
#: 2099c47a113e4fa581e5b06c899ae578 729e2d8101ff44af9a64dad20cdb7f51
#: 7d1a13ce2aa14580b7927f244d2d5b8c 93f07accc7744bf29d3312b754258f4d
#: cb46f143716e4739874723cea945ec04 cf5a4909a9eb4a35acb36ac6bc3f5133
#: e6c0be82619b4e40b04f4a13f8dd80f5 ebbed807ecb14ab8a0ddaed82ee0eaa7
#: f23ac58b7782464e9e9b0c6d47d08860
msgid "Return type"
msgstr ""

#: ../../font.rst:248 29b0e91019cc4c08b1acfa2b1c57738f
msgid ""
"the length of the string in points when stored in the PDF. If a character"
" is not contained in the font, it will automatically be looked up in a "
"fallback font.  .. note:: This method was originally implemented in "
"Python, based on calling :meth:`Font.glyph_advance`. For performance "
"reasons, it has been rewritten in C for v1.18.14. To compute the width of"
" a single character, you can now use either of the following without "
"performance penalty:     1. `font.glyph_advance(ord(\"Ä\")) * fontsize`"
"    2. `font.text_length(\"Ä\", fontsize=fontsize)`     For multi-"
"character strings, the method offers a huge performance advantage "
"compared to the previous implementation: instead of about 0.5 "
"microseconds for each character, only 12.5 nanoseconds are required for "
"the second and subsequent ones."
msgstr ""

#: ../../font.rst:248 df3f79b6aff84bb98d2312a68c3909bd
msgid ""
"the length of the string in points when stored in the PDF. If a character"
" is not contained in the font, it will automatically be looked up in a "
"fallback font."
msgstr "PDFに格納された文字列のポイント単位の長さ。文字がフォントに含まれていない場合、自動的にフォールバックフォントで検索されます。"

#: ../../font.rst:250 8d29010ecc6f451aab1edb4bd6be3d48
msgid ""
"This method was originally implemented in Python, based on calling "
":meth:`Font.glyph_advance`. For performance reasons, it has been "
"rewritten in C for v1.18.14. To compute the width of a single character, "
"you can now use either of the following without performance penalty:"
msgstr ""
"このメソッドは元々Pythonで実装され、:meth:`Font.glyph_advance` "
"を呼び出すことに基づいていました。性能の理由から、v1.18.14向けにCで書き直されました。単一の文字の幅を計算するには、以下のいずれかを使用でき、パフォーマンスに差異はありません："

#: ../../font.rst:252 feecd61fff974177b8a7a245f28b1d95
msgid "`font.glyph_advance(ord(\"Ä\")) * fontsize`"
msgstr ""

#: ../../font.rst:253 4648feec0a074c19ad426c4fd40325e0
msgid "`font.text_length(\"Ä\", fontsize=fontsize)`"
msgstr ""

#: ../../font.rst:255 3faaaf5d62da40c185e053e1804efcca
msgid ""
"For multi-character strings, the method offers a huge performance "
"advantage compared to the previous implementation: instead of about 0.5 "
"microseconds for each character, only 12.5 nanoseconds are required for "
"the second and subsequent ones."
msgstr "複数文字の文字列に対して、このメソッドは以前の実装と比べて非常に高速で、各文字ごとに約0.5マイクロ秒かかる代わりに、2番目以降の文字には12.5ナノ秒しか必要ありません。"

#: ../../font.rst:262 77d596eb1ade4067bd9f06fd38b4af7a
msgid "*New in v1.18.14*"
msgstr "*v1.18.14で新たに導入*"

#: ../../font.rst:264 f2e908c4f14244e2a3dc97d9e0511e24
msgid "Sequence of character lengths in points of a unicode string."
msgstr "Unicode文字列の文字の長さ（ポイント単位）のシーケンス。"

#: ../../font.rst:272 dd21e7d9ea6e4d2285966f70072f9cc9
msgid ""
"the lengths in points of the characters of a string when stored in the "
"PDF. It works like :meth:`Font.text_length` broken down to single "
"characters. This is a high speed method, used e.g. in "
":meth:`TextWriter.fill_textbox`. The following is true (allowing rounding"
" errors): `font.text_length(text) == sum(font.char_lengths(text))`.  >>> "
"font = fitz.Font(\"helv\") >>> text = \"PyMuPDF\" >>> "
"font.text_length(text) 50.115999937057495 >>> fitz.get_text_length(text, "
"fontname=\"helv\") 50.115999937057495 >>> sum(font.char_lengths(text)) "
"50.115999937057495 >>> pprint(font.char_lengths(text)) "
"(7.336999952793121,  # P 5.5,                 # y 9.163000047206879,   # "
"M 6.115999937057495,   # u 7.336999952793121,   # P 7.942000031471252,   "
"# D 6.721000015735626)   # F"
msgstr ""

#: ../../font.rst:272 5fd4e017c54d48df8febd018e556b845
msgid ""
"the lengths in points of the characters of a string when stored in the "
"PDF. It works like :meth:`Font.text_length` broken down to single "
"characters. This is a high speed method, used e.g. in "
":meth:`TextWriter.fill_textbox`. The following is true (allowing rounding"
" errors): `font.text_length(text) == sum(font.char_lengths(text))`."
msgstr ""
"PDFに保存される文字列の各文字の長さ（ポイント単位）。これは、:meth:`Font.text_length` "
"を各文字に分解したようなものです。高速なメソッドであり、例えば:meth:`TextWriter.fill_textbox` "
"で使用されています。以下が成り立ちます（丸め誤差を許容する）：`font.text_length(text) == "
"sum(font.char_lengths(text))`。"

#: ../../font.rst:294 e4764eff5cf3496dbd0c29ba8ea5f6fc
msgid "New in v1.17.6"
msgstr "新機能 v1.17.6"

#: ../../font.rst:296 60523c71f6d44b97894a8d66fcdaeb9b
msgid "Copy of the binary font file content."
msgstr "バイナリフォントファイルのコンテンツのコピー。"

#: ../../font.rst:302 053f18296513424eba979e6afe9a2699
msgid ""
"A dictionary with various font properties, each represented as bools. "
"Example for Helvetica::"
msgstr "Helveticaの例など、さまざまなフォントプロパティを持つ辞書で、それぞれがブール値として表されています。"

#: ../../font.rst:322 d1aff02adb3f4d08b25ee0fbdf3918d0
msgid "Name of the font. May be \"\" or \"(null)\"."
msgstr "フォントの名前。空文字列であることもあります。"

#: ../../font.rst:326 ee7c9745e0604a8391a9936ba64ba17b
msgid "The font bbox. This is the maximum of its glyph bboxes."
msgstr "フォントのbbox。これは、そのグリフのbboxの最大値です。"

#: ../../font.rst:328 a5d454a241a548e2a82c84d2779caf44
msgid ":ref:`Rect`"
msgstr ""

#: ../../font.rst:334 f7d01714eaa74b0086e74e3a0ecfd762
msgid "The number of glyphs defined in the font."
msgstr "グリフ数。"

#: ../../font.rst:338 ../../font.rst:346 ../../font.rst:354
#: 9af508811b0b4929b925ed81d33f40bb d411329a01b443b293cc8570b8aa3eb8
#: ec91ff962ff94e15bd943ac87d7418b5
msgid "New in v1.18.0"
msgstr "v1.18.0で新規追加"

#: ../../font.rst:340 ad6e0a5a1b8549d298b0a403c54fbc10
msgid ""
"The ascender value of the font, see `here "
"<https://en.wikipedia.org/wiki/Ascender_(typography)>`_ for details. "
"Please note that there is a difference to the strict definition: our "
"value includes everything above the baseline -- not just the height "
"difference between upper case \"A\" and and lower case \"a\"."
msgstr "フォントのアセンダー値。詳細についてはこちらを参照してください。ただし、厳密な定義とは異なり、私たちの値にはベースラインを上回るすべてが含まれます。単に大文字の「A」と小文字の「a」の高さの違いだけでなく、ベースラインを上回るすべてが含まれます。"

#: ../../font.rst:348 85cdd3d9b9c24e9c8df21171a24d79f3
msgid ""
"The descender value of the font, see `here "
"<https://en.wikipedia.org/wiki/Descender>`_ for details. This value "
"always is negative and is the portion that some glyphs descend below the "
"base line, for example \"g\" or \"y\". As a consequence, the value "
"`ascender - descender` is the total height, that every glyph of the font "
"fits into. This is true at least for most fonts -- as always, there are "
"exceptions, especially for calligraphic fonts, etc."
msgstr ""
"フォントのディセンダー値。詳細についてはこちらを参照してください。この値は常に負であり、一部のグリフがベースライン以下に降りる部分、例えば「g」や「y」です。したがって、`アセンダー"
" - ディセンダー` "
"の値は、フォントのすべてのグリフが収まる総高さです。これはほとんどのフォントに当てはまりますが、いくつかの例外があります。特にカリグラフィーフォントなどです。"

#: ../../font.rst:356 6b9568e2999b436c99e42c1156a55216
msgid "Indicates whether this font can be used with :ref:`TextWriter`."
msgstr "このフォントを :ref:`TextWriter` で使用できるかどうかを示します。"

#: ../../font.rst:361 3911a5eabdc94e23972c0c42375f329d
msgid "Footnotes"
msgstr "脚注"

#: ../../font.rst:362 dd44e4aad046475db703fb293306c771
msgid ""
"MuPDF does not support all fontfiles with this feature and will raise "
"exceptions like *\"mupdf: FT_New_Memory_Face((null)): unknown file "
"format\"*, if it encounters issues. The :ref:`TextWriter` methods check "
":attr:`Font.is_writable`."
msgstr ""
"MuPDFはこの機能を持つすべてのフォントファイルをサポートしておらず、問題が発生すると *「mupdf: "
"FT_New_Memory_Face((null)): unknown file format」* "
"といった例外を発生させます。:ref:`TextWriter` のメソッドは :attr:`Font.is_writable` をチェックします。"

#: ../../font.rst:364 d73fd9ffa43543668e9f67be54524323
msgid ""
"The built-in module *array* has been chosen for its speed and its compact"
" representation of values."
msgstr "組み込みの *array* モジュールは、その速度と値のコンパクトな表現のために選択されました。"

#: ../../footer.rst:-1 bcebc89039f64ecb84442b190b5c1cf1
msgid "Discord logo"
msgstr ""



