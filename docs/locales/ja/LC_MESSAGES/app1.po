# PyMuPDF Japanese documentation
# Copyright (C) 2015-2023, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# Jamie Lemon <jamie.lemon@artifex.com>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.23.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-03-05 14:46+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: Suzan Sanver <suzan.sanver@dijipiji.com>\n"
"Language: ja\n"
"Language-Team: ja <suzan.sanver@dijipiji.com>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1 29c1bdfd66e64ba6afda42d7b8d3c5af
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1 dd0412202a454e94bbc2cc3a2b587e32
msgid ""
"PyMuPDF is a high-performance Python library for data extraction, "
"analysis, conversion & manipulation of PDF (and other) documents."
msgstr "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"

#: ../../header.rst:-1 4c1b32d759c64e04b5b3826d5b27c6f7
msgid ""
"PDF Text Extraction, PDF Image Extraction, PDF Conversion, PDF Tables, "
"PDF Splitting, PDF Creation, Pyodide, PyScript"
msgstr "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"

#: ../../app1.rst:7 ec3486cfe4bc43058452dc00ceba66d0
msgid "Appendix 1: Details on Text Extraction"
msgstr "付録1: テキスト抽出の詳細"

#: ../../app1.rst:8 eaef130dabed41d8a1ef1e6972eadd44
msgid ""
"This chapter provides background on the text extraction methods of "
"PyMuPDF."
msgstr "この章では、PyMuPDFのテキスト抽出メソッドに関する背景情報を提供します。"

#: ../../app1.rst:10 14bc72a00bd246518b41c5569ea1cc95
msgid "Information of interest are"
msgstr "興味のある情報は以下です"

#: ../../app1.rst:12 f66561a560554e138e9755ca13ce762a
msgid "what do they provide?"
msgstr "彼らは何を提供するのか？"

#: ../../app1.rst:13 42f926a074b74f5ea41fbcdc2be49718
msgid "what do they imply (processing time / data sizes)?"
msgstr "それらは何を意味するのか（処理時間 / データサイズ）？"

#: ../../app1.rst:16 778f58f502c14e00b897a7ff3f999b18
msgid "General structure of a TextPage"
msgstr "TextPageの一般的な構造"

#: ../../app1.rst:17 34d8849a6d7a4cd8ba38ad5a84b07d67
msgid ""
":ref:`TextPage` is one of (Py-) MuPDF's classes. It is normally created "
"(and destroyed again) behind the curtain, when :ref:`Page` text "
"extraction methods are used, but it is also available directly and can be"
" used as a persistent object. Other than its name suggests, images may "
"optionally also be part of a text page::"
msgstr ""
":ref:`TextPage` は（Py-）MuPDFのクラスの一つです。通常、:ref:`Page` "
"のテキスト抽出メソッドが使用されるときにカーテンの後ろで作成され（および破棄され）ますが、直接利用することもでき、永続オブジェクトとして使用することができます。その名前が示すよりも、テキストページにはオプションで画像も含まれる場合があります："

#: ../../app1.rst:27 7dae6369c7d540848d8b82ae0d4787e2
msgid "A **text page** consists of blocks (= roughly paragraphs)."
msgstr "**テキストページ** は、ブロック（おおよそ段落）で構成されています。"

#: ../../app1.rst:29 7516e1987e4643d8ba09e8c7dc30ecd6
msgid "A **block** consists of either lines and their characters, or an image."
msgstr "**ブロック** は、行とその文字、または画像のいずれかから成り立っています。"

#: ../../app1.rst:31 12fe7cbea8bc49a4bf868eaf656fe84f
msgid "A **line** consists of spans."
msgstr "**行** は、スパンから成り立っています。"

#: ../../app1.rst:33 b285e1d3fe75490e8eca70e60f89e004
msgid ""
"A **span** consists of adjacent characters with identical font "
"properties: name, size, flags and color."
msgstr "**スパン** は、同一のフォントプロパティ（名前、サイズ、フラグ、色）を持つ隣接する文字から成り立っています。"

#: ../../app1.rst:36 113e50d3034a4e20a3a5cea304e9d24f
msgid "Plain Text"
msgstr "プレーンテキスト"

#: ../../app1.rst:38 96a7fab84e7042dbb6eabaef451572b7
msgid ""
"Function :meth:`TextPage.extractText` (or *Page.get_text(\"text\")*) "
"extracts a page's plain **text in original order** as specified by the "
"creator of the document."
msgstr ""
"関数  :meth:`TextPage.extractText` （または *Page.get_text(\"text\")* "
"）は、ドキュメントの作成者によって指定された元の順序で、ページのプレーンテキストを抽出します。"

#: ../../app1.rst:40 92a5afda70d44ac1aeeac977291eaebe
msgid "An example output::"
msgstr "例の出力："

#: ../../app1.rst:45 011ba59ec27e4f91bfb856711d74d1ef
msgid ""
"The output may not equal an accustomed \"natural\" reading order. "
"However, you can request a reordering following the scheme \"top-left to "
"bottom-right\" by executing `page.get_text(\"text\", sort=True)`."
msgstr ""
"出力は通常の「自然な」読み順と一致しない場合があります。ただし、`page.get_text(\"text\", sort=True)` "
"を実行することで、「左上から右下」のスキームに従った並べ替えを要求することができます。"

#: ../../app1.rst:49 ../../app1.rst:336 02cc0c99b4ab4a37aeaa6af14a0042ff
#: edcf82a9a6994a90a30956e537e7b927
msgid "BLOCKS"
msgstr "ブロック"

#: ../../app1.rst:51 562ac49602124600b0ce05fd69da3c0f
msgid ""
"Function :meth:`TextPage.extractBLOCKS` (or *Page.get_text(\"blocks\")*) "
"extracts a page's text blocks as a list of items like::"
msgstr ""
"関数  :meth:`TextPage.extractBLOCKS` （または `Page.get_text(\"blocks\")` "
"）は、ページのテキストブロックを以下のような項目のリストとして抽出します："

#: ../../app1.rst:55 c0eb64d179fb4bb3866900b8ef10e1c0
msgid ""
"Where the first 4 items are the float coordinates of the block's bbox. "
"The lines within each block are concatenated by a new-line character."
msgstr "最初の4つの項目は、ブロックのバウンディングボックスの浮動小数点座標です。各ブロック内の行は改行文字で連結されます。"

#: ../../app1.rst:57 785514b713a0415799eee788bab78f16
msgid ""
"This is a high-speed method, which by default also extracts image meta "
"information: Each image appears as a block with one text line, which "
"contains meta information. The image itself is not shown."
msgstr "これは高速なメソッドであり、デフォルトでは画像のメタ情報も抽出されます。各画像はメタ情報を含む1行のテキスト行で表されるブロックとして表示されます。画像そのものは表示されません。"

#: ../../app1.rst:59 6ecbfdaf8e4748e88f25f848639d5f22
msgid ""
"As with simple text output above, the `sort` argument can be used as well"
" to obtain a reading order."
msgstr "前述の単純なテキスト出力と同様に、`sort` 引数を使用して読み順を取得することもできます。"

#: ../../app1.rst:61 ../../app1.rst:79 5f640f753c794644bd1e11e3d375cd6b
#: 7c19d58e7c984f88a626928ce4421506
msgid "Example output::"
msgstr "例の出力："

#: ../../app1.rst:69 ../../app1.rst:337 7d21444446e0412f87239deed2376714
#: bf0ef174c23a4a8c949e742a5d6eb862
msgid "WORDS"
msgstr "単語"

#: ../../app1.rst:71 2062b79b7e33470da5e9f81ccf018951
msgid ""
"Function :meth:`TextPage.extractWORDS` (or *Page.get_text(\"words\")*) "
"extracts a page's text **words** as a list of items like::"
msgstr ""
"関数 :meth:`TextPage.extractWORDS` （または *Page.get_text(\"words\")* "
"）は、ページのテキスト単語を以下のような項目のリストとして抽出します："

#: ../../app1.rst:75 f18575e5c9004a39bc9b9c557539b34b
msgid ""
"Where the first 4 items are the float coordinates of the words's bbox. "
"The last three integers provide some more information on the word's "
"whereabouts."
msgstr "最初の4つの項目は、単語のバウンディングボックスの浮動小数点座標です。最後の3つの整数は、単語の位置に関する追加情報を提供します"

#: ../../app1.rst:77 3fc14316159241d794d66c5f05bed618
msgid ""
"This is a high-speed method. As with the previous methods, argument "
"`sort=True` will reorder the words."
msgstr "これは高速なメソッドです。前のメソッドと同様に、引数 `sort=True` を使用すると単語が再並べ替えされます。"

#: ../../app1.rst:95 ../../app1.rst:340 35e1f9bf2c54478496fbeab570adcba6
#: fdba244769b24639ae454cd489d267e7
msgid "HTML"
msgstr ""

#: ../../app1.rst:97 970f7de03959462eb00029bdf07b4623
msgid ""
":meth:`TextPage.extractHTML` (or *Page.get_text(\"html\")* output fully "
"reflects the structure of the page's *TextPage* -- much like DICT / JSON "
"below. This includes images, font information and text positions. If "
"wrapped in HTML header and trailer code, it can readily be displayed by "
"an internet browser. Our above example::"
msgstr ""
":meth:`TextPage.extractHTML` （または *Page.get_text(\"html\"）* の出力は、ページの "
"`TextPage` の構造を完全に反映します。これは、以下のDICT / "
"JSONのようなものです。これには画像、フォント情報、テキスト位置が含まれます。HTMLヘッダーとトレイラーコードで囲むと、インターネットブラウザで簡単に表示できます。上記の例："

#: ../../app1.rst:113 dde3fb980a2b48629410a7a61094b5f5
msgid "Controlling Quality of HTML Output"
msgstr "HTML出力の品質の制御"

#: ../../app1.rst:114 a68361129d524d87ae2a0cd1fc26b358
msgid ""
"While HTML output has improved a lot in MuPDF v1.12.0, it is not yet bug-"
"free: we have found problems in the areas **font support** and **image "
"positioning**."
msgstr ""
"MuPDF v1.12.0でHTML出力はかなり改善されましたが、まだバグがないわけではありません。**フォントサポート** や**画像の配置**"
" に関する問題が見つかっています。"

#: ../../app1.rst:116 0b8376856f3541fc9f7f43a5833f1cf3
msgid ""
"HTML text contains references to the fonts used of the original document."
" If these are not known to the browser (a fat chance!), it will replace "
"them with others; the results will probably look awkward. This issue "
"varies greatly by browser -- on my Windows machine, MS Edge worked just "
"fine, whereas Firefox looked horrible."
msgstr ""
"HTMLテキストには元のドキュメントで使用されたフォントへの参照が含まれています。もしブラウザがそれらを認識できない場合（少ない確率ですが）、他のフォントで置き換えられ、結果が奇妙に見えるかもしれません。この問題はブラウザによって大きく異なります。Windowsマシンでは、MS"
" Edgeはうまく動作するかもしれませんが、Firefoxはひどく見えるかもしれません。"

#: ../../app1.rst:118 d94385bb90bf40be9b42cb355fef7272
msgid ""
"For PDFs with a complex structure, images may not be positioned and / or "
"sized correctly. This seems to be the case for rotated pages and pages, "
"where the various possible page bbox variants do not coincide (e.g. "
"*MediaBox != CropBox*). We do not know yet, how to address this -- we "
"filed a bug at MuPDF's site."
msgstr ""
"複雑な構造を持つPDFの場合、画像の位置やサイズが正しく配置されないことがあります。これは回転したページや、さまざまなページbboxのバリアントが一致しない場合に起こる可能性があります（たとえば、*MediaBox"
" != CropBox* ）。これに対処する方法はまだわかっていませんが、MuPDFのサイトにバグを報告しました。"

#: ../../app1.rst:120 c90c495da51b4221a9d62ebd25417d87
msgid ""
"To address the font issue, you can use a simple utility script to scan "
"through the HTML file and replace font references. Here is a little "
"example that replaces all fonts with one of the :ref:`Base-14-Fonts`: "
"serifed fonts will become \"Times\", non-serifed \"Helvetica\" and "
"monospaced will become \"Courier\". Their respective variations for "
"\"bold\", \"italic\", etc. are hopefully done correctly by your browser::"
msgstr "フォントの問題に対処するために、HTMLファイルをスキャンし、フォントの参照を置換するシンプルなユーティリティスクリプトを使用できます。以下は、すべてのフォントをPDFのベース14フォントの一つに置き換える例です：セリフフォントは「Times」になり、セリフのないフォントは「Helvetica」になり、等幅フォントは「Courier」になります。太字、斜体などの各バリエーションは、おそらくブラウザによって正しく処理されるでしょう。"

#: ../../app1.rst:160 5e5e78d7496547b1866df8980f2a7994
msgid "DICT (or JSON)"
msgstr "DICT（またはJSON）"

#: ../../app1.rst:162 0761959cb8264912ae55526f55804cea
msgid ""
":meth:`TextPage.extractDICT` (or *Page.get_text(\"dict\", sort=False)*) "
"output fully reflects the structure of a *TextPage* and provides image "
"content and position detail (*bbox* -- boundary boxes in pixel units) for"
" every block, line and span. Images are stored as *bytes* for DICT output"
" and base64 encoded strings for JSON output."
msgstr ""
":meth:`TextPage.extractDICT` （または *Page.get_text(\"dict\", sort=False)* "
"）の出力は、 *TextPage* の構造を完全に反映し、各ブロック、行、スパンのために画像の内容と位置の詳細（ *bbox*  – "
"ピクセル単位の境界ボックス）を提供します。画像はDICT出力では *バイト* "
"として格納され、JSON出力ではbase64エンコードされた文字列として格納されます。"

#: ../../app1.rst:164 5dfa076393a342438407c0e16caaedb8
msgid ""
"For a visualization of the dictionary structure have a look at "
":ref:`textpagedict`."
msgstr "辞書の構造の可視化については、辞書出力の構造をご覧ください。"

#: ../../app1.rst:166 d583dfa8815e4dceaaf45f07a304d177
msgid "Here is how this looks like::"
msgstr "以下がその様子です："

#: ../../app1.rst:192 914f8ed5f7f54f648233f9e3fca379ee
msgid "RAWDICT (or RAWJSON)"
msgstr "RAWDICT（またはRAWJSON）"

#: ../../app1.rst:193 3457e65f1a824a34a7bc028ae4475b6d
msgid ""
":meth:`TextPage.extractRAWDICT` (or *Page.get_text(\"rawdict\", "
"sort=False)*) is an **information superset of DICT** and takes the detail"
" level one step deeper. It looks exactly like the above, except that the "
"*\"text\"* items (*string*) in the spans are replaced by the list "
"*\"chars\"*. Each *\"chars\"* entry is a character *dict*. For example, "
"here is what you would see in place of item *\"text\": \"Text in black "
"color.\"* above::"
msgstr ""
":meth:`TextPage.extractRAWDICT` （または *Page.get_text(\"rawdict\", "
"sort=False)*  ）は、**DICTの情報のスーパーセット** "
"であり、詳細レベルを一段階深くします。これは上記のように見えますが、スパン内の *「text」* アイテム（文字列）は *「chars」* "
"というリストに置き換えられます。各 *「chars」* エントリは文字の *dict* です。例えば、 *「Text in black "
"color.」* の代わりに以下のような項目が表示されます："

#: ../../app1.rst:224 ../../app1.rst:338 59c5db478ade44bca3e5fcdea99b855a
#: cfc6c938565d4967a7a9755bb11776e6
msgid "XML"
msgstr ""

#: ../../app1.rst:226 2b0db98003034543a6732a45c91eb111
msgid ""
"The :meth:`TextPage.extractXML` (or *Page.get_text(\"xml\")*) version "
"extracts text (no images) with the detail level of RAWDICT::"
msgstr ""
":meth:`TextPage.extractXML` （または *Page.get_text(\"xml\"）* "
"バージョンは、RAWDICTの詳細レベルでテキスト（画像なし）を抽出します："

#: ../../app1.rst:255 396c4e14be68474a9f84935fefc6d613
msgid ""
"We have successfully tested `lxml <https://pypi.org/project/lxml/>`_ to "
"interpret this output."
msgstr "この出力を解釈するためにlxmlを使用して正常にテストしました。"

#: ../../app1.rst:258 ../../app1.rst:339 4ac8c62eab2e40f7a70ad4dea3a88eb1
#: d4db03ea34e64b0186f9be1215a4d58d
msgid "XHTML"
msgstr ""

#: ../../app1.rst:259 c9990fb5f6bd443ebabd0a2b5ec76899
msgid ""
":meth:`TextPage.extractXHTML` (or *Page.get_text(\"xhtml\")*) is a "
"variation of TEXT but in HTML format, containing the bare text and images"
" (\"semantic\" output)::"
msgstr ""
":meth:`TextPage.extractXHTML` （または *Page.get_text(\"xhtml\"）* "
"は、テキストと画像を含むHTML形式のTEXTのバリエーションです（「セマンティック」出力）："

#: ../../app1.rst:268 bccfa05d017b40ab8772d9cdbd735679
msgid "Text Extraction Flags Defaults"
msgstr "テキスト抽出フラグのデフォルト値"

#: ../../app1.rst:269 ccc4143efad842fab73756753d304b47
msgid ""
"New in version 1.16.2: Method :meth:`Page.get_text` supports a keyword "
"parameter *flags* *(int)* to control the amount and the quality of "
"extracted data. The following table shows the defaults settings (flags "
"parameter omitted or None) for each extraction variant. If you specify "
"flags with a value other than *None*, be aware that you must set **all "
"desired** options. A description of the respective bit settings can be "
"found in :ref:`TextPreserve`."
msgstr ""
"バージョン1.16.2で新しく追加されたメソッド :meth:`Page.get_text` "
"は、抽出されるデータの量と品質を制御するためのキーワードパラメータ `flags` "
"（整数）をサポートしています。以下の表は、各抽出バリエーションのデフォルト設定（ `flags` "
"パラメータが省略されたかNoneの場合）を示しています。 `None` 以外の値でflagsを指定する場合は、**すべての必要なオプション** "
"を設定する必要があることに注意してください。各ビット設定の説明は「テキスト抽出フラグ」で確認できます。"

#: ../../app1.rst:271 c5a49b532d1842c7b93e3cca58b1ad42
msgid ""
"New in v1.19.6: The default combinations in the following table are now "
"available as Python constants: :data:`TEXTFLAGS_TEXT`, "
":data:`TEXTFLAGS_WORDS`, :data:`TEXTFLAGS_BLOCKS`, "
":data:`TEXTFLAGS_DICT`, :data:`TEXTFLAGS_RAWDICT`, "
":data:`TEXTFLAGS_HTML`, :data:`TEXTFLAGS_XHTML`, :data:`TEXTFLAGS_XML`, "
"and :data:`TEXTFLAGS_SEARCH`. You can now easily modify a default flag, "
"e.g."
msgstr ""
"バージョン1.19.6で新しく追加された変更：次の表のデフォルトの組み合わせは、Pythonの定数として利用可能です： "
":data:`TEXTFLAGS_TEXT` 、 :data:`TEXTFLAGS_WORDS` 、 "
":data:`TEXTFLAGS_BLOCKS` 、 :data:`TEXTFLAGS_DICT` 、 "
":data:`TEXTFLAGS_RAWDICT` 、 :data:`TEXTFLAGS_HTML` 、 "
":data:`TEXTFLAGS_XHTML` 、 :data:`TEXTFLAGS_XML` 、 "
":data:`TEXTFLAGS_SEARCH` 。これにより、デフォルトのフラグを簡単に変更できます。例えば、"

#: ../../app1.rst:273 9a31844af651407f9f00556a54e398f1
msgid "**include** images in a \"blocks\" output:"
msgstr "「blocks」出力に画像を **含める** 場合："

#: ../../app1.rst:275 c4fbde922b064390aea971c8bcb66d81
msgid "`flags = TEXTFLAGS_BLOCKS | TEXT_PRESERVE_IMAGES`"
msgstr ""

#: ../../app1.rst:277 f15b734dd8774f62868beae7a385f297
msgid "**exclude** images from a \"dict\" output:"
msgstr "「dict」出力から画像を **除外する** 場合："

#: ../../app1.rst:279 33665dc4f4c44b548fbdb751d8ec8691
msgid "`flags = TEXTFLAGS_DICT & ~TEXT_PRESERVE_IMAGES`"
msgstr ""

#: ../../app1.rst:281 cb4d4084ef884d7aa44adb3f4437ded2
msgid "set **dehyphenation off** in text searches:"
msgstr "テキスト検索での **ハイフネーション** をオフに設定する："

#: ../../app1.rst:283 713d9b0ebc044592a67f2763e7976b2f
msgid "`flags = TEXTFLAGS_SEARCH & ~TEXT_DEHYPHENATE`"
msgstr ""

#: ../../app1.rst:287 335d38505f5149acb994cf033efd5ecd
msgid "Indicator"
msgstr "指標"

#: ../../app1.rst:287 73e360af669b4bec8b5551cf2fab5c50
msgid "text"
msgstr ""

#: ../../app1.rst:287 e104ba1df64843ae864af48c501e2b5a
msgid "html"
msgstr ""

#: ../../app1.rst:287 034c29bb939c4e91bedab30e89172a0b
msgid "xhtml"
msgstr ""

#: ../../app1.rst:287 86a33587ea8b4139ab8d31b19c783e75
msgid "xml"
msgstr ""

#: ../../app1.rst:287 11e6f84e3da64291a706285f423111ae
msgid "dict"
msgstr ""

#: ../../app1.rst:287 b79b468d9ca44deebbe3ceb6cd9cda24
msgid "rawdict"
msgstr ""

#: ../../app1.rst:287 9ccef3e09b4346ccb0563f38cdbe3fea
msgid "words"
msgstr ""

#: ../../app1.rst:287 1b8c1da7256e4502bc0f2740812c8269
msgid "blocks"
msgstr ""

#: ../../app1.rst:287 c18da2dc98be4e7fadeb90191841394f
msgid "search"
msgstr ""

#: ../../app1.rst:289 7357eb89aceb453ea01e1ff41cbe6fb1
msgid "preserve ligatures"
msgstr "連結を保持"

#: ../../app1.rst:289 ../../app1.rst:290 ../../app1.rst:291 ../../app1.rst:293
#: ../../app1.rst:294 07727a28e6cb40b5995341c0aa911698
#: 0ffb4dd49d834f0a908af69565ef5507 1069e9efb2834c029213d37dd8f4cfd8
#: 14b5d83321c04d689b2210e0bf173e00 1703b35931b346679028de4218405e5c
#: 185c07d4eb844bd5a1a8312160afb148 19b0383febea4f1ea6e1ed8b89786e9e
#: 1c6d55c51fb24424b639871d3b1d6478 1e75332ff551448eab9cf58c2f27c48d
#: 232a0a8368ac410f9995e0aa2b1589f0 3b35f80369394e6c95c26e9833dfc98b
#: 5f7f78c05019474390acbc3208087bcf 61cc62c1571d4a7998a64535328fb41b
#: 623d937f989143afa4c5a69bf19987e9 6a12b3ff17a3463c9e329127506ccdac
#: 6f0d1c07d1b44aad92422226c63f63c0 7608b82382d94281a4c5ae464c2bba8f
#: 7714f3ff0f1f45ac9c604133358afe85 79b81987af7b40b4bf87876f00990db4
#: 904fb64fa50a4043a514e99db9ccc4cd 985a630fb0db41fe8ea7907effeca2c7
#: 999cfd3567054b78bcba7e4a3f38c8d2 a3952d3788b741aca7cd86d04bc1a057
#: a775296423c940cd97f232722b946089 b43b19f74e4e435eaa91ddf234f70250
#: b634f37f46fc4596a974406cc1d92de2 bdadf692209b4768ab4481e3f34b516e
#: c106dec3850e4baea3c0719b3814c418 ddaf1fbe28f441f9816e33604f59694a
#: ea42f574786444c295ced93d60ce9784 f3b3a65f47f148398580c4d314743c15
#: f5bbb32dbb314c118bd74dfa9c422bc8
msgid "1"
msgstr ""

#: ../../app1.rst:290 b121adeb20064ccc804ff1bfdeeedee6
msgid "preserve whitespace"
msgstr "空白を保持"

#: ../../app1.rst:291 1da89b8b73b847b8aef5b644da1e1c15
msgid "preserve images"
msgstr "画像を保持"

#: ../../app1.rst:291 014f020e127b4ab5803355f631c386a0
#: 25367d5016724eb1b44ae7813637e7af f23f3d0b83b745c4aba4711fc13fc100
msgid "n/a"
msgstr ""

#: ../../app1.rst:291 ../../app1.rst:292 ../../app1.rst:293
#: 005e16c4e8b542ce89c4daca7402498e 0df42075d5c5495785090e09f6f8e48f
#: 11c5ffcadc3542d19e89cd7da8e3489b 1ff42db845f548399cb8cc771f20afb4
#: 21fd07d71b7847fcb4e1f1ff60118ff4 23cb5c022a1d4fd3b01df64ce268f9ed
#: 2c3a69775a104939b6ca60e20c2db21e 34c7e1ebdba24c4884c60c2b14806e4f
#: 5387d8a426e0424491ebf5bbd9bef378 690281f702914bd6bf8488bc6260c054
#: 6b85fe29f6df4f478fec9bae6d01cfe3 81e3f26cc0fa4b4c88c2d1b883821d61
#: 831d17f55e7d4d1abad34580b664d219 a6b7b54c9e3f4a719e48ced1b82ffa79
#: a8bed3cceb834fd89726c758f3a365e1 b86dbad917194e9a9713b4440f9fdc9f
#: d793b238abca400480fdb032e3d66f17 f1350b9f78d34dcb96732e49c5b37e4b
#: f3c9ece852ff4cdcb634c93ce1a5bc61
msgid "0"
msgstr ""

#: ../../app1.rst:292 5400eb204df6455abc311e6fdea0df67
msgid "inhibit spaces"
msgstr "スペースの抑制"

#: ../../app1.rst:293 99b2afb4cf23495fbd473f611ca223ec
msgid "dehyphenate"
msgstr "ハイフネーション解除"

#: ../../app1.rst:294 ec1faa635d1045e8b46f6b68a7698dd1
msgid "clip to mediabox"
msgstr "メディアボックスにクリップ"

#: ../../app1.rst:297 4ed099cd02914a218a70267e1e243b6c
msgid "**search** refers to the text search function."
msgstr "**検索** はテキスト検索機能を指します。"

#: ../../app1.rst:298 f955e75ea9ab47ed80ecf33fd8a17dd4
msgid "**\"json\"** is handled exactly like **\"dict\"** and is hence left out."
msgstr "**「json」** は **「dict」** とまったく同様に処理されるため、省略されています。"

#: ../../app1.rst:299 aee9006661cf4464b8a8d172b2bc225d
msgid ""
"**\"rawjson\"** is handled exactly like **\"rawdict\"** and is hence left"
" out."
msgstr "**「rawjson」** は **「rawdict」** とまったく同様に処理されるため、省略されています。"

#: ../../app1.rst:300 b929783061ec4209aeba2859f49d8cce
msgid ""
"An \"n/a\" specification means a value of 0 and setting this bit never "
"has any effect on the output (but an adverse effect on performance)."
msgstr "「n/a」の指定は値が0であり、このビットを設定しても出力に影響を与えることはありません（ただしパフォーマンスに悪影響を及ぼす可能性があります）。"

#: ../../app1.rst:301 045f1cdc16b14db582d7cd4109ce0cc1
msgid ""
"If you are not interested in images when using an output variant which "
"includes them by default, then by all means set the respective bit off: "
"You will experience a better performance and much lower space "
"requirements."
msgstr "画像を含む出力バリアントを使用する際に画像に興味がない場合、必ず該当するビットをオフに設定してください。これにより、パフォーマンスが向上し、スペース要件が大幅に削減されます。"

#: ../../app1.rst:303 a4ba7f0876af416faa99b8d543e1044f
msgid "To show the effect of *TEXT_INHIBIT_SPACES* have a look at this example::"
msgstr "`TEXT_INHIBIT_SPACES`  の効果を示すために、この例をご覧ください："

#: ../../app1.rst:323 75b5eb9341b94849b82a9f878c9c9645
msgid "Performance"
msgstr "パフォーマンス"

#: ../../app1.rst:324 7aeb5050948d4d7aa4f3d0bc76948a34
msgid ""
"The text extraction methods differ significantly both: in terms of "
"information they supply, and in terms of resource requirements and "
"runtimes. Generally, more information of course means, that more "
"processing is required and a higher data volume is generated."
msgstr "テキスト抽出メソッドは、情報の提供方法とリソース要件、実行時間の両方で大きく異なります。一般的に、情報が多いほど処理が必要であり、より多くのデータが生成されることを意味します。"

#: ../../app1.rst:326 3ef607072ac84f9cae868b3738f81f7a
#, python-format
msgid ""
"Especially images have a **very significant** impact. Make sure to "
"exclude them (via the *flags* parameter) whenever you do not need them. "
"To process the below mentioned 2'700 total pages with default flags "
"settings required 160 seconds across all extraction methods. When all "
"images where excluded, less than 50% of that time (77 seconds) were "
"needed."
msgstr ""
"特に画像は **非常に大きな** "
"影響を持ちます。必要のない場合は、必ず画像を除外する（フラグパラメータを使用）ようにしてください。以下で言及されている2,700ページの総ページ数をデフォルトのフラグ設定で処理するには、全ての抽出メソッドで160秒が必要でした。画像をすべて除外した場合、その時間の50%未満（77秒）が必要でした。"

#: ../../app1.rst:328 6de8a1d1b90a4412bcf0439150692328
msgid ""
"To begin with, all methods are **very fast** in relation to other "
"products out there in the market. In terms of processing speed, we are "
"not aware of a faster (free) tool. Even the most detailed method, "
"RAWDICT, processes all 1'310 pages of the :ref:`AdobeManual` in less than"
" 5 seconds (simple text needs less than 2 seconds here)."
msgstr ""
"まず始めに、すべてのメソッドは市場にある他の製品と比べて **非常に高速** "
"です。処理速度の観点から、より速い（無料の）ツールは私たちの知る限り存在しません。最も詳細なメソッドであるRAWDICTでも、 "
":ref:`AdobeManual` リファレンスの1,310ページを5秒未満で処理できます（ここでは簡単なテキストは2秒未満で処理されます）。"

#: ../../app1.rst:330 6df673baf85142d3958d331cdd03728c
msgid ""
"The following table shows average relative speeds (\"RSpeed\", baseline "
"1.00 is TEXT), taken across ca. 1400 text-heavy and 1300 image-heavy "
"pages."
msgstr "以下の表は、約1400ページのテキストが多く、約1300ページが画像が多いページでの平均相対速度（ベースライン1.00はTEXT）を示しています。"

#: ../../app1.rst:333 a2956832415a4ffa9f30010065076725
msgid "Method"
msgstr "メソッド"

#: ../../app1.rst:333 3d99d06d121346a29a3b243c13facbc6
msgid "RSpeed"
msgstr "平均相対"

#: ../../app1.rst:333 addb36d5114444fea80873823c895f30
msgid "Comments"
msgstr "コメント"

#: ../../app1.rst:333 1b1cf191adbc48c28694e3f6c787bbf5
msgid "no images"
msgstr "画像なし"

#: ../../app1.rst:335 3408e29841a448e1b2175670fb66ac6d
msgid "TEXT"
msgstr ""

#: ../../app1.rst:335 ../../app1.rst:336 ../../app1.rst:339
#: 11ae9ec7d15c49b98a737891531c1c62 5985f44dcc904977870f1cec0242ea84
#: a0a37a61700749e486ef44ad3a2c9d28 a8d5099d96cf4f0d83268be9e319bd22
#: cfcd628bfa48408eb03ae56f5bb84cf9
msgid "1.00"
msgstr ""

#: ../../app1.rst:335 8da330693cb8416e8ff23a32f98b4341
msgid "no images, **plain** text, line breaks"
msgstr "画像なし、 **プレーン** テキスト、改行"

#: ../../app1.rst:336 0f52a8b780b14c68a90157c2a221973d
msgid "image bboxes (only), **block** level text with bboxes, line breaks"
msgstr "画像のバウンディングボックス（のみ）、 **ブロック** レベルのテキストとバウンディングボックス、改行"

#: ../../app1.rst:337 19ee114686d1459a96aeb8cff37be22e
#: 45727981f9054542ac0f74183522c975
msgid "1.02"
msgstr ""

#: ../../app1.rst:337 e2fe0584bf4249cb8e1b37e2ad457c0f
msgid "no images, **word** level text with bboxes"
msgstr "画像なし、 **ワード** レベルのテキストとバウンディングボックス"

#: ../../app1.rst:338 55ad30f0c2fe42968b00224a04eafffd
#: 99eac1bd0d0441acb059d2bf9b45afc0
msgid "2.72"
msgstr ""

#: ../../app1.rst:338 4db7641b5b03412189331d11756f252f
msgid "no images, **char** level text, layout and font details"
msgstr "画像なし、**文字** レベルのテキスト、レイアウトとフォントの詳細"

#: ../../app1.rst:339 5ea033029535453da350ef426c94e222
msgid "3.32"
msgstr ""

#: ../../app1.rst:339 b92ae90b73c9437f82b49a8d8a178669
msgid "**base64** images, **span** level text, no layout info"
msgstr "**base64** 画像、 **スパン** レベルのテキスト、レイアウト情報なし"

#: ../../app1.rst:340 27ea0feaaf214cd88f70e778ba71d6d1
msgid "3.54"
msgstr ""

#: ../../app1.rst:340 84abb57c882e4b718e990f309e468850
msgid "**base64** images, **span** level text, layout and font details"
msgstr "**base64画像** 、 **スパン** レベルのテキスト、レイアウトとフォントの詳細"

#: ../../app1.rst:340 0387138645f0498d8b0da3b3d147fe8d
msgid "1.01"
msgstr ""

#: ../../app1.rst:341 d9f7bcb29c514e3e9e626bd141ee53a4
msgid "DICT"
msgstr ""

#: ../../app1.rst:341 c177d96d689d4acc92f84ef91d81fca9
msgid "3.93"
msgstr ""

#: ../../app1.rst:341 f79e2bb96d37427781e74e0b9441efb0
msgid "**binary** images, **span** level text, layout and font details"
msgstr "**バイナリ** 画像、 **スパン** レベルのテキスト、レイアウトとフォントの詳細"

#: ../../app1.rst:341 27bd9a0129aa42a1ba590b12667d6974
msgid "1.04"
msgstr ""

#: ../../app1.rst:342 b639c1c5bb5c4d349a6bfa2ecbc46b00
msgid "RAWDICT"
msgstr ""

#: ../../app1.rst:342 c353d8a7907046c7ae60a37a6c90fb02
msgid "4.50"
msgstr ""

#: ../../app1.rst:342 b1e5d2cf9e304b069b40c503e17d3819
msgid "**binary** images, **char** level text, layout and font details"
msgstr "**バイナリ** 画像、**文字** レベルのテキスト、レイアウトとフォントの詳細"

#: ../../app1.rst:342 69e71ac66f4d4b7a9223908f5e5b20c6
msgid "1.68"
msgstr ""

#: ../../app1.rst:345 fe8a28b0a67e4882a123073337a11394
#, python-format
msgid ""
"As mentioned: when excluding image extraction (last column), the relative"
" speeds are changing drastically: except RAWDICT and XML, the other "
"methods are almost equally fast, and RAWDICT requires 40% less execution "
"time than the **now slowest XML**."
msgstr ""
"前述のように、画像の抽出を除外する場合（最後の列）、相対速度は大きく変わります。RAWDICTとXMLを除いて、他のメソッドはほぼ同じ速さであり、RAWDICTは"
" **今では遅いXML** よりも40％少ない実行時間を必要とします。"

#: ../../app1.rst:347 59e90cff6b1e406487895f783a12c76d
msgid "Look at chapter **Appendix 1** for more performance information."
msgstr "もっとパフォーマンス情報については、 **付録1章** をご覧ください。"

#: ../../footer.rst:71 45cb429bfe964c47b316087a90ad4b46
msgid "This documentation covers all versions up to |version|."
msgstr "このドキュメントは |version| までのすべてのバージョンを対象としています。"

#: ../../footer.rst:-1 611eccf61a3a48de89094bd3daf3d292
msgid "Discord logo"
msgstr ""

#~ msgid "PyMuPDF は、PDF （およびその他の）ドキュメントのデータ抽出、分析、変換、操作のための高性能な Python ライブラリです。"
#~ msgstr ""

#~ msgid "PDFテキスト抽出、PDFイメージ抽出、PDF変換、PDFテーブル、PDF分割、PDF作成, Pyodide, PyScript"
#~ msgstr ""

