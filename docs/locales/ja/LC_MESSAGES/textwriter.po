# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2023, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.23.0rc1\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-08-16 14:20+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../textwriter.rst:7 44801fd6278345fdb9b258bca1318cef
msgid "TextWriter"
msgstr ""

#: ../../textwriter.rst:9 9713efa99e8e428ea4d4d2e6160c41c7
msgid "New in v1.16.18"
msgstr ""

#: ../../textwriter.rst:11 58d49d2be6f241dd871b799d27378f78
msgid ""
"This class represents a MuPDF *text* object. The basic idea is to "
"**decouple (1) text preparation, and (2) text output** to PDF pages."
msgstr ""

#: ../../textwriter.rst:13 10760da2838d4e9784a5a4ac168a5a58
msgid ""
"During **preparation**, a text writer stores any number of text pieces "
"(\"spans\") together with their positions and individual font "
"information. The **output** of the writer's prepared content may happen "
"multiple times to any PDF page with a compatible page size."
msgstr ""

#: ../../textwriter.rst:15 31f1e1b6e92d4632a82177b5823ac31f
msgid ""
"A text writer is an elegant alternative to methods "
":meth:`Page.insert_text` and friends:"
msgstr ""

#: ../../textwriter.rst:17 e361689e09504addbcac82fefaa2f488
msgid ""
"**Improved text positioning:** Choose any point where insertion of text "
"should start. Storing text returns the \"cursor position\" after the "
"*last character* of the span."
msgstr ""

#: ../../textwriter.rst:18 060471dac2d64b14928d72786df46900
msgid ""
"**Free font choice:** Each text span has its own font and fontsize. This "
"lets you easily switch when composing a larger text."
msgstr ""

#: ../../textwriter.rst:19 df6779b7d41e4c1499a34faa0058a7ea
msgid ""
"**Automatic fallback fonts:** If a character is not supported by the "
"chosen font, alternative fonts are automatically searched. This "
"significantly reduces the risk of seeing unprintable symbols in the "
"output (\"TOFUs\" -- looking like a small rectangle). PyMuPDF now also "
"comes with the **universal font \"Droid Sans Fallback Regular\"**, which "
"supports **all Latin** characters (including Cyrillic and Greek), and "
"**all CJK** characters (Chinese, Japanese, Korean)."
msgstr ""

#: ../../textwriter.rst:20 b2cb0e0a5aca4df5b669de5d8175007b
msgid ""
"**Cyrillic and Greek Support:** The :ref:`Base-14-fonts` have integrated "
"support of Cyrillic and Greek characters **without specifying encoding.**"
" Your text may be a mixture of Latin, Greek and Cyrillic."
msgstr ""

#: ../../textwriter.rst:21 b38d50de63a948d8ba96923da9d91a5a
msgid ""
"**Transparency support:** Parameter *opacity* is supported. This offers a"
" handy way to create watermark-style text."
msgstr ""

#: ../../textwriter.rst:22 1860b6e664f44771a328bf13dd01c4b0
msgid ""
"**Justified text:** Supported for any font -- not just simple fonts as in"
" :meth:`Page.insert_textbox`."
msgstr ""

#: ../../textwriter.rst:23 e0010e79ffbe400c8025d1a72da3acb8
msgid ""
"**Reusability:** A TextWriter object exists independent from PDF pages. "
"It can be written multiple times, either to the same or to other pages, "
"in the same or in different PDFs, choosing different colors or "
"transparency."
msgstr ""

#: ../../textwriter.rst:25 d87fb73bd232402daa4dc6aaf40170e7
msgid "Using this object entails three steps:"
msgstr ""

#: ../../textwriter.rst:27 a4667cbe4be24e7491caf3410c807e29
msgid ""
"When **created**, a TextWriter requires a fixed **page rectangle** in "
"relation to which it calculates text positions. A text writer can write "
"to pages of this size only."
msgstr ""

#: ../../textwriter.rst:28 84fafaf2b087444a8994043edc89d474
msgid ""
"Store text in the TextWriter using methods :meth:`TextWriter.append`, "
":meth:`TextWriter.appendv` and :meth:`TextWriter.fill_textbox` as often "
"as is desired."
msgstr ""

#: ../../textwriter.rst:29 cd4f75165ab047cea5416953c7d2bb9b
msgid "Output the TextWriter object on some PDF page(s)."
msgstr ""

#: ../../textwriter.rst:33 a8d68bc9905a4cacb3a1b796e73cf902
msgid ""
"Starting with version 1.17.0, TextWriters **do support** text rotation "
"via the *morph* parameter of :meth:`TextWriter.write_text`."
msgstr ""

#: ../../textwriter.rst:35 37e698f9914d417cb9824109c929dce3
msgid ""
"There also exists :meth:`Page.write_text` which combines one or more "
"TextWriters and jointly writes them to a given rectangle and with a given"
" rotation angle -- much like :meth:`Page.show_pdf_page`."
msgstr ""

#: ../../textwriter.rst:39 89fb13561e594ff68d43b48665d379d7
msgid "**Method / Attribute**"
msgstr ""

#: ../../textwriter.rst:39 82e518e031884bc2970895ca2b67fb6b
msgid "**Short Description**"
msgstr ""

#: ../../textwriter.rst:41 6638b88210944139b8f7bd6dc185d5c5
msgid ":meth:`~TextWriter.append`"
msgstr ""

#: ../../textwriter.rst:41 73661c1116f54e1587a4c2c62a8bd067
msgid "Add text in horizontal write mode"
msgstr ""

#: ../../textwriter.rst:42 17463fa5a4294588ac60bb873da7b216
msgid ":meth:`~TextWriter.appendv`"
msgstr ""

#: ../../textwriter.rst:42 084ea1857b984dcabce360ba7e7a45eb
msgid "Add text in vertical write mode"
msgstr ""

#: ../../textwriter.rst:43 28eb7312291a4f8998edeebfa31fc903
msgid ":meth:`~TextWriter.fill_textbox`"
msgstr ""

#: ../../textwriter.rst:43 28512b98c256419d8341a3fee5d7c93d
msgid "Fill rectangle (horizontal write mode)"
msgstr ""

#: ../../textwriter.rst:44 6f36fad6ec53446f9d050199d0d208ec
msgid ":meth:`~TextWriter.write_text`"
msgstr ""

#: ../../textwriter.rst:44 19836ef3e5654f03b00a11c09e81aa84
msgid "Output TextWriter to a PDF page"
msgstr ""

#: ../../textwriter.rst:45 ba20da67a1fa4022addf585a4cd6f7a6
msgid ":attr:`~TextWriter.color`"
msgstr ""

#: ../../textwriter.rst:45 f92c07b13dc943598b39ff23dbcfc2d2
msgid "Text color (can be changed)"
msgstr ""

#: ../../textwriter.rst:46 993382a5e9174253a9862b115c59e644
msgid ":attr:`~TextWriter.last_point`"
msgstr ""

#: ../../textwriter.rst:46 bb459f95430c43c4ab4b1bbfb6093838
msgid "Last written character ends here"
msgstr ""

#: ../../textwriter.rst:47 a5af8e5cb4bd475488fc3a6803eac13a
msgid ":attr:`~TextWriter.opacity`"
msgstr ""

#: ../../textwriter.rst:47 34b86460f29e4b1988a6a48884b32da4
msgid "Text opacity (can be changed)"
msgstr ""

#: ../../textwriter.rst:48 5144c3b2899443359ff4fa15585eab56
msgid ":attr:`~TextWriter.rect`"
msgstr ""

#: ../../textwriter.rst:48 f80c67d4217c4a1797db10ec1c144a6e
msgid "Page rectangle used by this TextWriter"
msgstr ""

#: ../../textwriter.rst:49 a3fabc2fe2cc4331b7d5dd9c1a3c6a58
msgid ":attr:`~TextWriter.text_rect`"
msgstr ""

#: ../../textwriter.rst:49 9c6de395ffde432dbbd33006fb9821ef
msgid "Area occupied so far"
msgstr ""

#: ../../textwriter.rst:53 60171c817c684b9a9abcfc8b042784a9
msgid "**Class API**"
msgstr ""

#: ../../textwriter.rst 58ccc521f293435da532a2c7b17421dc
#: 60b946368ff04dada1013ebdf3d6234a ae3b7733fb494f5b80804690ff9dd7b3
#: c4e1548e856a4649ae5c8b764f24885a f1a0918c96bf46d9bd5d9ae75e300aea
msgid "Parameters"
msgstr ""

#: ../../textwriter.rst:59 05b7562afacf4d5fb44f64801ef8030a
msgid "rectangle internally used for text positioning computations."
msgstr ""

#: ../../textwriter.rst:60 0cd44354501845719c81dc059f8647b6
msgid ""
"sets the transparency for the text to store here. Values outside the "
"interval `[0, 1)` will be ignored. A value of e.g. 0.5 means 50% "
"transparency."
msgstr ""

#: ../../textwriter.rst:61 13ac74bcdc38436ab80bfcd3958321dd
msgid ""
"the color of the text. All colors are specified as floats *0 <= color <= "
"1*. A single float represents some gray level, a sequence implies the "
"colorspace via its length."
msgstr ""

#: ../../textwriter.rst:66 159f1b23a56b41228ed702496e2feab8
msgid "*Changed in v1.18.9*"
msgstr ""

#: ../../textwriter.rst:67 ../../textwriter.rst:98
#: 46abb48b0c004735869568a60879feda 5d8ec8c36a634f248ac1d1831e31fc9f
msgid "*Changed in v1.18.15*"
msgstr ""

#: ../../textwriter.rst:69 68f1d8637f41438c888bb7460309b3f4
msgid "Add some new text in horizontal writing."
msgstr ""

#: ../../textwriter.rst:71 ../../textwriter.rst:102
#: 523f2b592353406199e4b12871d495ca 9b6f08cb83494f9cb0477639bd650f3d
msgid "start position of the text, the bottom left point of the first character."
msgstr ""

#: ../../textwriter.rst:72 d56ec5f2cec34b8880ee96c09428ab47
msgid ""
"a string of arbitrary length. It will be written starting at position "
"\"pos\"."
msgstr ""

#: ../../textwriter.rst:73 ../../textwriter.rst:104
#: 54f82f9cef05400590ea79ec9851e414 c2f98c1292864526bf2a96ae50edb992
msgid "a :ref:`Font`. If omitted, `fitz.Font(\"helv\")` will be used."
msgstr ""

#: ../../textwriter.rst:74 d2c8818539f34ee396320b6176f18306
msgid "the fontsize, a positive number, default 11."
msgstr ""

#: ../../textwriter.rst:75 ../../textwriter.rst:106
#: 272c6548d22a4e81993c81490ffca0e1 fa13c4d64ae8401cb47830e2a2ccd5ca
msgid ""
"the language to use, e.g. \"en\" for English. Meaningful values should be"
" compliant with the ISO 639 standards 1, 2, 3 or 5. Reserved for future "
"use: currently has no effect as far as we know."
msgstr ""

#: ../../textwriter.rst:76 aba6fe5ee5884a3493d9bd09b4b2bddb
msgid ""
"*(New in v1.18.9)* whether the text should be written from right to left."
" Applicable for languages like Arabian or Hebrew. Default is *False*. If "
"*True*, any Latin parts within the text will automatically converted. "
"There are no other consequences, i.e. :attr:`TextWriter.last_point` will "
"still be the rightmost character, and there neither is any alignment "
"taking place. Hence you may want to use :meth:`TextWriter.fill_textbox` "
"instead."
msgstr ""

#: ../../textwriter.rst:77 7c0894b851b84851afc27b728b027533
msgid ""
"*(New in v1.18.15)* look for the character's Small Capital version in the"
" font. If present, take that value instead. Otherwise the original "
"character (this font or the fallback font) will be taken. The fallback "
"font will never return small caps. For example, this snippet::  >>> doc ="
" fitz.open() >>> page = doc.new_page() >>> text = \"PyMuPDF: the Python "
"bindings for MuPDF\" >>> font = fitz.Font(\"figo\")  # choose a font with"
" small caps >>> tw = fitz.TextWriter(page.rect) >>> tw.append((50,100), "
"text, font=font, small_caps=True) >>> tw.write_text(page) >>> "
"doc.ez_save(\"x.pdf\")  will produce this PDF text:  .. image:: images"
"/img-smallcaps.*"
msgstr ""

#: ../../textwriter.rst:77 a310721c2bf74c1e8185e7aa0546dd9b
msgid ""
"*(New in v1.18.15)* look for the character's Small Capital version in the"
" font. If present, take that value instead. Otherwise the original "
"character (this font or the fallback font) will be taken. The fallback "
"font will never return small caps. For example, this snippet::"
msgstr ""

#: ../../textwriter.rst:88 d88f5cd864e14417a87a837530fc9bed
msgid "will produce this PDF text:"
msgstr ""

#: ../../textwriter.rst 2f5d3341df5845c1bdfd1dcd22412a6d
#: 969d03e861504dee97e173ff8521dec4 f56c7ed05d424df09509f282d210c9c5
msgid "Returns"
msgstr ""

#: ../../textwriter.rst:93 ../../textwriter.rst:109
#: 8b42f4bcf3f14605b164e5cc1d1f830f aa2f633dcaae4bc694f28afb4ff28aff
msgid ""
":attr:`text_rect` and :attr:`last_point`. *(Changed in v1.18.0:)* Raises "
"an exception for an unsupported font -- checked via "
":attr:`Font.is_writable`."
msgstr ""

#: ../../textwriter.rst:100 53936bef46674f4ca1fe90db1ae593c6
msgid "Add some new text in vertical, top-to-bottom writing."
msgstr ""

#: ../../textwriter.rst:103 c1f53eb2f255450eb1804e13a13b48af
msgid "a string. It will be written starting at position \"pos\"."
msgstr ""

#: ../../textwriter.rst:105 7ce603e02da54b2fb5cfa555fa05ee52
msgid "the fontsize, a positive float, default 11."
msgstr ""

#: ../../textwriter.rst:107 ../../textwriter.rst:131
#: 1297de7ff5394fdfb00da311fac27a6e 298dd5344cef482f8c2501a35740f405
msgid "*(New in v1.18.15)* see :meth:`append`."
msgstr ""

#: ../../textwriter.rst:113 7a6b3b4a99294bdeab3f01043a1efa12
msgid ""
"Changed in 1.17.3: New parameter `pos` to specify where to start writing "
"within rectangle."
msgstr ""

#: ../../textwriter.rst:114 32dcc4809482416cb633b036c49a5106
msgid ""
"Changed in v1.18.9: Return list of lines which do not fit in rectangle. "
"Support writing right-to-left (e.g. Arabian, Hebrew)."
msgstr ""

#: ../../textwriter.rst:115 cd7cda793f0a41099e821fd0c756bd00
msgid "Changed in v1.18.15: Prefer small caps if supported by the font."
msgstr ""

#: ../../textwriter.rst:117 3afe7548643d4ba9abfc282a988f321f
msgid ""
"Fill a given rectangle with text in horizontal writing mode. This is a "
"convenience method to use as an alternative for :meth:`append`."
msgstr ""

#: ../../textwriter.rst:119 e3760c1cc0654d8180a2cfaf0cf8dcc5
msgid "the area to fill. No part of the text will appear outside of this."
msgstr ""

#: ../../textwriter.rst:120 e127b220085c4d8c85f0b5ac6e1e42ab
msgid ""
"the text. Can be specified as a (UTF-8) string or a list / tuple of "
"strings. A string will first be converted to a list using *splitlines()*."
" Every list item will begin on a new line (forced line breaks)."
msgstr ""

#: ../../textwriter.rst:121 6aaaf696c230473f87cecec2960d2cb5
msgid ""
"*(new in v1.17.3)* start storing at this point. Default is a point near "
"rectangle top-left."
msgstr ""

#: ../../textwriter.rst:122 c47cca0a803f4dd9900071657611947a
msgid "the :ref:`Font`, default `fitz.Font(\"helv\")`."
msgstr ""

#: ../../textwriter.rst:123 90de752b75a24fb59da9d7e7e6096c3f
msgid "the fontsize."
msgstr ""

#: ../../textwriter.rst:124 f35c8674d5574d63a7b829f180941e62
msgid ""
"text alignment. Use one of TEXT_ALIGN_LEFT, TEXT_ALIGN_CENTER, "
"TEXT_ALIGN_RIGHT or TEXT_ALIGN_JUSTIFY."
msgstr ""

#: ../../textwriter.rst:125 0f26a97823be4089ad331c38243af9f9
msgid ""
"*(New in v1.18.9)* whether the text should be written from right to left."
" Applicable for languages like Arabian or Hebrew. Default is *False*. If "
"*True*, any Latin parts are automatically reverted. You must still set "
"the alignment (if you want right alignment), it does not happen "
"automatically -- the other alignment options remain available as well."
msgstr ""

#: ../../textwriter.rst:126 fb9d7441c07a46c3b198da8109c245fe
msgid ""
"on text overflow do nothing, warn, or raise an exception. Overflow text "
"will never be written. **Changed in v1.18.9:**  * Default is *None*. * "
"The list of overflow lines will be returned."
msgstr ""

#: ../../textwriter.rst:126 56af91d91b284298b5e70b1e1c6a3d85
msgid ""
"on text overflow do nothing, warn, or raise an exception. Overflow text "
"will never be written. **Changed in v1.18.9:**"
msgstr ""

#: ../../textwriter.rst:128 dc393116ff3d4f0b8b018b85a659fd79
msgid "Default is *None*."
msgstr ""

#: ../../textwriter.rst:129 94b5643c34b74c579fed3543b0edc464
msgid "The list of overflow lines will be returned."
msgstr ""

#: ../../textwriter.rst 0e95ca862e404ebe9646ddeecc2788d9
#: 1fa3a39b04e34c6ea7a33051248232b1 4e64e55c5b74462aae45b5060658f99b
#: b4f6fb230ca046bcb3bb98563ade7836 e90d1ff4c9c14d55bb3b7b0e86c24f49
#: f78cf6844c174f0485acef1ae2362720
msgid "Return type"
msgstr ""

#: ../../textwriter.rst:134 cb1353753d674822a3e8f2a50362d901
msgid ""
"*New in v1.18.9* -- List of lines that did not fit in the rectangle. Each"
" item is a tuple `(text, length)` containing a string and its length (on "
"the page)."
msgstr ""

#: ../../textwriter.rst:136 41926b860d3a42988482697b47e56a34
msgid ""
"Use these methods as often as is required -- there is no technical limit "
"(except memory constraints of your system). You can also mix "
":meth:`append` and text boxes and have multiple of both. Text positioning"
" is exclusively controlled by the insertion point. Therefore there is no "
"need to adhere to any order. *(Changed in v1.18.0:)* Raise an exception "
"for an unsupported font -- checked via :attr:`Font.is_writable`."
msgstr ""

#: ../../textwriter.rst:141 3c9efc7fcbb8424e80b2cce89bbc308c
msgid ""
"Write the TextWriter text to a page, which is the only mandatory "
"parameter. The other parameters can be used to temporarily override the "
"values used when the TextWriter was created."
msgstr ""

#: ../../textwriter.rst:143 c8710cf3918845ed8c853fc54ba447b8
msgid "write to this :ref:`Page`."
msgstr ""

#: ../../textwriter.rst:144 ../../textwriter.rst:145
#: e03b54e71b864538aefc71a8816f6662 e79924201eda4a52bfe34333b8ef7f37
msgid "override the value of the TextWriter for this output."
msgstr ""

#: ../../textwriter.rst:146 29f337b9f9a546a9a904e50af6f4ae21
msgid ""
"modify the text appearance by applying a matrix to it. If provided, this "
"must be a sequence *(fixpoint, matrix)* with a point-like *fixpoint* and "
"a matrix-like *matrix*. A typical example is rotating the text around "
"*fixpoint*."
msgstr ""

#: ../../textwriter.rst:147 2883f6fd0b3d443a8e5865a00c9166f8
msgid "put in foreground (default) or background."
msgstr ""

#: ../../textwriter.rst:148 3836385b2ae74915bbc4dc6ad78b9a93
msgid "*(new in v1.18.4)* the :data:`xref` of an :data:`OCG` or :data:`OCMD`."
msgstr ""

#: ../../textwriter.rst:149 aa546896546c4059b6a41a1ba2bb1429
msgid ""
"The PDF `Tr` operator value. Values: 0 (default), 1, 2, 3 (invisible).  "
".. image:: images/img-rendermode.*"
msgstr ""

#: ../../textwriter.rst:149 3d11fa3f913d4c6aaa463e467788d04f
msgid "The PDF `Tr` operator value. Values: 0 (default), 1, 2, 3 (invisible)."
msgstr ""

#: ../../textwriter.rst:156 d7d488f00b38451482a470917ef258c0
msgid "The area currently occupied."
msgstr ""

#: ../../textwriter.rst:158 ../../textwriter.rst:182
#: 78e6832754464b43bca4991f3d18acc7 c580de5251634d34b263f783c697788e
msgid ":ref:`Rect`"
msgstr ""

#: ../../textwriter.rst:162 fcd03d28ea9547e28f61d9e15f6ce3ff
msgid ""
"The \"cursor position\" -- a :ref:`Point` -- after the last written "
"character (its bottom-right)."
msgstr ""

#: ../../textwriter.rst:164 25be25f8960c49bfa11e1ef0df8356e6
msgid ":ref:`Point`"
msgstr ""

#: ../../textwriter.rst:168 2c710ee458a74872ada7ace5b7ecb539
msgid "The text opacity (modifiable)."
msgstr ""

#: ../../textwriter.rst:174 6adf6ce4428549bcab67674a3d7cdaf7
msgid "The text color (modifiable)."
msgstr ""

#: ../../textwriter.rst:180 785687532792460a8e02d952d7e45c5b
msgid ""
"The page rectangle for which this TextWriter was created. Must not be "
"modified."
msgstr ""

#: ../../textwriter.rst:185 5abe42f2edd342e3805fa49e27602eed
msgid ""
"To see some demo scripts dealing with TextWriter, have a look at `this "
"<https://github.com/pymupdf/PyMuPDF-Utilities/tree/master/textwriter>`_ "
"repository."
msgstr ""

#: ../../textwriter.rst:187 eb199cbffaa3480d9b7a0449f1fe449f
msgid "Opacity and color apply to **all the text** in this object."
msgstr ""

#: ../../textwriter.rst:188 1879250c517248079dc61e5cdad26696
msgid ""
"If you need different colors / transparency, you must create a separate "
"TextWriter. Whenever you determine the color should change, simply append"
" the text to the respective TextWriter using the previously returned "
":attr:`last_point` as position for the new text span."
msgstr ""

#: ../../textwriter.rst:189 301946f20ea94f27bc319807411f3acc
msgid ""
"Appending items or text boxes can occur in arbitrary order: only the "
"position parameter controls where text appears."
msgstr ""

#: ../../textwriter.rst:190 c9d8b62fae3f4cb6a909266e67f70103
msgid ""
"Font and fontsize can freely vary within the same TextWriter. This can be"
" used to let text with different properties appear on the same displayed "
"line: just specify *pos* accordingly, and e.g. set it to "
":attr:`last_point` of the previously added item."
msgstr ""

#: ../../textwriter.rst:191 ac9ca51775964d7e99d207ca5207d88c
msgid ""
"You can use the *pos* argument of :meth:`TextWriter.fill_textbox` to set "
"the position of the first text character. This allows filling the same "
"textbox with contents from different :ref:`TextWriter` objects, thus "
"allowing for multiple colors, opacities, etc."
msgstr ""

#: ../../textwriter.rst:192 4454ebacffa14748871ada44289fd21e
msgid ""
"MuPDF does not support all fonts with this feature, e.g. no Type3 fonts. "
"Starting with v1.18.0 this can be checked via the font attribute "
":attr:`Font.is_writable`. This attribute is also checked when using "
":ref:`TextWriter` methods."
msgstr ""

#: ../../footer.rst:-1 bd0eab72c65045b986fde2c2323b9106
msgid "Discord logo"
msgstr ""

