# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2015-2024, Artifex
# This file is distributed under the same license as the PyMuPDF package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2024.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: PyMuPDF 1.24.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2024-05-01 16:48+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ja\n"
"Language-Team: ja <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.10.3\n"

#: ../../header.rst:-1 ffd3e7057f514f9b9ff44479bb5b2fff
msgid "Artifex"
msgstr ""

#: ../../header.rst:-1 09a474b289fe4ebcbd83747929de276b
msgid ""
"PyMuPDF is a high-performance Python library for data extraction, "
"analysis, conversion & manipulation of PDF (and other) documents."
msgstr ""

#: ../../header.rst:-1 becac363cb7748df98799a247432c3b9
msgid ""
"PDF Text Extraction, PDF Image Extraction, PDF Conversion, PDF Tables, "
"PDF Splitting, PDF Creation, Pyodide, PyScript"
msgstr ""

#: ../../recipes-ocr.rst:17 31525020ff744203ab8e4609085154e3
msgid "OCR - Optical Character Recognition"
msgstr ""

#: ../../recipes-ocr.rst:19 70f1b4f66e994695b5eaa33affb4bb96
msgid ""
"|PyMuPDF| has integrated support for OCR (Optical Character Recognition)."
" It is possible to use OCR for both, images (via the :ref:`Pixmap` class)"
" and for document pages."
msgstr ""

#: ../../recipes-ocr.rst:21 f6d13399a9eb44ab8156a7074337fd11
msgid ""
"The feature is currently based on Tesseract-OCR which must be installed "
"as a separate application -- see the installation chapter."
msgstr ""

#: ../../recipes-ocr.rst:24 af12d2bad83f4352a9e5c66b526751da
msgid "How to OCR an Image"
msgstr ""

#: ../../recipes-ocr.rst:25 e933f63d241c49fa9c060d4560704cd3
msgid ""
"A supported image must first be converted to a :ref:`Pixmap`. The Pixmap "
"can then be saved to a 1-page PDF. This page will look like the original "
"image with the same width and height. It will contain a layer of text as "
"recognized by Tesseract."
msgstr ""

#: ../../recipes-ocr.rst:27 05e0366e2c414d788c37ab9a4127b182
msgid ""
"The PDF can be generated via one of the methods "
":meth:`Pixmap.pdfocr_save` or :meth:`Pixmap.pdfocr_tobytes`, as a file on"
" disk or as a PDF in memory."
msgstr ""

#: ../../recipes-ocr.rst:29 b96fc4f4e3d84f76934be3135192b4de
msgid ""
"The text can be extracted and searched with the usual text extraction and"
" search methods (:meth:`Page.get_text`, :meth:`Page.search_for`, etc.). "
"Please also note the following important facts and prerequisites:"
msgstr ""

#: ../../recipes-ocr.rst:31 43e54c3cc05b4b5585ea453c3839bf16
msgid ""
"When converting the image to a Pixmap, please confirm that the color "
"space is RGB and alpha is `False` (no transparency). Convert the original"
" Pixmap if necessary."
msgstr ""

#: ../../recipes-ocr.rst:32 8f28a3cc6be94de0af1ab2cacb284ee1
msgid ""
"All text is written as \"hidden\" with Tesseract's own `GlyphLessFont`, a"
" mono-spaced font with metrics comparable to Courier."
msgstr ""

#: ../../recipes-ocr.rst:33 9450c608017b4bdcbdd9f2aa85b33af8
msgid ""
"All text has the properties regular and black (i.e. no bold, no italic, "
"no information about the original fonts)."
msgstr ""

#: ../../recipes-ocr.rst:34 e891d79044a244f9a99ed8bfec74a58c
msgid ""
"Tesseract does not recognize vector graphics (i.e. no drawings / line-"
"art)."
msgstr ""

#: ../../recipes-ocr.rst:36 4ae89317d6da4f3dab02be0e3d32fd13
msgid "This approach is also recommended to OCR a complete scanned PDF:"
msgstr ""

#: ../../recipes-ocr.rst:38 037620616bb8432194a78237a63be2aa
msgid "Render each page to a :ref:`Pixmap` with desired resolution"
msgstr ""

#: ../../recipes-ocr.rst:39 bbb3d11b8d914808ab61648715765aba
msgid "Append the resulting 1-page PDF to the output PDF"
msgstr ""

#: ../../recipes-ocr.rst:42 548bb18034af43d6978b2147b6af2dcb
msgid "How to OCR a Document Page"
msgstr ""

#: ../../recipes-ocr.rst:43 505ecd77862a4703a3a5f782a59dc584
msgid ""
"Any supported document page can be OCR-ed -- either the complete page or "
"only the image areas on it."
msgstr ""

#: ../../recipes-ocr.rst:45 ca84d390514649cc96543b0da127cd8d
msgid ""
"Because optical character recognition is about one thousand times slower "
"than standard text extraction, we make sure to do OCR only once per page "
"and store the result in a :ref:`TextPage`. Using this TextPage for all "
"subsequent extractions and text searches will then happen with "
"|PyMuPDF|'s usual top speed."
msgstr ""

#: ../../recipes-ocr.rst:47 1f890018c3964fe0b5c8fe3e6051831c
msgid "To OCR a document page, follow this approach:"
msgstr ""

#: ../../recipes-ocr.rst:49 ab979876f36f4d609da1092e7d6b6cff
msgid ""
"Determine whether OCR is needed / beneficial at all. A number of criteria"
" can be used for this decision, like:"
msgstr ""

#: ../../recipes-ocr.rst:51 8c045937992d47b78c82a6d8df08a06c
msgid "page is completely covered by an image"
msgstr ""

#: ../../recipes-ocr.rst:52 dbef0a4fb18b46018789d51d5b510402
msgid "no text exists on the page"
msgstr ""

#: ../../recipes-ocr.rst:53 7a8aadb2cef9497c90139672ac9cce73
msgid "thousands of small vector graphics (indicating *simulated* text)"
msgstr ""

#: ../../recipes-ocr.rst:55 68d85f5f93b8486cab4fe6ccb2c4faf8
msgid ""
"OCR the page and store result in a :ref:`TextPage` object using an "
"instruction like `tp = page.get_textpage_ocr(...)`."
msgstr ""

#: ../../recipes-ocr.rst:57 57c5b61b19ab4ed0820045b1e0ace284
msgid ""
"Refer to the produced :ref:`TextPage` in all subsequent text extractions "
"and searches via the `textpage=tp` parameter."
msgstr ""

#: ../../footer.rst:60 245349d25ace430f8e58fd2f0af91c11
msgid "This documentation covers all versions up to |version|."
msgstr ""

#: ../../footer.rst:-1 ce2657706c384ee7b6144eea3e030bae
msgid "Discord logo"
msgstr ""

