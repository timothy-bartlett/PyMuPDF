.. _TextPage:

================
**TextPage**
================

TextPage contains all the text in a page. Create a new TextPage by :meth:`Context.new_text_page`.

Methods
==========

====================================== ======================================================================
:meth:`~TextPage.get_text_len`         Get the length of the text.
:meth:`~TextPage.new_text_device`      Create a device to extract the text on a page.
:meth:`~TextPage.print_text_page`      Output a page to a file in UTF-8 format.
:meth:`~TextPage.print_text_page_html` Output a page to a file in HTML format.
:meth:`~TextPage.print_text_page_xml`  Output a page to a file in XML format.
:meth:`~TextPage.search`               Search string in the current page.
:meth:`~TextPage.text_char_at`         Get the :ref:`TextChar` at the given position.
====================================== ======================================================================

Class API
==========

.. class:: TextPage

   .. method:: get_text_len(self)

      Get the length of the text. Newline character counted.

      :rtype: int

   .. method:: new_text_device(sheet)

      Create a device to extract the text on a page.

      Gather and sort the text on a page into spans of uniform style, arranged into lines and blocks by reading order. The reading order is determined by various heuristics, so may not be accurate.

      :param `sheet`: The text sheet to which styles should be added. This can either be a newly created (empty) text sheet by :meth:`Context.new_text_sheet`, or one containing styles from a previous text device. The same sheet cannot be used in multiple threads simultaneously.
      :type `sheet`: TextSheet

      :rtype: :ref:`Device`

   .. method:: print_text_page(self, filename)

      Output a page to a file in UTF-8 format.

      :param `filename`:
      :type `filename`: string

   .. method:: print_text_page_html(self, filename)

      Output a page to a file in HTML format.

      :param `filename`:
      :type `filename`: string

   .. method:: print_text_page_xml(self, filename)

      Output a page to a file in XML format.

      :param `filename`:
      :type `filename`: string

   .. method:: search(self, s, ic)

      Search string ``s``.

      :param `s`:
      :type `s`: string

      :param `ic`: Ignore case or not.
      :type `ic`: int

      :rtype: list
      :returns: A python list. Each element of the list is a list of :ref:`BBox` (without transformation) where ``s`` is found in the page. An empty list is returned if ``s`` not found.

   .. method:: text_char_at(self, pos)

      Get the :ref:`TextChar` at the given position.

      :param `pos`: Position of the text char. Should be smaller than text length.
      :type `pos`: int

      :rtype: :ref:`TextChar`

