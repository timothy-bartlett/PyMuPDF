.. raw:: pdf

    PageBreak

.. _linkDest:

================
linkDest
================
Class representing the `dest` property of an outline entry or a link. Describes the link to which such entries point.


=========================== ====================================
**Attribute**               **Short Description**
=========================== ====================================
:attr:`linkDest.dest`       destination
:attr:`linkDest.fileSpec`   file specification (path, filename)
:attr:`linkDest.flags`      descriptive flags
:attr:`linkDest.isMap`      is this a MAP?
:attr:`linkDest.isUri`      is this a URI?
:attr:`linkDest.kind`       kind of destination
:attr:`linkDest.lt`         top left coordinates
:attr:`linkDest.named`      name if named destination
:attr:`linkDest.newWindow`  name of new window
:attr:`linkDest.page`       page number
:attr:`linkDest.rb`         bottom right coordinates
:attr:`linkDest.uri`        URI
=========================== ====================================

**Class API**

.. class:: linkDest

   .. attribute:: dest

      Target destination name if specified (only if :attr:`linkDest.kind` = :data:`LINK_GOTOR`).

      :rtype: string

   .. attribute:: fileSpec

      Contains the filename (including any path specifications) this link points to, if applicable (only if :attr:`linkDest.kind` = :data:`LINK_GOTOR`).

      :rtype: string

   .. attribute:: flags

      A one-byte bitfield consisting of indicators describing the validity and meaning of the different aspects of the destination. As far as possible, link destinations are constructed such that e.g. :attr:`linkDest.lt` and :attr:`linkDest.rb` can be treated as defining a bounding box, though the validity flags (see ``LINK_FLAG_*`` values) indicate which of the values were actually specified. Note that the numerical values for each of the LINK_FLAGs are powers of 2 and thus indicate the position of the bit to be tested. More than one bit can be ``True``, so do not test for the value of the integer.

      :rtype: int

   .. attribute:: isMap

      This flag specifies whether to track the mouse position when the URI is resolved. Default value: False.

      :rtype: bool

   .. attribute:: isUri

      Specifies whether this destination is an internet resource.

      :rtype: bool

   .. attribute:: kind

      Indicates the type of this destination, like a place in this document, a URI, a file launch, an action or a place in another file. Look at index entries ``FZ_LINK_*`` to see the names and numerical values.

      :rtype: int

   .. attribute:: lt

      The top left :ref:`Point` of the destination.

      :rtype: :ref:`Point`

   .. attribute:: named

      This destination refers to some named action to perform (e.g. a javascript, see Adobe PDF documentation).

      :rtype: string

   .. attribute:: newWindow

      If true, the destination should be launched in a new window.

      :rtype: bool

   .. attribute:: page

      The page number (in this or the target document) this destination points to. Only set if :attr:`linkDest.kind` = :data:`LINK_GOTOR` or :attr:`linkDest.kind` = :data:`LINK_GOTO`. Can be ``-1`` if :attr:`linkDest.kind` = :data:`LINK_GOTOR`, in which case :attr:`linkDest.dest` determines where to go (to be resolved by target document).

      :rtype: int

   .. attribute:: rb

      The bottom right :ref:`Point` of this destination.

      :rtype: :ref:`Point`

   .. attribute:: uri

      The name of the URI this destination points to.

      :rtype: string

