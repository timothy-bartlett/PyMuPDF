.. raw:: pdf

    PageBreak

.. _Pixmap:

================
Pixmap
================

Pixmaps represent a set of pixels for a 2 dimensional region. Each pixel consists of n bytes ("components"), plus always an alpha. The data is in premultiplied alpha when rendering, but non-premultiplied for colorspace conversions and rescaling.

============================ ===========================================
**Method / Attribute**       **Short Description**
============================ ===========================================
:meth:`Pixmap.clearWith`     Clears a pixmap (with given value)
:meth:`Pixmap.writePNG`      Saves a pixmap as a png file
:meth:`Pixmap.invertIRect`   Invert the pixels of a given bounding box
:attr:`Pixmap.samples`       The components data for all pixels
:attr:`Pixmap.h`             Height of the region in pixels
:attr:`Pixmap.w`             Width of the region in pixels
:attr:`Pixmap.x`             X-coordinate of top-left corner of pixmap
:attr:`Pixmap.y`             Y-coordinate of top-left corner of pixmap
:attr:`Pixmap.n`             Number of components per pixel
:attr:`Pixmap.xres`          Resolution in X-direction
:attr:`Pixmap.yres`          Resolution in Y-direction
:attr:`Pixmap.interpolate`   Interpolation method indicator
============================ ===========================================

**Class API**

.. class:: Pixmap

   .. method:: clearWith(self, value=0)

      Clears a pixmap.

      :param `value`: Values in the range 0 to 255 are valid. Each color byte of each pixel will be set to this value, while alpha will always be set to 255 (non-transparent). Default is 0.
      :type `value`: int

   .. attribute:: samples

      The color and transparency values for all pixels. Samples is a memory area of size ``width * height * n`` bytes. The first n bytes are components 0 to n-1 for the pixel at point (x,y). Each successive n bytes gives another pixel in scanline order. Subsequent scanlines follow each other with no padding. E.g. for an RGBA colorspace this means, ``samples`` is a bytearray like ``..., R, G, B, A, ...``, and the four byte values R, G, B, A describe one pixel.

      :rtype: bytearray

   .. attribute:: w

      The width of the region in pixels.

      :rtype: int

   .. attribute:: h

      The height of the region in pixels.

      :rtype: int

   .. attribute:: x

      X-coordinate of top-left corner

      :rtype: int

   .. attribute:: y

      Y-coordinate of top-left corner

      :rtype: int

   .. attribute:: n

      Number of components per pixel. This number depends on the chosen colorspace: :data:`CS_GRAY` = 2, :data:`CS_RGB` = 4, :data:`CS_CMYK` = 5.

      :rtype: int

   .. attribute:: xres

      Horizontal resolution in pixels per inch.

      :rtype: int

   .. attribute:: yres

      Vertical resolution in pixels per inch

      :rtype: int

   .. method:: invertIRect(self, irect)

      Invert all pixels in :ref:`IRect`. All components except alpha are inverted.

      :param `irect`: Invert all the pixels in the irect. If omitted, the whole pixmap will be inverted.
      :type `IRect`: :ref:`IRect`

   .. method:: writePNG(self, filename, savealpha=False)

      Save a pixmap as a png file.

      :param `filename`: The filename to save as (including extension).
      :type `filename`: string

      :param `savealpha`: Save alpha or not.
      :type `savealpha`: bool

   .. attribute:: interpolate

      A boolean flag set to ``True`` if the image will be drawn using linear interpolation, or set to ``False`` if image is created using nearest neighbour sampling.

      :rtype: bool
