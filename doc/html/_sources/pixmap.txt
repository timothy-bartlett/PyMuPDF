.. _Pixmap:

================
**Pixmap**
================

Pixmaps represent a set of pixels for a 2 dimensional region of a plane. Each pixel has n components per pixel, the last of which is always alpha. The data is in premultiplied alpha when rendering, but non-premultiplied for colorspace conversions and rescaling.


Methods
=======

============================ ===========================================
:meth:`~Pixmap.clearWith`    Clears a pixmap (with given value).
:meth:`~Pixmap.writePNG`     Saves a pixmap as a png file.
:attr:`~Pixmap.samples`      The components data for all pixels.
:meth:`~Pixmap.invertIRect`  Invert the pixels of a given bounding box.
:meth:`~Pixmap.interpolate`  unknown 
:meth:`~Pixmap.h`            Height of the region in pixels.
:meth:`~Pixmap.w`            Width of the region in pixels
:meth:`~Pixmap.x`            X-coordinate of top-left corner of pixmap
:meth:`~Pixmap.y`            Y-coordinate of top-left corner of pixmap
:meth:`~Pixmap.n`            Number of components per pixel
:meth:`~Pixmap.xres`         Resolution in X-direction
:meth:`~Pixmap.yres`         Resolution in Y-direction
============================ ===========================================

Class API
==========

.. class:: Pixmap

   .. method:: clearWith(self, value=0)

      Clears a pixmap.

      :param `value`: Values in the range 0 to 255 are valid. Each component sample for each pixel in the pixmap will be set to this value, while alpha will always be set to 255 (non-transparent). If not given, all components of all pixels in a pixmap will be set to 0.
      :type `value`: int

   .. attribute:: samples

      The components data for all pixels. Samples is a block of memory width * height * n bytes of memory in which the components are stored. The first n bytes are components 0 to n-1 for the pixel at (x,y). Each successive n bytes gives another pixel in scanline order. Subsequent scanlines follow on with no padding. E.g. for RGBA this means, that each pixel ist described by the four bytes r, g, b, alpha.

      :rtype: bytearray

   .. attribute:: w

      The width of the region in pixels.

      :rtype: int

   .. attribute:: h

      The height of the region in pixels.

      :rtype: int

   .. attribute:: x

      X-coordinate of top-left corner

      :rtype: int

   .. attribute:: y

      Y-coordinate of top-left corner

      :rtype: int

   .. attribute:: n

      Number of components per pixel

      :rtype: int

   .. attribute:: xres

      Horizontal resolution

      :rtype: int

   .. attribute:: yres

      Vertical resolution

      :rtype: int

   .. method:: invertIRect(self, irect)

      Invert all the pixels in :ref:`IRect`. All components are inverted(except alpha, which is unchanged).

      :param `irect`: Invert all the pixels in the irect. If not given, the whole pixmap will be inverted.
      :type `IRect`: :ref:`IRect`

   .. method:: writePNG(self, filename, savealpha)

      Save a pixmap as a png.

      :param `filename`: The filename to save as (including extension).
      :type `filename`: string

      :param `savealpha`: Save alpha or not.
      :type `savealpha`: int

.. method:: interpolate

      Save a pixmap as a png.

      :param `filename`: The filename to save as (including extension).
      :type `filename`: string

      :param `savealpha`: Save alpha or not.
      :type `savealpha`: int
