.. raw:: pdf

    PageBreak

.. _Annot:

================
Annot
================
Quote from the Adobe manual: "An annotation associates an object such as a note, sound, or movie with a location on a page of a PDF document, or provides a way to interact with the user by means of the mouse and keyboard."

This class supports accessing such annotations - not only for PDF files, but for all MuPDF supported document types. However, a minority of properties applies to non-PDF documents.


=========================== ==============================================================
**Attribute**               **Short Description**
=========================== ==============================================================
:meth:`Annot.getPixmap`     image of the annotation as a pixmap
:attr:`Annot.rect`          rectangle containing the annotation
:attr:`Annot.next`          link to the next annotation
:attr:`Annot.type`          PDF only: type of the annotation
:attr:`Annot.content`       PDF only: content of a text annotation
:attr:`Annot.name`          PDF only: name of an annotation
:attr:`Annot.title`         PDF only: title of the pop-up window
:attr:`Annot.borderColor`   PDF only: border color
:attr:`Annot.fillColor`     PDF only: interior color
:attr:`Annot.intentType`    PDF only: subtype
:attr:`Annot.creationDate`  PDF only: timestamp of creation
:attr:`Annot.modDate`       PDF only: timestamp of last modification
:attr:`Annot.flags`         PDF only: annotation flags
:attr:`Annot.lineEnds`      PDF only: start / end appearance of line-type annotations
:attr:`Annot.vertices`      PDF only: point coordinates of polygons / polylines
:attr:`Annot.inkList`       PDF only: point coordinates of free hand drawings
=========================== ==============================================================

**Class API**

.. class:: Annot

   .. method:: getPixmap(matrix = fitz.Ientity, colorspace = fitz.csRGB)

      Creates a pixmap from the annotation as it appears on the page in untransformed coordinates. The pixmap's :ref:`IRect` equals ``Annot.rect.round()`` (see below).

      :param `matrix`: a matrix to be used for image creation. Default is the ``fitz.Identity`` matrix.
      :type `matrix`: :ref:`Matrix`

      :param `cspace`: a colorspace to be used for image creation. Default is ``fitz.csRGB``.
      :type `cspace`: :ref:`Colorspace`

      :rtype: :ref:`Pixmap`

   .. attribute:: rect

      The rectangle containing the annotation in untransformed coordinates.

      :rtype: :ref:`Rect`

   .. attribute:: next

      The next annotation on this page or ``None``.

      :rtype: ``Annot``

   .. attribute:: type

      Meaningful for PDF only: A number and a string describing the annotation type, e.g. ``[12, 'Stamp']``. ``[]`` if not PDF. See the appendix :ref:`Annotation Types` for a list of possible values and their meanings.

      :rtype: list

   .. attribute:: content

      Meaningful for PDF only: A string containing the text for type ``Text`` and ``FreeText`` annotations. For other types the entry is optional. Empty if not specified or not a PDF.

      :rtype: str

   .. attribute:: name

      Meaningful for PDF only: A string containing the name of the annotation. Contains an empty string if not specified or not a PDF. For e.g. ``[12, 'Stamp']`` type annotations it will contain the stamp text like ``Sold`` or ``Experimental``.

      :rtype: str

   .. attribute:: title

      Meaningful for PDF only: A string containing the title of the annotation's pop-up window. By convention, this is normally used for the name of the user who entered the annotation.

      :rtype: str

   .. attribute:: creationDate

      Meaningful for PDF only: A string containing the PDF timestamp of the annotation's creation.

      :rtype: str

   .. attribute:: modDate

      Meaningful for PDF only: A string containing the PDF timestamp of the annotation's last modification.

      :rtype: str

   .. attribute:: flags

      Meaningful for PDF only: An integer with its low order byte containing flags for how the annotation should be presented. See section :ref:`Annotation Flags` for details.

      :rtype: int

   .. attribute:: lineEnds

      Meaningful for PDF only: A list specifying the starting and the ending appearance of annotations of types ``Line``, ``PolyLine``, etc. An example would be ``['None', 'OpenArrow']``. ``[]`` if not specified or not applicable. For possible values and descriptions in this list, see the Adobe manual, table 8.27 on page 630.

      :rtype: list

   .. attribute:: vertices

      Meaningful for PDF only: A list of float coordinates for annotations of type ``PolyLine`` and ``Polygon``. Every two floats specify the points ("vertices") that are connected with straight lines to form the graphical image of the annotation. ``[]`` when not applicable.

      :rtype: list

   .. attribute:: inkList

      Meaningful for PDF only: A list of lists of point coordinates (like in vertices) for free hand drawings. The number of lists designates the number of disconnected lines in the drawing.

      :rtype: list

   .. attribute:: intentType

      Meaningful for PDF only: A string specifying a subtype, e.g. ``LineArrow`` for type ``Line``.

      :rtype: str

   .. attribute:: fillColor

      Meaningful for PDF only: A list of floats in range ``[0.0, 1.0]`` specifying the interior color of objects like line ends. The length of the list determines the colorspace used: 1 = GRAY, 3 = RGB, 4 = CMYK. So ``[1.0, 0.0, 0.0]`` stands for RGB ``red``.

      :rtype: list

   .. attribute:: borderColor

      Meaningful for PDF only: A list of floats in range ``[0.0, 1.0]`` specifying the border color. The length of the list determines the colorspace used: 1 = GRAY, 3 = RGB, 4 = CMYK.

      :rtype: list

