.. raw:: pdf

    PageBreak

This version of PyMuPDF is based on MuPDF library source code version 1.9a published on April 21, 2016.

Please have a look at MuPDF's website to see which changes and enhancements are contained herein.

Changes in Version 1.9.2
=========================
Changes compared to version 1.9.1:

* ``fitz.open()`` now accepts all of the formats ``open(filename)``, ``open(filename, None)``, ``open(filetype, stream)``. Type of memory area ``stream`` may be ``str`` (Python 2), ``bytes`` (Python 3) or ``bytearray`` (Python 2 and 3).

* New method ``Document.insertPDF()`` (PDFs only) inserts a range of pages of another PDF.


Changes in Version 1.9.1
=========================
Changes compared to version 1.8.0:

* New methods ``getRectArea()`` for both ``fitz.Rect`` and ``fitz.IRect``
* Pixmaps can now be created directly from files using the new constructor ``fitz.Pixmap(filename)``.
* The Pixmap constructor ``fitz.Pixmap(image)`` has been extended accordingly.
* ``fitz.Rect`` can now be created with all possible combinations of points and coordinates.
* PyMuPDF classes and methods now all contain  __doc__ strings,  most of them created by SWIG automatically. While the PyMuPDF documentation certainly is more detailed, this feature should help a lot when programming in Python-aware IDEs.
* A new document method of ``getPermits()`` returns the permissions associated with the current access to the document (print, edit, annotate, copy), as a Python dictionary.
* The identity matrix ``fitz.Identity`` is now **immutable**.
* The new document method ``select(list)`` removes all pages from a document that are not contained in the list. Pages can also be duplicated and re-arranged.
* Various improvements and new members in our demo and examples collections. Perhaps most prominently: ``PDF_display`` now supports scrolling with the mouse wheel, and there is a new example program ``wxTableExtract`` which allows to graphically identify and extract table data in documents.
* ``fitz.open()`` is now an alias of ``fitz.Document()``.
* New pixmap method ``getPNGData()`` which will return a bytearray formatted as a PNG image of the pixmap.
* New pixmap method ``samplesRGB()`` providing a ``samples`` version with alpha bytes stripped off (RGB colorspaces only).
* New pixmap method ``samplesAlpha()`` providing the alpha bytes only of the ``samples`` area.
* New iterator ``fitz.Pages(doc)`` over a document's set of pages.
* New matrix methods ``invert()`` (calculate inverted matrix), ``concat()`` (calculate matrix product), ``preTranslate()`` (perform a shift operation).
* New ``IRect`` methods ``intersect()`` (intersection with another rectangle), ``translate()`` (perform a shift operation).
* New ``Rect`` methods ``intersect()`` (intersection with another rectangle), ``transform()`` (transformation with a matrix), ``includePoint()`` (enlarge rectangle to also contain a point), ``includeRect()`` (enlarge rectangle to also contain another one).
* Documented ``Point.transform()`` (transform a point with a matrix).
* ``Matrix``, ``IRect``, ``Rect`` and ``Point`` classes now support compact, algebraic formulations for manipulating such objects.
* Incremental saves for changes are possible now using the call pattern ``doc.save(doc.name, incremental=True)``.
* A PDF's metadata can now be deleted, set or changed by document method ``setMetadata()``. Supports incremental saves.
* A PDF's bookmarks (or table of contents) can now be deleted, set or changed with the entries of a list using document method ``setToC(list)``. Supports incremental saves.