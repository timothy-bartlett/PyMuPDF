=============
Introduction
=============
**python-fitz** is a Python binding for `MuPDF <http://www.mupdf.com/>`_ - "a lightweight PDF and XPS viewer".

MuPDF can access files in PDF, XPS, OpenXPS and EPUB (e-book) formats.

These are files with extensions ``*.pdf``, ``*.xps``, ``*.oxps`` or ``*.epub`` (so in essence, with this binding you can develop **e-book viewers in Python** ...)

python-fitz provides access to all important functions of MuPDF from within a Python environment. Nevertheless, this function set is continuously being increased.

MuPDF stands out among all similar products for its top rendering capability and unsurpassed processing speed.

You can check this out yourself:
Compare the various free PDF-viewers. In terms of speed and rendering quality `SumatraPDF <http://www.sumatrapdfreader.org/>`_ ranges at the top - and it is based on  MuPDF!

While python-fitz has been available since several years for an earlier version of MuPDF (1.2), it was until only recently (mid May 2015), that its creator and a few co-workers decided to elevate it to the current release 1.7a of MuPDF.

And we are determined to keep python-fitz current with future MuPDF changes!

This work is almost completed: we are now mainly working to bring the documentation up to date.

If you know how to build MuPDF on your platform (or you could use our development binaries - just drop a note), then you can use this repository to **make PDF, XPS, OpenXPS and EPUB available** to your Python scripts already **today** - everything works!

python-fitz has been tested and can be used today on Linux, Windows 7, Python 2 and Python 3.

**So, what do we have?**

* We have ready and working installation procedures for Linux and Windows.

* We have example and demo scripts for typical use cases that you can take as templates for your development.

* We have greatly simplified the installation procedure for Windows x86 and Linux platforms.


**So, what is still missing then?**

* New documentation is almost complete - you are looking at the result. Do also have a look at the demos and examples provided.

* Some tests are still outstanding, e.g. for the combination Win & Python 3.

We invite you to join our efforts by contributing to the the wiki pages, by testing what is there - and, of course, by submitting issues and bugs to the site!
